[{"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\index.js":"1","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\reportWebVitals.js":"2","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\App.js":"3","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\songsactions.js":"4","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\artistsactions.js":"5","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\usersactions.js":"6","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\albumactions.js":"7","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Sidedrawer.js":"8","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\AdminRoute.js":"9","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\ClientRoute.js":"10","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\AdminHome.js":"11","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Trendingtable.js":"12","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\User.js":"13","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Songs.js":"14","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Albums.js":"15","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Artist.js":"16","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Admintrending.js":"17","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Signin.js":"18","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Adminpopular.js":"19","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Admintopcharts.js":"20","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\CreateAccount.js":"21","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\ResetLogin.js":"22","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\DetailSignUp.js":"23","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\screens\\BrowseMain.js":"24","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\screens\\HomeScreen.js":"25","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\Layout.js":"26","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\HomeActions.js":"27","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\Form.js":"28","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addchart.js":"29","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\crm-total-vendor.js":"30","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\crm-total-lead.js":"31","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\crm-total-invoice.js":"32","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\client\\MusicPaginator.js":"33","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\client\\SimpleStripCard.js":"34","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\client\\MusicCard.js":"35","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addpopular.js":"36","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addtrending.js":"37","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Editartist.js":"38","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectsongsfortrending.js":"39","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectalbumforartist.js":"40","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectsongsforartist.js":"41","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Artiststable.js":"42","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addartist.js":"43","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addalbum.js":"44","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Editalbum.js":"45","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Albumstable.js":"46","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-3.js":"47","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-4.js":"48","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-2.js":"49","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-1.js":"50","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addsong.js":"51","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Editsong.js":"52","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\analytics-profit-processed.js":"53","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Songstable.js":"54","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\analytics-amount-processed.js":"55","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\analytics-amount-spent.js":"56","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Userstable.js":"57","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectartistforalbum.js":"58","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Upload.js":"59","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectartistforsong.js":"60","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Utils\\APU_URL.js":"61","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Contexts\\AuthContext.js":"62","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Styles\\constants.js":"63"},{"size":639,"mtime":1610602891320,"results":"64","hashOfConfig":"65"},{"size":375,"mtime":1609177321701,"results":"66","hashOfConfig":"65"},{"size":7265,"mtime":1610607178504,"results":"67","hashOfConfig":"65"},{"size":3189,"mtime":1610521221521,"results":"68","hashOfConfig":"65"},{"size":1547,"mtime":1610521064830,"results":"69","hashOfConfig":"65"},{"size":4165,"mtime":1610615277253,"results":"70","hashOfConfig":"65"},{"size":1396,"mtime":1610521003789,"results":"71","hashOfConfig":"65"},{"size":6888,"mtime":1609217082904,"results":"72","hashOfConfig":"65"},{"size":378,"mtime":1609216753038,"results":"73","hashOfConfig":"65"},{"size":356,"mtime":1609363696299,"results":"74","hashOfConfig":"65"},{"size":11747,"mtime":1609177321680,"results":"75","hashOfConfig":"65"},{"size":3839,"mtime":1609177321675,"results":"76","hashOfConfig":"65"},{"size":3232,"mtime":1609177321684,"results":"77","hashOfConfig":"65"},{"size":6081,"mtime":1609177321683,"results":"78","hashOfConfig":"65"},{"size":6589,"mtime":1609177321682,"results":"79","hashOfConfig":"65"},{"size":6601,"mtime":1609177321682,"results":"80","hashOfConfig":"65"},{"size":3781,"mtime":1609177321681,"results":"81","hashOfConfig":"65"},{"size":4037,"mtime":1609177321683,"results":"82","hashOfConfig":"65"},{"size":3755,"mtime":1609177321681,"results":"83","hashOfConfig":"65"},{"size":6809,"mtime":1609177321681,"results":"84","hashOfConfig":"65"},{"size":14025,"mtime":1610617226391,"results":"85","hashOfConfig":"65"},{"size":7625,"mtime":1610617504514,"results":"86","hashOfConfig":"65"},{"size":6923,"mtime":1610608540210,"results":"87","hashOfConfig":"65"},{"size":7251,"mtime":1610523880468,"results":"88","hashOfConfig":"65"},{"size":18838,"mtime":1610167114045,"results":"89","hashOfConfig":"65"},{"size":10254,"mtime":1610607498058,"results":"90","hashOfConfig":"65"},{"size":841,"mtime":1610521127294,"results":"91","hashOfConfig":"65"},{"size":6576,"mtime":1610616455769,"results":"92","hashOfConfig":"65"},{"size":3616,"mtime":1609177321669,"results":"93","hashOfConfig":"65"},{"size":942,"mtime":1609177321678,"results":"94","hashOfConfig":"65"},{"size":940,"mtime":1609177321678,"results":"95","hashOfConfig":"65"},{"size":940,"mtime":1609177321678,"results":"96","hashOfConfig":"65"},{"size":4361,"mtime":1609446668265,"results":"97","hashOfConfig":"65"},{"size":1479,"mtime":1610153870182,"results":"98","hashOfConfig":"65"},{"size":1452,"mtime":1609618254346,"results":"99","hashOfConfig":"65"},{"size":3584,"mtime":1609177321670,"results":"100","hashOfConfig":"65"},{"size":3583,"mtime":1609177321670,"results":"101","hashOfConfig":"65"},{"size":10796,"mtime":1609177321672,"results":"102","hashOfConfig":"65"},{"size":2707,"mtime":1609177321674,"results":"103","hashOfConfig":"65"},{"size":2164,"mtime":1609177321673,"results":"104","hashOfConfig":"65"},{"size":2218,"mtime":1609177321674,"results":"105","hashOfConfig":"65"},{"size":3743,"mtime":1609177321671,"results":"106","hashOfConfig":"65"},{"size":5307,"mtime":1609177321669,"results":"107","hashOfConfig":"65"},{"size":5242,"mtime":1609177321669,"results":"108","hashOfConfig":"65"},{"size":10577,"mtime":1609177321672,"results":"109","hashOfConfig":"65"},{"size":4311,"mtime":1609177321671,"results":"110","hashOfConfig":"65"},{"size":1303,"mtime":1609177321679,"results":"111","hashOfConfig":"65"},{"size":1303,"mtime":1609177321680,"results":"112","hashOfConfig":"65"},{"size":1302,"mtime":1609177321679,"results":"113","hashOfConfig":"65"},{"size":1305,"mtime":1609177321679,"results":"114","hashOfConfig":"65"},{"size":5031,"mtime":1609177321670,"results":"115","hashOfConfig":"65"},{"size":8329,"mtime":1609177321672,"results":"116","hashOfConfig":"65"},{"size":1211,"mtime":1609177321677,"results":"117","hashOfConfig":"65"},{"size":4466,"mtime":1609177321675,"results":"118","hashOfConfig":"65"},{"size":1211,"mtime":1609177321677,"results":"119","hashOfConfig":"65"},{"size":993,"mtime":1609177321677,"results":"120","hashOfConfig":"65"},{"size":3330,"mtime":1609177321676,"results":"121","hashOfConfig":"65"},{"size":3339,"mtime":1609177321673,"results":"122","hashOfConfig":"65"},{"size":942,"mtime":1609177321675,"results":"123","hashOfConfig":"65"},{"size":2224,"mtime":1609177321673,"results":"124","hashOfConfig":"65"},{"size":281,"mtime":1610541895334,"results":"125","hashOfConfig":"65"},{"size":649,"mtime":1610605031540,"results":"126","hashOfConfig":"65"},{"size":982,"mtime":1610609562380,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sxxi2u",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"132"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"132"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"132"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"132"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"132"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"132"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"132"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"132"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"132"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"132"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"132"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"132"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"132"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"132"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"132"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"132"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"132"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"132"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"132"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"132"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"132"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"132"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"132"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"132"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"132"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"132"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"132"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"132"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"132"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\index.js",["299"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\reportWebVitals.js",[],["300","301"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\App.js",["302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\songsactions.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\artistsactions.js",["323"],"import axios from 'axios';\r\nimport { API_BASE_URL } from '../Utils/APU_URL';\r\n\r\nconst getArtists = async () => {\r\n   let artists;\r\n\r\n   // artists = await axios.get(\"https://bong-backend.herokuapp.com/api/artist\");\r\n   artists = await axios.get(`${API_BASE_URL}/artist`);\r\n   console.log(artists);\r\n   return artists.data;\r\n};\r\n\r\nconst addArtists = async (data, albums, songs) => {\r\n   let artists;\r\n   console.log(data, albums, songs);\r\n   let artistsData = {\r\n      data,\r\n      albums,\r\n      songs,\r\n   };\r\n\r\n   // artists = await axios.post(\r\n   //   \"https://bong-backend.herokuapp.com/api/artist\",\r\n   //   artistsData\r\n   // );\r\n   artists = await axios.post(`${API_BASE_URL}/artist`, artistsData);\r\n   console.log(artists.data);\r\n   return artists.data;\r\n};\r\n\r\nconst editArtists = async (data) => {\r\n   let artists;\r\n\r\n   console.log(data);\r\n\r\n   // artists = await axios.put(\r\n   //   \"https://bong-backend.herokuapp.com/api/artist\",\r\n   //   data\r\n   // );\r\n   artists = await axios.put(`${API_BASE_URL}/artist`, data);\r\n   console.log(artists.data);\r\n   return artists.data;\r\n};\r\n\r\nconst deleteArtists = async (id) => {\r\n   let artists;\r\n\r\n   console.log(id);\r\n\r\n   const response = await axios({\r\n      method: 'DELETE',\r\n      // url: \"https://bong-backend.herokuapp.com/api/artist\",\r\n      url: `${API_BASE_URL}/artist`,\r\n      data: {\r\n         id: id,\r\n      },\r\n   });\r\n   console.log(response);\r\n   // console.log(artists.data);\r\n   // return artists.data;\r\n};\r\n\r\nexport { getArtists, addArtists, deleteArtists, editArtists };\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\usersactions.js",["324"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\albumactions.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Sidedrawer.js",["325","326","327","328"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport Logo from \".././assets/logo.png\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\n// const styles = {\r\n//   paper: {\r\n//     backgroundColor: \"black\",\r\n//     color: \"white\",\r\n//   },\r\n// };\r\n\r\nfunction Sidedrawer() {\r\n  const classes = useStyles();\r\n  // const customClasses = styles;\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n        // color=\"default\"\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <img style={{ width: \"105px\" }} src={Logo} />\r\n            Admin\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        // classes={{ paper: customClasses.paper }}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <List>\r\n          <Link style={{ textDecoration: \"none\", color: \"black\" }} to=\"/admin\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <AppsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/users\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Users\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/artist\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <FaceIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Artists\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/albums\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AlbumIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Albums\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/songs\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <MusicNoteIcon />{\" \"}\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Songs\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidedrawer;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\AdminRoute.js",["329"],"import React, { Component, Fragment } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Sidedrawer from \"./Sidedrawer\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Fragment>\r\n      <Sidedrawer />\r\n      <Route {...rest} render={(props) => <Component {...props} />} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\ClientRoute.js",["330"],"import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Layout from \"../Pages/client/Layout\";\r\n\r\nconst ClientRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <>\r\n      <Layout />\r\n      <Route {...rest} render={(props) => <Component {...props} />} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientRoute;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\AdminHome.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Trendingtable.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\User.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Songs.js",["331","332","333","334"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getSongs,\r\n  addSongs,\r\n  editSongs,\r\n  deleteSongs,\r\n} from \"../Pagesactions/songsactions\";\r\nimport Songstable from \"../Components/Songstable\";\r\nimport Addsong from \"../Components/Addsong\";\r\nimport Editsong from \"../Components/Editsong\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport seoAnalytics1 from \"../Components/charts/sale-seo-analytics-1\";\r\nimport seoAnalytics2 from \"../Components/charts/sale-seo-analytics-2\";\r\nimport seoAnalytics3 from \"../Components/charts/sale-seo-analytics-3\";\r\nimport seoAnalytics4 from \"../Components/charts/sale-seo-analytics-4\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminsong.css\";\r\n\r\nconst Songs = () => {\r\n  const [songs, setSongs] = useState();\r\n  const [totalDownloads, setTotalDownloads] = useState(\"0\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [editSongData, setEditSongData] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = (data) => {\r\n    setOpenEdit(true);\r\n    console.log(data);\r\n    setEditSongData(data);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditSongData();\r\n    console.log(editSongData);\r\n  };\r\n\r\n  const handleEditSong = (data) => {\r\n    console.log(data);\r\n    editSongs(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const addSong = (data) => {\r\n    console.log(data);\r\n    addSongs(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const editSong = (data) => {\r\n    console.log(data);\r\n    editSongs(data);\r\n    setUpdateData(true);\r\n  };\r\n  const deleteSong = (id) => {\r\n    console.log(id);\r\n    deleteSongs(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let allSongs = [];\r\n    const fetchSongs = async () => {\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setSongs(allSongs);\r\n\r\n      let count = 0;\r\n      allSongs.map((song) => {\r\n        count += song.noofplays;\r\n      });\r\n      console.log(count);\r\n      // setTotalPlays(count);\r\n    };\r\n    // const countPlays = () => {\r\n\r\n    // };\r\n\r\n    fetchSongs();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main song\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" md={6}>\r\n                {songs ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <MusicNoteIcon style={{ color: \"#f44040\" }} />\r\n                      <h3>{songs.length}</h3>\r\n                      <p className=\"text-muted\">Total Songs</p>\r\n                      <Chart {...seoAnalytics1} />\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                {totalDownloads ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <CloudDownloadIcon style={{ color: \"#f44040\" }} />\r\n                      <h3>{totalDownloads}</h3>\r\n                      <p className=\"text-muted\">Total Downloads</p>\r\n                      <Chart {...seoAnalytics2} />\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <ViewStreamIcon style={{ color: \"#f44040\" }} />\r\n                    <h3>0</h3>\r\n                    <p className=\"text-muted\">Total Streams</p>\r\n                    <Chart {...seoAnalytics3} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                    <h3>0</h3>\r\n                    <p className=\"text-muted\">Total Likes</p>\r\n                    <Chart {...seoAnalytics4} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            {songs ? (\r\n              <Songstable\r\n                data={songs}\r\n                handleDelete={deleteSong}\r\n                handleEdit={handleClickOpenEdit}\r\n                className=\"mb-4\"\r\n              />\r\n            ) : null}\r\n            {open ? (\r\n              <Addsong\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                addSong={addSong}\r\n              />\r\n            ) : null}\r\n            {editSongData ? (\r\n              <Editsong\r\n                data={editSongData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditSong={handleEditSong}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}> Add New Song </h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Songs;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Albums.js",["335","336","337"],"import React, { useState, useEffect } from \"react\";\r\nimport Albumstable from \"../Components/Albumstable\";\r\nimport Editalbum from \"../Components/Editalbum\";\r\nimport {\r\n  getAlbums,\r\n  addAlbums,\r\n  deleteAlbums,\r\n  editAlbums,\r\n} from \"../Pagesactions/albumactions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Addalbum from \"../Components/Addalbum\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminalbum.css\";\r\n\r\nconst Albums = () => {\r\n  const [albums, setAlbums] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [editAlbumData, setEditAlbumData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setAlbums(allAlbums);\r\n    };\r\n\r\n    fetchAlbums();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditAlbumData();\r\n    console.log(editAlbumData);\r\n  };\r\n\r\n  const addAlbum = async (data) => {\r\n    console.log(data);\r\n    await addAlbums(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const deleteAlbum = async (id) => {\r\n    console.log(id);\r\n    deleteAlbums(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const editAlbum = async (data) => {\r\n    console.log(data);\r\n    await setEditAlbumData(data);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditAlbum = (data) => {\r\n    console.log(data);\r\n    editAlbums(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main album\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                {albums ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Row className=\"align-items-center m-l-0\">\r\n                        <Col sm=\"auto\">\r\n                          {/* <i className=\"icon feather icon-book f-30 text-c-purple\" /> */}\r\n                          <AlbumIcon style={{ color: \"#f44040\" }} />\r\n                        </Col>\r\n                        <Col>\r\n                          <h6 className=\"text-muted m-b-10\">Total Albums</h6>\r\n                          <h2 className=\"m-b-0\">{albums.length}</h2>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">\r\n                          Total Albums likes\r\n                        </h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        {/* <i className=\"icon feather icon-users f-30 text-c-red\" /> */}\r\n                        <NavigationIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">New Artists</h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        {/* <i className=\"icon feather icon-award f-30 text-c-blue\" /> */}\r\n                        <PlayArrowIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">Albums Played</h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            {albums ? (\r\n              <Albumstable\r\n                data={albums}\r\n                handleDelete={deleteAlbum}\r\n                handleEdit={editAlbum}\r\n              />\r\n            ) : null}\r\n            <Addalbum\r\n              open={open}\r\n              handleClickOpen={handleClickOpen}\r\n              handleClose={handleClose}\r\n              addAlbum={addAlbum}\r\n            />\r\n            {editAlbumData ? (\r\n              <Editalbum\r\n                data={editAlbumData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditAlbum={handleEditAlbum}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}>New Album</h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Albums;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Artist.js",["338","339"],"import React, { useState, useEffect } from \"react\";\r\nimport Artiststable from \"../Components/Artiststable\";\r\nimport Addartist from \"../Components/Addartist\";\r\nimport Editartist from \"../Components/Editartist\";\r\nimport {\r\n  getArtists,\r\n  addArtists,\r\n  deleteArtists,\r\n  editArtists,\r\n} from \"../Pagesactions/artistsactions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminartist.css\";\r\n\r\nconst Artist = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [editArtistData, setEditArtistData] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditArtistData();\r\n    console.log(editArtistData);\r\n  };\r\n\r\n  const addArtist = async (data, albums, songs) => {\r\n    console.log(data, albums, songs);\r\n\r\n    await addArtists(data, albums, songs);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const deleteArtist = async (id) => {\r\n    console.log(id);\r\n    deleteArtists(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const editArtist = async (data) => {\r\n    console.log(data);\r\n    await setEditArtistData(data);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditArtist = (data) => {\r\n    console.log(data);\r\n    editArtists(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main artist\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                {artists ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Row className=\"align-items-center m-l-0\">\r\n                        <Col sm=\"auto\">\r\n                          {/* <i className=\"icon feather icon-book f-30 text-c-purple\" /> */}\r\n                          <FaceIcon style={{ color: \"#f44040\" }} />\r\n                        </Col>\r\n                        <Col>\r\n                          <h6 className=\"text-muted m-b-10\">Total Artists</h6>\r\n                          <h2 className=\"m-b-0\">{artists.length}</h2>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">\r\n                          Total artists likes\r\n                        </h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        {/* <i className=\"icon feather icon-users f-30 text-c-red\" /> */}\r\n                        <NavigationIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">New Artists</h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <i className=\"icon feather icon-award f-30 text-c-blue\" />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">Unique Innovation</h6>\r\n                        <h2 className=\"m-b-0\">325</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            {artists ? (\r\n              <Artiststable\r\n                data={artists}\r\n                handleDelete={deleteArtist}\r\n                handleEdit={editArtist}\r\n                className=\"mb-4\"\r\n              />\r\n            ) : null}\r\n            {open ? (\r\n              <Addartist\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                addArtist={addArtist}\r\n              />\r\n            ) : null}\r\n\r\n            {editArtistData ? (\r\n              <Editartist\r\n                data={editArtistData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditArtist={handleEditArtist}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}> New Artist </h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artist;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Admintrending.js",["340"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Addtrending from \"../Components/Addtrending\";\r\nimport {\r\n  addTrending,\r\n  editTrending,\r\n  getTrending,\r\n} from \"../Pagesactions/songsactions\";\r\n\r\nconst Admintrending = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [trending, setTrending] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddTrending = (data) => {\r\n    console.log(data);\r\n    // addTrending(data);\r\n    editTrending(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    let yoo = [];\r\n    editTrending(yoo);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let trendingSongs = trending[0].trending;\r\n    let filterSongs;\r\n    filterSongs = trendingSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setTrending(filterSongs)\r\n    await editTrending(filterSongs);\r\n    setUpdateData(true);\r\n  };\r\n  useEffect(() => {\r\n    const fetchTrending = async () => {\r\n      let allTrending;\r\n      allTrending = await getTrending();\r\n      console.log(allTrending);\r\n      setTrending(allTrending);\r\n    };\r\n\r\n    fetchTrending();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Trending</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"mb-4 col-12 col-md-2\">\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              New List <AddCircleIcon />\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleDeleteList}\r\n            >\r\n              Delete List <DeleteIcon />\r\n            </button>\r\n          </div>\r\n          <div className=\"col-12 col-md-8 text-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-2\"></div>\r\n              <div className=\"col-11 col-md-6\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].trending.length === 0 ? (\r\n                      \" Trending List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {trending ? (\r\n                          <Trendingtable\r\n                            data={trending[0].trending}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-0 col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2\">\r\n            {open ? (\r\n              <Addtrending\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddTrending={handleAddTrending}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admintrending;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Signin.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Adminpopular.js",["341"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Addpopular from \"../Components/Addpopular\";\r\nimport {\r\n  addPopular,\r\n  editPopular,\r\n  getPopular,\r\n} from \"../Pagesactions/songsactions\";\r\n\r\nconst Adminpopular = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [popular, setPopular] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddPopular = (data) => {\r\n    console.log(data);\r\n    // addPopular(data);\r\n    // console.log(\"yoo\");\r\n    editPopular(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    let yoo = [];\r\n    editPopular(yoo);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let popularSongs = popular[0].popular;\r\n    let filterSongs;\r\n    filterSongs = popularSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setpopular(filterSongs)\r\n    await editPopular(filterSongs);\r\n    setUpdateData(true);\r\n  };\r\n  useEffect(() => {\r\n    const fetchPopular = async () => {\r\n      let allPopular;\r\n      allPopular = await getPopular();\r\n      console.log(allPopular);\r\n      setPopular(allPopular);\r\n    };\r\n\r\n    fetchPopular();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Popular Songs</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\" mb-4 col-12 col-md-2\">\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              New List <AddCircleIcon />\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleDeleteList}\r\n            >\r\n              Delete List <DeleteIcon />\r\n            </button>\r\n            {open ? (\r\n              <Addpopular\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddPopular={handleAddPopular}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-12 col-md-8 \">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-2\"></div>\r\n              <div className=\"col-11 col-md-6\">\r\n                {popular ? (\r\n                  <React.Fragment>\r\n                    {popular[0].popular.length === 0 ? (\r\n                      \" Popular List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {popular ? (\r\n                          <Trendingtable\r\n                            data={popular[0].popular}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-1 col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Adminpopular;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\Admintopcharts.js",["342","343","344","345","346","347"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport {\r\n  addTopcharts,\r\n  editTopcharts,\r\n  getTopcharts,\r\n} from \"../Pagesactions/songsactions\";\r\nimport {\r\n  addTrending,\r\n  editTrending,\r\n  getTrending,\r\n} from \"../Pagesactions/songsactions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport Addchart from \"../Components/Addchart\";\r\n\r\nconst Admintopcharts = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [topcharts, setTopcharts] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [trending, setTrending] = useState();\r\n  const [listName, setListName] = useState();\r\n\r\n  const handleClickOpen = (name) => {\r\n    console.log(name);\r\n    setListName(name);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddCharts = (data, name) => {\r\n    console.log(data, name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTopcharts = async () => {\r\n      let allTopcharts;\r\n      allTopcharts = await getTopcharts();\r\n      console.log(allTopcharts);\r\n      setTopcharts(allTopcharts);\r\n    };\r\n\r\n    fetchTopcharts();\r\n\r\n    const fetchTrending = async () => {\r\n      let allTrending;\r\n      allTrending = await getTrending();\r\n      console.log(allTrending);\r\n      setTrending(allTrending);\r\n    };\r\n\r\n    fetchTrending();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n  return (\r\n    <div className=\"main\">\r\n      <h2>Top Charts</h2>\r\n      <br />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-4 my-4\">\r\n            <div className=\"row text-center\">\r\n              <div className=\"col-12 \">\r\n                <h3>Top 20</h3>\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={() => handleClickOpen(\"top20\")}\r\n                >\r\n                  New List <AddCircleIcon />\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  //   onClick={handleDeleteList}\r\n                >\r\n                  Delete List <DeleteIcon />\r\n                </button>\r\n              </div>\r\n              <br />\r\n              <div className=\"col-12 my-4\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].trending.length === 0 ? (\r\n                      \" Trending List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {trending ? (\r\n                          <Trendingtable\r\n                            data={trending[0].trending}\r\n                            // handleDeleteSong={handleDeleteSong}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-4 my-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 \">\r\n                <h3>Top 50</h3>\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={() => handleClickOpen(\"top50\")}\r\n                >\r\n                  New List <AddCircleIcon />\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  //   onClick={handleDeleteList}\r\n                >\r\n                  Delete List <DeleteIcon />\r\n                </button>\r\n              </div>\r\n              <br />\r\n              <div className=\"col-12 my-4\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].trending.length === 0 ? (\r\n                      \" Trending List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {trending ? (\r\n                          <Trendingtable\r\n                            data={trending[0].trending}\r\n                            // handleDeleteSong={handleDeleteSong}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-4 my-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 \">\r\n                <h3>Top 100</h3>\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={() => handleClickOpen(\"top100\")}\r\n                >\r\n                  New List <AddCircleIcon />\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  //   onClick={handleDeleteList}\r\n                >\r\n                  Delete List <DeleteIcon />\r\n                </button>\r\n              </div>\r\n              <br />\r\n              <div className=\"col-12 my-4\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].trending.length === 0 ? (\r\n                      \" Trending List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {trending ? (\r\n                          <Trendingtable\r\n                            data={trending[0].trending}\r\n                            // handleDeleteSong={handleDeleteSong}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n                {open ? (\r\n                  <Addchart\r\n                    open={open}\r\n                    handleClickOpen={handleClickOpen}\r\n                    handleClose={handleClose}\r\n                    handleAddCharts={handleAddCharts}\r\n                    listName={listName}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admintopcharts;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\CreateAccount.js",["348","349"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\ResetLogin.js",["350","351"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\DetailSignUp.js",["352"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\screens\\BrowseMain.js",["353","354"],"import { Divider, Grid, MenuItem } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MusicCard from '../../../Components/client/MusicCard';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport '../../../assets/BrowseStyle.css';\r\n\r\nconst tutorialSteps = [\r\n   {\r\n      title: 'hamara parcham',\r\n      label: 'San Francisco ',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'Bird',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'hamara parcham',\r\n      label: 'Bali, Indonesia',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'NeONBRAND ',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'Goč, Serbia',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'Goč, Serbia',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'Goč, Serbia',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'Goč, Serbia',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'Goč, Serbia',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n   {\r\n      title: 'a jaaa pardesi',\r\n      label: 'Goč, Serbia',\r\n      imgPath:\r\n         'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n   },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   menuList: {\r\n      fontSize: '0.8rem',\r\n      color: '#fff',\r\n      '&:hover': {\r\n         color: '#b33458',\r\n         backgroundColor: '#1b3870',\r\n         borderRadius: 20,\r\n      },\r\n   },\r\n   menuList2: {\r\n      fontSize: '0.9rem',\r\n      color: '#fff',\r\n      '&:hover': {\r\n         //  // color: \"#b33458\",\r\n         //  backgroundColor: '#b33458',\r\n         //  borderRadius: 20,\r\n         borderBottom: 2,\r\n         borderColor: '#0984e3',\r\n         borderBottomStyle: 'solid',\r\n      },\r\n   },\r\n}));\r\nconst card = [1, 2, 3, 4, 5, 6, 7];\r\nconst list2 = ['All', 'Trending', 'Popular', 'Albums', 'Featured'];\r\nconst Lists = [\r\n   'New Music',\r\n   'Videos',\r\n   'Podcasts',\r\n   'PlayLists',\r\n   'Genure',\r\n   'Category',\r\n   'Artists',\r\n   'Albums',\r\n];\r\n\r\nfunction BrowseMain() {\r\n   const classes = useStyles();\r\n   const theme = useTheme();\r\n   const [slug, setSlug] = useState('New Music');\r\n   const [list2Item, setList2Item] = useState('All');\r\n\r\n   const handleSlug = (e, item) => {\r\n      e.preventDefault();\r\n      setSlug(item);\r\n   };\r\n   return (\r\n      <div\r\n         style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignContent: 'center',\r\n            alignItems: 'center',\r\n            margin: window.screen.width >= 768 ? 'auto' : 10,\r\n            width: window.screen.width >= 768 ? '85%' : '98%',\r\n         }}\r\n      >\r\n         <Grid\r\n            container\r\n            direction='column'\r\n            justify='center'\r\n            alignItems='stretch'\r\n            style={{\r\n               marginTop: '1%',\r\n               // margin: window.screen.width >= 768 ? \"auto\" : 0,\r\n\r\n               // width: window.screen.width >= 768 ? \"85%\" : \"100%\",\r\n            }}\r\n         >\r\n            <Grid item>\r\n               <div style={{ display: 'flex', height: '5%' }}>\r\n                  {Lists.map((list) => (\r\n                     <MenuItem\r\n                        value={slug}\r\n                        onClick={(e) => handleSlug(e, list)}\r\n                        className={classes.menuList}\r\n                     >\r\n                        {list}\r\n                     </MenuItem>\r\n                  ))}\r\n               </div>\r\n               <Divider style={{ color: '#FFF' }} />\r\n               <div\r\n                  style={{\r\n                     display: 'flex',\r\n                     height: '5%',\r\n                     paddingLeft: '2%',\r\n                     paddingTop: '1%',\r\n                  }}\r\n               >\r\n                  {list2.map((list) => (\r\n                     <MenuItem\r\n                        value={slug}\r\n                        onClick={(e) => handleSlug(e, list)}\r\n                        className={classes.menuList2}\r\n                        style={{\r\n                           backgroundColor:\r\n                              list2Item === list && '#b33458',\r\n                           borderRadius: list2Item === list && 20,\r\n                        }}\r\n                     >\r\n                        {list}\r\n                     </MenuItem>\r\n                  ))}\r\n               </div>\r\n            </Grid>\r\n            <Grid item style={{ paddingTop: theme.spacing(3) }}>\r\n               <Carousel\r\n                  itemsToShow={window.screen.width >= 768 ? 6 : 2}\r\n                  itemsToScroll={window.screen.width >= 768 ? 6 : 2}\r\n               >\r\n                  {tutorialSteps.map((item) => (\r\n                     <div\r\n                        style={{\r\n                           display: 'block',\r\n                           paddingLeft: theme.spacing(3),\r\n                           // flexWrap: \"nowrap\",\r\n                           flexDirection: 'row',\r\n                           zIndex: 1,\r\n                        }}\r\n                     >\r\n                        <Grid container justify='center' spacing={2}>\r\n                           {[0, 1, 2, 3].map((value) => (\r\n                              <Grid key={value} item>\r\n                                 <MusicCard\r\n                                    imgPath={item.imgPath}\r\n                                    title={item.title}\r\n                                    label={item.label}\r\n                                 />\r\n                              </Grid>\r\n                           ))}\r\n                        </Grid>\r\n                     </div>\r\n                  ))}\r\n               </Carousel>\r\n            </Grid>\r\n            <Grid item justify='center'>\r\n               <div\r\n                  style={{\r\n                     display: 'flex',\r\n                     justifyContent: 'center',\r\n                     alignitem: 'center',\r\n                     paddingTop: 20,\r\n                  }}\r\n               ></div>\r\n            </Grid>\r\n         </Grid>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default BrowseMain;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\screens\\HomeScreen.js",["355","356","357","358","359"],"import {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport song from \"../../../assets/song.jpg\";\r\nimport MusicCard from \"../../../Components/client/MusicCard\";\r\nimport MusicStepper from \"../../../Components/client/MusicPaginator\";\r\nimport SimpleStripCard from \"../../../Components/client/SimpleStripCard\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport \"../../../assets/CrouselStyle.css\";\r\nimport appstore from \"../../../assets/appstore.png\";\r\n\r\nimport playstore from \"../../../assets/goo.png\";\r\nimport axios from \"axios\";\r\nimport { GlobalData } from \"../../../App\";\r\nimport {\r\n  getTopCharts,\r\n  getRecentPlay,\r\n  getRecomended,\r\n  getPopular,\r\n} from \"../../../Pagesactions/HomeActions\";\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    title: \"hamara parcham\",\r\n    label: \"San Francisco \",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"Bird\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"hamara parcham\",\r\n    label: \"Bali, Indonesia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"NeONBRAND \",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    title: \"a jaaa pardesi\",\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootGrid: {\r\n    backgroundColor: \"#ffffff\",\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  footerImg: {\r\n    width: 150,\r\n    height: 40,\r\n    paddingLeft: 3,\r\n    paddingTop: 6,\r\n    objectFit: \"conatin\",\r\n  },\r\n}));\r\nfunction HomeScreen() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [charts, setcharts] = useState([]);\r\n\r\n  const [playlist, setplaylist] = useState([]);\r\n  const [recomended, setrecomended] = useState([]);\r\n  const [popular, setpopular] = useState([]);\r\n  const data = useContext(GlobalData);\r\n\r\n  useEffect(() => {\r\n    const fetchTopCharts = async () => {\r\n      let topchartlist;\r\n      topchartlist = await getTopCharts();\r\n      // console.log(topchartlist[0].topcharts[0].topchart[0].songimage);\r\n      if (topchartlist.length > 0) {\r\n        console.log(\"topchart\");\r\n        setcharts(topchartlist[0].topcharts[1].topchart);\r\n      }\r\n    };\r\n    const fetchRecentPlay = async () => {\r\n      let recentPlay;\r\n      recentPlay = await getRecentPlay();\r\n      console.log(recentPlay);\r\n      if (recentPlay.length > 0) {\r\n        console.log(\"recent\");\r\n        setplaylist(recentPlay[0].bongplaylist);\r\n      }\r\n    };\r\n    const fetchRecommended = async () => {\r\n      let recomended;\r\n      recomended = await getRecomended();\r\n      if (recomended.length > 0) {\r\n        console.log(\"recomended\");\r\n        setrecomended(recomended[0].recommended);\r\n      }\r\n    };\r\n\r\n    const fetchPopular = async () => {\r\n      let popular;\r\n      popular = await getPopular();\r\n      console.log(popular);\r\n      if (recomended.length > 0) {\r\n        console.log(\"recomended\");\r\n        setpopular(popular[0].popular);\r\n      }\r\n    };\r\n    fetchPopular();\r\n    fetchTopCharts();\r\n    fetchRecentPlay();\r\n    fetchRecommended();\r\n  }, []);\r\n  console.log(\"object\", recomended);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: window.screen.width >= 768 ? \"auto\" : 10,\r\n        width: window.screen.width >= 768 ? \"85%\" : \"98%\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"stretch\"\r\n        style={{\r\n          marginTop: \"1%\",\r\n        }}\r\n      >\r\n        <Grid item style={{ paddingTop: theme.spacing(2) }}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            {[0, 1].map((value) => (\r\n              <Grid key={value} item>\r\n                <MusicCard\r\n                  title=\"Pakistani Song\"\r\n                  label=\"newSong\"\r\n                  imgPath={song}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-Between\" }}>\r\n            <Typography\r\n              style={{\r\n                color: \"#fff\",\r\n                paddingLeft:\r\n                  window.screen.width >= 768\r\n                    ? theme.spacing(12)\r\n                    : theme.spacing(8),\r\n                paddingBottom: theme.spacing(2),\r\n                paddingTop: theme.spacing(1),\r\n              }}\r\n            >\r\n              Recent Play\r\n            </Typography>\r\n            <Button\r\n              style={{\r\n                marginBottom: theme.spacing(2),\r\n                color: \"#fff\",\r\n                backgroundColor: \"#193459\",\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              View All\r\n            </Button>\r\n          </div>\r\n          <div className={classes.crousel}>\r\n            <Carousel\r\n              itemsToShow={window.screen.width >= 768 ? 5 : 2}\r\n              itemsToScroll={window.screen.width >= 768 ? 5 : 2}\r\n            >\r\n              {playlist.length > 0 &&\r\n                playlist.map((item) => (\r\n                  <div\r\n                    style={{\r\n                      display: \"block\",\r\n                      paddingLeft: theme.spacing(3),\r\n                      flexDirection: \"row\",\r\n                      zIndex: 1,\r\n                    }}\r\n                  >\r\n                    <SimpleStripCard\r\n                      key={item._id}\r\n                      imgPath={item.songimage}\r\n                      title={item.songname}\r\n                      // label={item.label}\r\n                      // name={item.name}\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </Carousel>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              paddingTop: theme.spacing(3),\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                color: \"#fff\",\r\n                paddingLeft:\r\n                  window.screen.width >= 768\r\n                    ? theme.spacing(12)\r\n                    : theme.spacing(8),\r\n                paddingBottom: theme.spacing(1),\r\n                paddingTop: theme.spacing(1),\r\n              }}\r\n            >\r\n              Top Chart\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              style={{\r\n                marginBottom: theme.spacing(2),\r\n                color: \"#fff\",\r\n                backgroundColor: \"#193459\",\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              View All\r\n            </Button>\r\n          </div>\r\n          <div className={classes.crousel}>\r\n            <Carousel\r\n              itemsToShow={window.screen.width >= 768 ? 5 : 2}\r\n              itemsToScroll={window.screen.width >= 768 ? 5 : 2}\r\n            >\r\n              {charts.length > 0 &&\r\n                charts.map((item) => (\r\n                  <div\r\n                    style={{\r\n                      display: \"block\",\r\n                      paddingLeft: theme.spacing(3),\r\n                      // flexWrap: \"nowrap\",\r\n                      flexDirection: \"row\",\r\n                      zIndex: 1,\r\n                    }}\r\n                  >\r\n                    <SimpleStripCard\r\n                      key={item._id}\r\n                      imgPath={item.songimage}\r\n                      title={item.songname}\r\n                      // label={item.label}\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </Carousel>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              paddingTop: theme.spacing(3),\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                color: \"#fff\",\r\n                paddingLeft:\r\n                  window.screen.width >= 768\r\n                    ? theme.spacing(12)\r\n                    : theme.spacing(8),\r\n                paddingBottom: theme.spacing(1),\r\n                paddingTop: theme.spacing(1),\r\n              }}\r\n            >\r\n              Recommended\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              style={{\r\n                marginBottom: theme.spacing(2),\r\n                color: \"#fff\",\r\n                backgroundColor: \"#193459\",\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              View All\r\n            </Button>\r\n          </div>\r\n          <div className={classes.crousel}>\r\n            <Carousel\r\n              itemsToShow={window.screen.width >= 768 ? 5 : 2}\r\n              itemsToScroll={window.screen.width >= 768 ? 5 : 2}\r\n            >\r\n              {recomended.map((item) => (\r\n                <div\r\n                  style={{\r\n                    display: \"block\",\r\n                    paddingLeft: theme.spacing(3),\r\n                    // flexWrap: \"nowrap\",\r\n                    flexDirection: \"row\",\r\n                    zIndex: 1,\r\n                  }}\r\n                >\r\n                  <SimpleStripCard\r\n                    key={item._id}\r\n                    imgPath={item.songimage}\r\n                    title={item.songname}\r\n                    // label={item.label}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              paddingTop: theme.spacing(3),\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                color: \"#fff\",\r\n                paddingLeft:\r\n                  window.screen.width >= 768\r\n                    ? theme.spacing(12)\r\n                    : theme.spacing(8),\r\n                paddingBottom: theme.spacing(1),\r\n                paddingTop: theme.spacing(1),\r\n              }}\r\n            >\r\n              Popular Vedios\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              style={{\r\n                marginBottom: theme.spacing(2),\r\n                color: \"#fff\",\r\n                backgroundColor: \"#193459\",\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              View All\r\n            </Button>\r\n          </div>\r\n          <div className={classes.crousel}>\r\n            <Carousel\r\n              itemsToShow={window.screen.width >= 768 ? 5 : 2}\r\n              itemsToScroll={window.screen.width >= 768 ? 5 : 2}\r\n            >\r\n              {popular.map((item) => (\r\n                <div\r\n                  style={{\r\n                    display: \"block\",\r\n                    paddingLeft: theme.spacing(3),\r\n                    // flexWrap: \"nowrap\",\r\n                    flexDirection: \"row\",\r\n                    zIndex: 1,\r\n                  }}\r\n                >\r\n                  <SimpleStripCard\r\n                    key={item._id}\r\n                    imgPath={item.songimage}\r\n                    title={item.songname}\r\n                    // label={item.label}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        </Grid>\r\n        <Divider\r\n          style={{\r\n            color: \"#7e93cf\",\r\n            // paddingTop: theme.spacing(1),\r\n            marginTop: theme.spacing(3),\r\n            width: \"96%\",\r\n          }}\r\n        />\r\n        <Grid item style={{ paddingTop: theme.spacing(6) }}>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\">\r\n            <Grid item>\r\n              <Grid container direction=\"column\" justify=\"center\">\r\n                <Grid item sm={4} md={4} xs={12} lg={4}>\r\n                  <Link href=\"#\" onClick={(e) => e.preventDefault()}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                        paddingTop: 10,\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Company\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item sm={4} md={4} xs={12} lg={4}>\r\n                  <Link href=\"#\" onClick={(e) => e.preventDefault()}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                        paddingTop: 10,\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      About\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item sm={4} md={4} xs={12} lg={4}>\r\n                  <Link href=\"#\" onClick={(e) => e.preventDefault()}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                        paddingTop: 10,\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Job\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\">\r\n                <Grid item xs={12}>\r\n                  <Link href=\"#\" onClick={(e) => e.preventDefault()}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                        paddingTop: 10,\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Useful Links\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Link href=\"#\" onClick={(e) => e.preventDefault()}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                        paddingTop: 10,\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Support\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Link href=\"#\" onClick={(e) => e.preventDefault()}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                        paddingTop: 10,\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Terms & Conditions\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" justify=\"space-around\">\r\n                <Grid item xs={12}>\r\n                  <Link href=\"#\" onClick={(e) => e.preventDefault()}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                        paddingTop: 10,\r\n                        fontSize: \"1.4rem\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Download the BONG App!\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item sm={4} md={4} xs={12} lg={4}>\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <img\r\n                      src={playstore}\r\n                      alt=\"google play store\"\r\n                      className={classes.footerImg}\r\n                    />\r\n\r\n                    <img\r\n                      src={appstore}\r\n                      alt=\"google play store\"\r\n                      className={classes.footerImg}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider\r\n          style={{\r\n            color: \"#7e93cf\",\r\n            // paddingTop: theme.spacing(1),\r\n            marginTop: theme.spacing(6),\r\n            width: \"96%\",\r\n          }}\r\n        />\r\n        <Grid item>\r\n          <Typography\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"0.6rem\",\r\n              textDecoration: \"none\",\r\n              padding: theme.spacing(3),\r\n            }}\r\n          >\r\n            2020 | All Rights Reserved || developed by Team Bong\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\Layout.js",["360","361","362"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pagesactions\\HomeActions.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Pages\\client\\Form.js",["363","364","365","366","367"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addchart.js",["368","369","370","371","372","373","374","375","376"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Addchart = ({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddCharts,\r\n  listName,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddCharts(data, listName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for trending\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addchart;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\crm-total-vendor.js",["377"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Vendors :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\crm-total-lead.js",["378"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Leads :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\crm-total-invoice.js",["379"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ff5252'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Leads :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\client\\MusicPaginator.js",["380","381","382"],"import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport MusicCard from \"./MusicCard\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: \"San Francisco – Oakland Bay Bridge, United States\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    label: \"Bird\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    label: \"Bali, Indonesia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80\",\r\n  },\r\n  {\r\n    label: \"NeONBRAND Digital Marketing, Las Vegas, United States\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n  {\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  img: {\r\n    height: 110,\r\n    overflow: \"hidden\",\r\n    display: \"block\",\r\n    objectFit: \"contain\",\r\n  },\r\n}));\r\n\r\nconst MusicStepper = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div square elevation={0} className={classes.header}>\r\n        <Typography style={{ color: \"#fff\", paddingBottom: 10 }}>\r\n          Recent Play\r\n        </Typography>\r\n      </div>\r\n\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        direction=\"row\"\r\n        alignItems=\"stretch\"\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        {[1, 2, 3, 4, 5].map((value) => (\r\n          <Grid key={value} item spacing={2}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                paddingLeft: theme.spacing(3),\r\n              }}\r\n            >\r\n              {[tutorialSteps].map((val) => (\r\n                <img\r\n                  className={classes.img}\r\n                  src={tutorialSteps[activeStep].imgPath}\r\n                  alt={tutorialSteps[activeStep].label}\r\n                />\r\n                // <MusicCard />\r\n              ))}\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        // variant=\"text\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <NavigateNextIcon\r\n            size=\"small\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n          >\r\n            Next\r\n            {theme.direction === \"rtl\" ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </NavigateNextIcon>\r\n        }\r\n        backButton={\r\n          <NavigateBeforeIcon\r\n            size=\"small\"\r\n            onClick={handleBack}\r\n            disabled={activeStep === 0}\r\n          >\r\n            {theme.direction === \"rtl\" ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            Back\r\n          </NavigateBeforeIcon>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default MusicStepper;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\client\\SimpleStripCard.js",["383","384","385","386"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport song from \"../../assets/song.jpg\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // maxWidth: 250,\r\n    width: 120,\r\n    display: \"flex\",\r\n  },\r\n  media: {\r\n    height: 110,\r\n    objectFit: \"contain\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n});\r\n\r\nconst SimpleStripCard = (props) => {\r\n  const { imgPath, title } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={imgPath}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n        </CardActionArea>\r\n      </Card>\r\n      <Typography gutterBottom variant=\"h6\" className={classes.title}>\r\n        {title}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"textSecondary\"\r\n        className={classes.title}\r\n        component=\"p\"\r\n      >\r\n        song\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SimpleStripCard;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\client\\MusicCard.js",["387","388","389"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // maxWidth: 250,\r\n    width: window.location.href.includes(\"Home\") ? 320 : 120,\r\n  },\r\n  media: {\r\n    height: window.location.href.includes(\"Home\") ? 190 : 110,\r\n    objectFit: \"contain\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n});\r\n\r\nconst MusicCard = (props) => {\r\n  console.log(\"object\", props.title, props.imgPath);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia className={classes.media} image={props.imgPath} />\r\n        </CardActionArea>\r\n      </Card>\r\n      <Typography gutterBottom variant=\"h6\" className={classes.title}>\r\n        {props.title}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"textSecondary\"\r\n        className={classes.title}\r\n        component=\"p\"\r\n      >\r\n        {props.label}\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MusicCard;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addpopular.js",["390","391","392","393","394","395","396","397","398"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addpopular({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddPopular,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddPopular(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for Popular List\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addtrending.js",["399","400","401","402","403","404","405","406","407"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addtrending({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTrending,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddTrending(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for trending\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Editartist.js",["408","409","410","411","412","413","414","415","416","417","418","419","420"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport Selectalbumforartist from \"../Components/Selectalbumforartist\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nexport default function Editartist({\r\n  open,\r\n  data,\r\n  handleEditArtist,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    artistname: data.artistname,\r\n    artistimage: data.artistimage,\r\n    albums: data.albums,\r\n    songs: data.songs,\r\n  });\r\n  console.log(data);\r\n  const [allAlbums, setAllAlbums] = useState([]);\r\n  const [foundAlbums, setFoundAlbums] = useState([]);\r\n  const [editAlbums, setEditAlbums] = useState(false);\r\n  const [addAlbums, setAddAlbums] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    handleEditArtist(state);\r\n    handleCloseEdit();\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const deleteArtistAlbum = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundAlbums.filter((album) => {\r\n      if (album._id !== id) {\r\n        return album;\r\n      }\r\n    });\r\n    foundAlbums.filter((album) => {\r\n      if (album._id !== id) {\r\n        ids.push(album._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundAlbums(yoo);\r\n    await setState({\r\n      ...state,\r\n      albums: ids,\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  const handleAlbumsToggle = () => {\r\n    setEditAlbums(!editAlbums);\r\n    setAddAlbums(false);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    handleAlbumsToggle();\r\n    setAddAlbums(!addAlbums);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddAlbums = (data) => {\r\n    let ids = [];\r\n    console.log(foundAlbums);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      albums: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const handleDeleteAlbum = useMemo(() => console.log(foundSongs), [\r\n    foundSongs,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      let filterAlbums = [];\r\n      allAlbums = await getAlbums();\r\n      setAllAlbums(allAlbums);\r\n      console.log(allAlbums);\r\n      state.albums.map((albumId) => {\r\n        allAlbums.filter((album) => {\r\n          if (album._id === albumId) {\r\n            filterAlbums.push(album);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundAlbums(filterAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      let filterSongs = [];\r\n      allSongs = await getSongs();\r\n      setAllSongs(allSongs);\r\n      console.log(allSongs);\r\n      state.songs.map((songId) => {\r\n        allSongs.filter((song) => {\r\n          if (song._id === songId) {\r\n            filterSongs.push(song);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundSongs(filterSongs);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Artist</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"artistname\"\r\n            value={state.artistname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.artistimage}\r\n            name=\"artistimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Albums</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleAlbumsToggle}\r\n              >\r\n                {editAlbums ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editAlbums || addAlbums ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddAlbums}\r\n                  >\r\n                    {addAlbums ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editAlbums ? (\r\n                <div>\r\n                  {foundAlbums ? (\r\n                    <List>\r\n                      {foundAlbums.map((album) => (\r\n                        <ListItem>\r\n                          {console.log()}\r\n                          <ListItemText\r\n                            primary={album.albumname}\r\n                            // secondary={secondary ? \"Secondary text\" : null}\r\n                          />\r\n                          <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                              <DeleteForeverIcon\r\n                                onClick={() => deleteArtistAlbum(album._id)}\r\n                              />\r\n                            </IconButton>\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addAlbums ? (\r\n              <Selectalbumforartist\r\n                data={allAlbums}\r\n                selectAlbums={handleSelectedAddAlbums}\r\n              />\r\n            ) : null}\r\n          </div>\r\n\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Songs</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleSongsToggle}\r\n              >\r\n                {editSongs ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editSongs || addSongs ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddSongs}\r\n                  >\r\n                    {addSongs ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editSongs ? (\r\n                <div>\r\n                  {foundSongs ? (\r\n                    <List>\r\n                      {foundSongs.map((song) => (\r\n                        <ListItem>\r\n                          {console.log()}\r\n                          <ListItemText\r\n                            primary={song.songname}\r\n                            // secondary={secondary ? \"Secondary text\" : null}\r\n                          />\r\n                          <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                              <DeleteForeverIcon\r\n                                onClick={() => deleteArtistSong(song._id)}\r\n                              />\r\n                            </IconButton>\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addSongs ? (\r\n              <Selectsongsforartist\r\n                data={allSongs}\r\n                selectSongs={handleSelectedAddSongs}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectsongsfortrending.js",["421","422","423"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsfortrending({\r\n  data,\r\n  selectSongs,\r\n  handleClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectSongs(checked);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col-1 col-md-2\"></div>\r\n        <div className=\"col-10 col-md-8 \">\r\n          <List className={classes.root}>\r\n            {console.log(data)}\r\n            {data.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              console.log(labelId);\r\n              console.log(value._id);\r\n\r\n              return (\r\n                <ListItem\r\n                  key={value}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={checked.indexOf(value) !== -1}\r\n                      tabIndex={0}\r\n                      disableRipple\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={labelId} primary={`${value.songname}`} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"col-1 col-md-2 mt-4 text-center\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n            Add Songs\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectalbumforartist.js",["424","425","426"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectalbumforartist({ data, selectAlbums }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    selectAlbums(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.albumname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Albums\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectsongsforartist.js",["427","428","429"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsforartist({ data, selectSongs }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectSongs(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value._id);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.songname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Songs\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Artiststable.js",["430","431","432","433","434"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Editartist from \"../Components/Editartist\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Artiststable({\r\n  data,\r\n  handleDelete,\r\n  handleEdit,\r\n  openEdit,\r\n}) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {console.log(keys)}\r\n              {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))}\r\n              <StyledTableCell>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n                <StyledTableCell align=\"left\">\r\n                  {row.albums.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.songs.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell>{row._id}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.artistname}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.artistimage}\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">\r\n                  <DeleteForeverIcon onClick={() => hanldeDelete(row._id)} />\r\n                  <EditIcon\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        artistimage: row.artistimage,\r\n                        artistname: row.artistname,\r\n                        albums: row.albums,\r\n                        songs: row.songs,\r\n                      })\r\n                    }\r\n                  />\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addartist.js",["435","436","437","438","439","440"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Selectalbumforartist from \"../Components/Selectalbumforartist\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Addartist = ({ open, addArtist, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    artistname: \"\",\r\n    artistimage: \"\",\r\n  });\r\n  const [selectAlbums, setSelectAlbums] = useState([]);\r\n  const [selectSongs, setSelectSongs] = useState([]);\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n\r\n  const [onAddAlbums, setOnAddAlbums] = useState(false);\r\n  const [onAddSongs, setOnAddSongs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  const handleAddArtist = useCallback(async (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    console.log(selectAlbums);\r\n    // await setState({\r\n    //   ...state,\r\n    //   albums: selectAlbums,\r\n    // });\r\n    // console.log(state);\r\n    addArtist(state, selectAlbums, selectSongs);\r\n    handleClose();\r\n  });\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleAlbums = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectAlbums(ids);\r\n  });\r\n\r\n  const handleSongs = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectSongs(ids);\r\n  });\r\n\r\n  const handleOnAddAlbums = () => {\r\n    setOnAddAlbums(!onAddAlbums);\r\n  };\r\n  const handleOnAddSongs = () => {\r\n    setOnAddSongs(!onAddSongs);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(selectAlbums)}\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddArtist}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Artist</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"artistname\"\r\n            value={state.artistname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.artistimage}\r\n            name=\"artistimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <h5>\r\n            Add Albums{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddAlbums}>\r\n              {onAddAlbums ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddAlbums ? (\r\n            <div>\r\n              {fetchedAlbums ? (\r\n                <Selectalbumforartist\r\n                  data={fetchedAlbums}\r\n                  selectAlbums={handleAlbums}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          <h5>\r\n            Add Songs{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddSongs}>\r\n              {onAddSongs ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddSongs ? (\r\n            <div>\r\n              {fetchedAlbums ? (\r\n                <Selectsongsforartist\r\n                  data={fetchedSongs}\r\n                  selectSongs={handleSongs}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddArtist} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addartist;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addalbum.js",["441","442","443","444","445","446","447"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Selectartistforalbum from \"./Selectartistforalbum\";\r\nimport Selectsongsforartist from \"./Selectsongsforartist\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Addalbum({ open, addAlbum, handleClose }) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    albumname: \"\",\r\n    albumimage: \"\",\r\n  });\r\n  const [selectArtists, setSelectArtists] = useState([]);\r\n  const [selectSongs, setSelectSongs] = useState([]);\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [onAddArtists, setOnAddArtists] = useState(false);\r\n  const [onAddSongs, setOnAddSongs] = useState(false);\r\n\r\n  const handleAddAlbum = (evt) => {\r\n    evt.preventDefault();\r\n    addAlbum(state);\r\n    handleClose();\r\n    setState({\r\n      albumname: \"\",\r\n      albumimage: \"\",\r\n    });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleOnAddArtists = () => {\r\n    setOnAddArtists(!onAddArtists);\r\n  };\r\n  const handleOnAddSongs = () => {\r\n    setOnAddSongs(!onAddSongs);\r\n  };\r\n\r\n  const handleArtists = useCallback(async (data) => {\r\n    console.log(data);\r\n    // let ids = [];\r\n    // await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: data,\r\n    });\r\n  });\r\n\r\n  const handleSongs = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    console.log(ids);\r\n\r\n    await setSelectSongs(ids);\r\n\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddAlbum}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Album</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"albumname\"\r\n            value={state.albumname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.albumimage}\r\n            name=\"albumimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <h5>\r\n            Add Artist{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddArtists}>\r\n              {onAddArtists ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddArtists ? (\r\n            <div>\r\n              {fetchedArtists ? (\r\n                <Selectartistforalbum\r\n                  data={fetchedArtists}\r\n                  selectArtists={handleArtists}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          <br />\r\n\r\n          <h5>\r\n            Add Songs{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddSongs}>\r\n              {onAddSongs ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddSongs ? (\r\n            <div>\r\n              {fetchedSongs ? (\r\n                <Selectsongsforartist\r\n                  data={fetchedSongs}\r\n                  selectSongs={handleSongs}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddAlbum} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Editalbum.js",["448","449","450","451","452","453","454","455"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Selectartistforalbum from \"../Components/Selectartistforalbum\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nexport default function Editalbum({\r\n  open,\r\n  handleClickOpen,\r\n  data,\r\n  handleEditAlbum,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    albumname: data.albumname,\r\n    albumimage: data.albumimage,\r\n    artists: data.artists,\r\n    songs: data.songs,\r\n  });\r\n\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [foundArtists, setFoundArtists] = useState([]);\r\n  const [editArtists, setEditArtists] = useState(false);\r\n  const [addArtists, setAddArtists] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  console.log(data);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    handleEditAlbum(state);\r\n    handleCloseEdit();\r\n    // setState({\r\n    //   albumname: \"\",\r\n    //   albumimage: \"\",\r\n    // });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtistsToggle = () => {\r\n    setEditArtists(!editArtists);\r\n    setAddArtists(false);\r\n  };\r\n\r\n  const handleAddArtists = () => {\r\n    handleArtistsToggle();\r\n    setAddArtists(!addArtists);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddArtists = (data) => {\r\n    let yoo;\r\n    console.log(foundArtists);\r\n    console.log(data);\r\n\r\n    yoo = allArtists.filter((artist) => {\r\n      return artist._id === data;\r\n    });\r\n\r\n    console.log(yoo);\r\n\r\n    setFoundArtists(yoo[0]);\r\n    setState({\r\n      ...state,\r\n      artists: yoo[0]._id,\r\n    });\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const deleteAlbumArtists = async (id) => {\r\n    console.log(id);\r\n\r\n    await setFoundArtists(\"\");\r\n    await setState({\r\n      ...state,\r\n      artists: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      let filterArtists;\r\n      allArtists = await getArtists();\r\n      setAllArtists(allArtists);\r\n      console.log(allArtists);\r\n\r\n      allArtists.filter((artist) => {\r\n        console.log(artist);\r\n        console.log(state.artists);\r\n        if (artist._id === state.artists) {\r\n          filterArtists = artist;\r\n        }\r\n      });\r\n\r\n      console.log(filterArtists);\r\n      await setFoundArtists(filterArtists);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      let filterSongs = [];\r\n      allSongs = await getSongs();\r\n      setAllSongs(allSongs);\r\n      console.log(allSongs);\r\n      state.songs.map((songId) => {\r\n        allSongs.filter((song) => {\r\n          if (song._id === songId) {\r\n            filterSongs.push(song);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundSongs(filterSongs);\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        // onSubmit={handleSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Artist</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"albumname\"\r\n            value={state.albumname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.albumimage}\r\n            name=\"albumimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Artist</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleArtistsToggle}\r\n              >\r\n                {editArtists ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editArtists || addArtists ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddArtists}\r\n                  >\r\n                    {addArtists ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editArtists ? (\r\n                <div>\r\n                  {foundArtists ? (\r\n                    <List>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={foundArtists.artistname}\r\n                          // secondary={secondary ? \"Secondary text\" : null}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <DeleteForeverIcon\r\n                              onClick={() =>\r\n                                deleteAlbumArtists(foundArtists._id)\r\n                              }\r\n                            />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addArtists ? (\r\n              <Selectartistforalbum\r\n                data={allArtists}\r\n                selectArtists={handleSelectedAddArtists}\r\n              />\r\n            ) : null}\r\n          </div>\r\n\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Songs</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleSongsToggle}\r\n              >\r\n                {editSongs ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editSongs || addSongs ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddSongs}\r\n                  >\r\n                    {addSongs ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editSongs ? (\r\n                <div>\r\n                  {foundSongs ? (\r\n                    <List>\r\n                      {foundSongs.map((song) => (\r\n                        <ListItem>\r\n                          {console.log()}\r\n                          <ListItemText\r\n                            primary={song.songname}\r\n                            // secondary={secondary ? \"Secondary text\" : null}\r\n                          />\r\n                          <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                              <DeleteForeverIcon\r\n                                onClick={() => deleteArtistSong(song._id)}\r\n                              />\r\n                            </IconButton>\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addSongs ? (\r\n              <Selectsongsforartist\r\n                data={allSongs}\r\n                selectSongs={handleSelectedAddSongs}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update Album\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Albumstable.js",["456","457","458","459","460","461","462"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Albumstable({ data, handleDelete, handleEdit }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [artists, setArtists] = useState();\r\n  const [artistName, setArtistName] = useState();\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  const findArtistName = (id) => {\r\n    let name;\r\n    console.log(artists);\r\n    name = artists.filter((artist) => {\r\n      return artist._id === id;\r\n    });\r\n    // return name;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {console.log(data)}\r\n              {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))}\r\n              <StyledTableCell>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n                <StyledTableCell>{row.songs.length}</StyledTableCell>\r\n                <StyledTableCell>{row._id}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">{row.albumname}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">\r\n                  {row.albumimage}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\">\r\n                  {artists ? findArtistName(row.artists) : null}\r\n                </StyledTableCell>\r\n                {/* <StyledTableCell align=\"right\">\r\n                {row.album.length}\r\n              </StyledTableCell> */}\r\n                <StyledTableCell align=\"left\">\r\n                  <DeleteForeverIcon onClick={() => hanldeDelete(row._id)} />\r\n                  <EditIcon\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        albumimage: row.albumimage,\r\n                        albumname: row.albumname,\r\n                        artists: row.artists,\r\n                        songs: row.songs,\r\n                      })\r\n                    }\r\n                  />\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-3.js",["463"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ff5252'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#ff5252',\r\n            strokeColor: '#ff5252',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Visit :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-4.js",["464"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ffba57'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#ffba57',\r\n            strokeColor: '#ffba57',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Usage :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [12, 25, 36, 9, 54, 25, 66, 66, 41, 89, 63, 25, 44, 89, 41]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-2.js",["465"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#9ccc65',\r\n            strokeColor: '#9ccc65',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Sale :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [12, 25, 36, 9, 54, 25, 66, 66, 41, 89, 63, 25, 44, 89, 41]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\sale-seo-analytics-1.js",["466"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#4680ff',\r\n            strokeColor: '#4680ff',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Site Analysis :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Addsong.js",["467","468","469","470","471","472","473"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Selectartistforsong from \"../Components/Selectartistforsong\";\r\nimport Upload from \"../Components/Upload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Addsong = ({ open, addSong, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    songname: \"\",\r\n    songimage: \"\",\r\n    artists: [],\r\n  });\r\n\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [selectArtists, setSelectArtists] = useState();\r\n  const [onAddArtists, setOnAddArtists] = useState(false);\r\n  const [file, setFile] = useState();\r\n\r\n  const handleAddSong = useCallback(async (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    console.log(file);\r\n\r\n    const data = new FormData();\r\n    data.append(\"songname\", state.songname);\r\n    data.append(\"songimage\", state.songimage);\r\n    data.append(\"artists\", state.artists);\r\n    data.append(\"file\", file);\r\n\r\n    addSong(data);\r\n    handleClose();\r\n  });\r\n\r\n  const handleOnAddArtists = () => {\r\n    setOnAddArtists(!onAddArtists);\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtists = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: ids,\r\n    });\r\n  });\r\n\r\n  const handleFile = (uploadedFile) => {\r\n    setFile(uploadedFile);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddSong}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Song</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"songname\"\r\n            value={state.songname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.songimage}\r\n            name=\"songimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <h5>\r\n            Add Artist{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddArtists}>\r\n              {onAddArtists ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddArtists ? (\r\n            <div>\r\n              {fetchedArtists ? (\r\n                <Selectartistforsong\r\n                  data={fetchedArtists}\r\n                  selectArtists={handleArtists}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n          <div className=\"flex\">\r\n            <Upload handleFile={handleFile} />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddSong} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addsong;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Editsong.js",["474","475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Selectartistforsong from \"../Components/Selectartistforsong\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nexport default function Editsong({\r\n  open,\r\n  handleClickOpen,\r\n  data,\r\n  handleEditSong,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    songname: data.songname,\r\n    songimage: data.songimage,\r\n    artists: data.artists,\r\n    songs: data.songs,\r\n  });\r\n\r\n  console.log(open, data);\r\n\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [foundArtists, setFoundArtists] = useState([]);\r\n  const [editArtists, setEditArtists] = useState(false);\r\n  const [addArtists, setAddArtists] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    handleEditSong(state);\r\n    handleCloseEdit();\r\n    // setState({\r\n    //   albumname: \"\",\r\n    //   albumimage: \"\",\r\n    // });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtistsToggle = () => {\r\n    setEditArtists(!editArtists);\r\n    setAddArtists(false);\r\n  };\r\n\r\n  const handleAddArtists = () => {\r\n    handleArtistsToggle();\r\n    setAddArtists(!addArtists);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddArtists = (data) => {\r\n    let yoo;\r\n    console.log(foundArtists);\r\n    console.log(data);\r\n\r\n    yoo = data.map((artist) => {\r\n      return artist._id;\r\n    });\r\n\r\n    console.log(yoo);\r\n\r\n    setFoundArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: yoo,\r\n    });\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const deleteAlbumArtists = async (id) => {\r\n    console.log(id);\r\n\r\n    await setFoundArtists(\"\");\r\n    await setState({\r\n      ...state,\r\n      artists: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      let filterArtists = [];\r\n      allArtists = await getArtists();\r\n      setAllArtists(allArtists);\r\n      console.log(allArtists);\r\n\r\n      //   allArtists.map((artist) => {\r\n      //     // console.log(artist);\r\n      //     // console.log(state.artists);\r\n      //     // if (artist._id === state.artists) {\r\n      //     //   filterArtists = artist;\r\n      //     // }\r\n      //     state.artists.filter((yoo) => {\r\n\r\n      //     })\r\n      //   });\r\n\r\n      state.artists.map((artistId) => {\r\n        allArtists.filter((artist) => {\r\n          if (artist._id === artistId) {\r\n            filterArtists.push(artist);\r\n          }\r\n        });\r\n      });\r\n\r\n      console.log(filterArtists);\r\n      await setFoundArtists(filterArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        // onSubmit={handleSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Artist</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"songname\"\r\n            value={state.songname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.songimage}\r\n            name=\"songimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Artist</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleArtistsToggle}\r\n              >\r\n                {editArtists ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editArtists || addArtists ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddArtists}\r\n                  >\r\n                    {addArtists ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n\r\n              <div>\r\n                {console.log(foundArtists)}\r\n                {foundArtists ? (\r\n                  <List>\r\n                    {foundArtists.map((artist) => {\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={artist.artistname}\r\n                          // secondary={secondary ? \"Secondary text\" : null}\r\n                        />\r\n                        {console.log(artist.artistname)}\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <DeleteForeverIcon\r\n                              onClick={() => deleteAlbumArtists(artist._id)}\r\n                            />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>;\r\n                    })}\r\n                  </List>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            {addArtists ? (\r\n              <Selectartistforsong\r\n                data={allArtists}\r\n                selectArtists={handleSelectedAddArtists}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update Album\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\analytics-profit-processed.js",["489"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ffba57'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#fff',\r\n            strokeColor: '#ffba57',\r\n            strokeWidth: 2,\r\n            hover: {\r\n                size: 7,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Profit Processed :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89, 63]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Songstable.js",["490","491","492","493","494","495","496","497"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Albumstable({ data, handleDelete, handleEdit }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [artists, setArtists] = useState();\r\n  const [artistName, setArtistName] = useState();\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  const findArtistName = (id) => {\r\n    let name;\r\n    console.log(artists);\r\n    name = artists.filter((artist) => {\r\n      return artist._id === id;\r\n    });\r\n    // return name;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {console.log(data)}\r\n              {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))}\r\n              <StyledTableCell>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n                {console.log(row)}\r\n                <StyledTableCell align=\"left\">{row._id}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.artists.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.songname}</StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">{row.songimage}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.noofplays}</StyledTableCell>\r\n                {/* <StyledTableCell align=\"right\">\r\n                  {artists ? findArtistName(row.artists) : null}\r\n                </StyledTableCell> */}\r\n                {/* <StyledTableCell align=\"right\">\r\n                {row.album.length}\r\n              </StyledTableCell> */}\r\n                <StyledTableCell align=\"left\">\r\n                  <DeleteForeverIcon onClick={() => hanldeDelete(row._id)} />\r\n                  <EditIcon\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        songname: row.songname,\r\n                        songimage: row.songimage,\r\n                        noofplays: row.noofplays,\r\n                        artists: row.artists,\r\n                      })\r\n                    }\r\n                  />\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\analytics-amount-processed.js",["498"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#fff',\r\n            strokeColor: '#4680ff',\r\n            strokeWidth: 2,\r\n            hover: {\r\n                size: 7,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Amount Processed :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\charts\\analytics-amount-spent.js",["499"],"export default {\r\n    type: 'bar',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: '60%'\r\n            }\r\n        },\r\n        xaxis: {\r\n            crosshairs: {\r\n                width: 1\r\n            },\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Amount Spent :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89, 63, 25, 44, 12]\r\n    }]\r\n}","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Userstable.js",["500","501"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { deleteUsers } from \"../Pagesactions/usersactions\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n//   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n//   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n//   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n//   createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Userstable({ data, handleUpdateData }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    console.log(id);\r\n    deleteUsers(id);\r\n    handleUpdateData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {console.log(keys)}\r\n            {keys.map((key) => (\r\n              <StyledTableCell>{key}</StyledTableCell>\r\n            ))}\r\n            <StyledTableCell> Actions</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row, idx) => (\r\n            <StyledTableRow key={row._id}>\r\n              {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n              <StyledTableCell>{row._id}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.age}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.gender}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">\r\n                <DeleteForeverIcon onClick={() => handleDelete(row._id)} />\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectartistforalbum.js",["502","503","504","505","506","507","508","509","510"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsforartist({ data, selectArtists }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState();\r\n\r\n  //   const handleToggle = (value) => async () => {\r\n  //     console.log(value);\r\n  //     const currentIndex = checked.indexOf(value);\r\n  //     console.log(currentIndex);\r\n  //     const newChecked = [...checked];\r\n  //     console.log(newChecked);\r\n\r\n  //     if (currentIndex === -1) {\r\n  //       newChecked.push(value);\r\n  //     } else {\r\n  //       newChecked.splice(currentIndex, 1);\r\n  //     }\r\n\r\n  //     await setChecked(newChecked);\r\n  //   };\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n    setChecked(event.target.value);\r\n  };\r\n\r\n  const handleAddArtist = () => {\r\n    selectArtists(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        name=\"gender1\"\r\n        // value={checked}\r\n        onChange={handleChange}\r\n      >\r\n        {console.log(data)}\r\n        {data.map((value) => {\r\n          const labelId = `checkbox-list-label-${value}`;\r\n          console.log(labelId);\r\n          console.log(value);\r\n\r\n          return (\r\n            <FormControlLabel\r\n              value={value._id}\r\n              control={<Radio />}\r\n              label={value.artistname}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddArtist}>\r\n        Add Artist\r\n      </button>\r\n      {/* {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.songname}`} />\r\n          </ListItem>\r\n        );\r\n      })} */}\r\n      {/* <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Artist\r\n      </button> */}\r\n    </List>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Upload.js",["511","512","513"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst Upload = ({ handleFile }) => {\r\n  const [file, setFile] = useState();\r\n  const filePickerRef = useRef();\r\n\r\n  const pickImagehandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        id=\"file\"\r\n        accept=\".mp3\"\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        onChange={(event) => {\r\n          const file = event.target.files[0];\r\n          setFile(file);\r\n          handleFile(file);\r\n        }}\r\n      />\r\n      {file ? <p>{file.name}</p> : null}\r\n\r\n      {console.log(file)}\r\n      <button\r\n        className={`btn btn-sm btn-danger`}\r\n        type=\"button\"\r\n        onClick={pickImagehandler}\r\n      >\r\n        Upload Song\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Components\\Selectartistforsong.js",["514","515","516"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectartistforsong({ data, selectArtists }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectArtists(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value._id);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.artistname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Artist\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Utils\\APU_URL.js",[],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Contexts\\AuthContext.js",["517"],"D:\\Kaam ki Baat\\Web Stuff\\My Projects\\Internship projects\\bongfrontend\\src\\Styles\\constants.js",[],{"ruleId":"518","severity":1,"message":"519","line":6,"column":24,"nodeType":"520","messageId":"521","endLine":6,"endColumn":35},{"ruleId":"522","replacedBy":"523"},{"ruleId":"524","replacedBy":"525"},{"ruleId":"518","severity":1,"message":"526","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"527","line":2,"column":10,"nodeType":"520","messageId":"521","endLine":2,"endColumn":20},{"ruleId":"518","severity":1,"message":"528","line":3,"column":10,"nodeType":"520","messageId":"521","endLine":3,"endColumn":18},{"ruleId":"518","severity":1,"message":"529","line":4,"column":10,"nodeType":"520","messageId":"521","endLine":4,"endColumn":18},{"ruleId":"518","severity":1,"message":"530","line":5,"column":10,"nodeType":"520","messageId":"521","endLine":5,"endColumn":19},{"ruleId":"518","severity":1,"message":"531","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":18},{"ruleId":"518","severity":1,"message":"532","line":14,"column":8,"nodeType":"520","messageId":"521","endLine":14,"endColumn":14},{"ruleId":"518","severity":1,"message":"533","line":21,"column":8,"nodeType":"520","messageId":"521","endLine":21,"endColumn":21},{"ruleId":"518","severity":1,"message":"534","line":27,"column":10,"nodeType":"520","messageId":"521","endLine":27,"endColumn":21},{"ruleId":"518","severity":1,"message":"535","line":27,"column":23,"nodeType":"520","messageId":"521","endLine":27,"endColumn":42},{"ruleId":"518","severity":1,"message":"536","line":29,"column":10,"nodeType":"520","messageId":"521","endLine":29,"endColumn":22},{"ruleId":"518","severity":1,"message":"537","line":33,"column":20,"nodeType":"520","messageId":"521","endLine":33,"endColumn":30},{"ruleId":"518","severity":1,"message":"538","line":34,"column":18,"nodeType":"520","messageId":"521","endLine":34,"endColumn":26},{"ruleId":"518","severity":1,"message":"539","line":35,"column":19,"nodeType":"520","messageId":"521","endLine":35,"endColumn":28},{"ruleId":"518","severity":1,"message":"540","line":36,"column":18,"nodeType":"520","messageId":"521","endLine":36,"endColumn":26},{"ruleId":"518","severity":1,"message":"541","line":37,"column":22,"nodeType":"520","messageId":"521","endLine":37,"endColumn":34},{"ruleId":"518","severity":1,"message":"542","line":38,"column":25,"nodeType":"520","messageId":"521","endLine":38,"endColumn":40},{"ruleId":"518","severity":1,"message":"543","line":39,"column":23,"nodeType":"520","messageId":"521","endLine":39,"endColumn":36},{"ruleId":"518","severity":1,"message":"544","line":43,"column":11,"nodeType":"520","messageId":"521","endLine":43,"endColumn":15},{"ruleId":"518","severity":1,"message":"545","line":43,"column":17,"nodeType":"520","messageId":"521","endLine":43,"endColumn":24},{"ruleId":"518","severity":1,"message":"546","line":52,"column":19,"nodeType":"520","messageId":"521","endLine":52,"endColumn":30},{"ruleId":"518","severity":1,"message":"547","line":46,"column":8,"nodeType":"520","messageId":"521","endLine":46,"endColumn":15},{"ruleId":"518","severity":1,"message":"534","line":1,"column":10,"nodeType":"520","messageId":"521","endLine":1,"endColumn":21},{"ruleId":"518","severity":1,"message":"548","line":4,"column":32,"nodeType":"520","messageId":"521","endLine":4,"endColumn":42},{"ruleId":"518","severity":1,"message":"549","line":19,"column":8,"nodeType":"520","messageId":"521","endLine":19,"endColumn":17},{"ruleId":"518","severity":1,"message":"550","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":16},{"ruleId":"551","severity":1,"message":"552","line":143,"column":13,"nodeType":"553","endLine":143,"endColumn":58},{"ruleId":"518","severity":1,"message":"554","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":26},{"ruleId":"518","severity":1,"message":"554","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":26},{"ruleId":"518","severity":1,"message":"555","line":19,"column":8,"nodeType":"520","messageId":"521","endLine":19,"endColumn":21},{"ruleId":"518","severity":1,"message":"556","line":29,"column":26,"nodeType":"520","messageId":"521","endLine":29,"endColumn":43},{"ruleId":"518","severity":1,"message":"557","line":66,"column":9,"nodeType":"520","messageId":"521","endLine":66,"endColumn":17},{"ruleId":"558","severity":1,"message":"559","line":85,"column":27,"nodeType":"560","messageId":"561","endLine":85,"endColumn":29},{"ruleId":"518","severity":1,"message":"562","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":16},{"ruleId":"518","severity":1,"message":"563","line":13,"column":8,"nodeType":"520","messageId":"521","endLine":13,"endColumn":23},{"ruleId":"518","severity":1,"message":"564","line":19,"column":8,"nodeType":"520","messageId":"521","endLine":19,"endColumn":13},{"ruleId":"518","severity":1,"message":"563","line":15,"column":8,"nodeType":"520","messageId":"521","endLine":15,"endColumn":23},{"ruleId":"518","severity":1,"message":"564","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":13},{"ruleId":"518","severity":1,"message":"565","line":9,"column":3,"nodeType":"520","messageId":"521","endLine":9,"endColumn":14},{"ruleId":"518","severity":1,"message":"566","line":9,"column":3,"nodeType":"520","messageId":"521","endLine":9,"endColumn":13},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"568","line":5,"column":3,"nodeType":"520","messageId":"521","endLine":5,"endColumn":15},{"ruleId":"518","severity":1,"message":"569","line":6,"column":3,"nodeType":"520","messageId":"521","endLine":6,"endColumn":16},{"ruleId":"518","severity":1,"message":"565","line":10,"column":3,"nodeType":"520","messageId":"521","endLine":10,"endColumn":14},{"ruleId":"518","severity":1,"message":"570","line":11,"column":3,"nodeType":"520","messageId":"521","endLine":11,"endColumn":15},{"ruleId":"518","severity":1,"message":"571","line":21,"column":10,"nodeType":"520","messageId":"521","endLine":21,"endColumn":19},{"ruleId":"518","severity":1,"message":"572","line":18,"column":4,"nodeType":"520","messageId":"521","endLine":18,"endColumn":16},{"ruleId":"518","severity":1,"message":"573","line":19,"column":4,"nodeType":"520","messageId":"521","endLine":19,"endColumn":17},{"ruleId":"518","severity":1,"message":"574","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":14},{"ruleId":"575","severity":1,"message":"576","line":130,"column":22,"nodeType":"577","endLine":130,"endColumn":37},{"ruleId":"518","severity":1,"message":"574","line":11,"column":10,"nodeType":"520","messageId":"521","endLine":11,"endColumn":14},{"ruleId":"518","severity":1,"message":"578","line":95,"column":7,"nodeType":"520","messageId":"521","endLine":95,"endColumn":11},{"ruleId":"518","severity":1,"message":"579","line":112,"column":22,"nodeType":"520","messageId":"521","endLine":112,"endColumn":34},{"ruleId":"518","severity":1,"message":"580","line":14,"column":8,"nodeType":"520","messageId":"521","endLine":14,"endColumn":20},{"ruleId":"518","severity":1,"message":"581","line":21,"column":8,"nodeType":"520","messageId":"521","endLine":21,"endColumn":13},{"ruleId":"518","severity":1,"message":"582","line":30,"column":7,"nodeType":"520","messageId":"521","endLine":30,"endColumn":20},{"ruleId":"518","severity":1,"message":"544","line":115,"column":9,"nodeType":"520","messageId":"521","endLine":115,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":158,"column":6,"nodeType":"585","endLine":158,"endColumn":8,"suggestions":"586"},{"ruleId":"518","severity":1,"message":"587","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":18},{"ruleId":"518","severity":1,"message":"588","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":16},{"ruleId":"518","severity":1,"message":"589","line":13,"column":8,"nodeType":"520","messageId":"521","endLine":13,"endColumn":21},{"ruleId":"518","severity":1,"message":"590","line":9,"column":4,"nodeType":"520","messageId":"521","endLine":9,"endColumn":10},{"ruleId":"518","severity":1,"message":"591","line":10,"column":4,"nodeType":"520","messageId":"521","endLine":10,"endColumn":14},{"ruleId":"518","severity":1,"message":"592","line":13,"column":22,"nodeType":"520","messageId":"521","endLine":13,"endColumn":30},{"ruleId":"518","severity":1,"message":"593","line":66,"column":29,"nodeType":"520","messageId":"521","endLine":66,"endColumn":48},{"ruleId":"575","severity":1,"message":"576","line":85,"column":25,"nodeType":"577","endLine":85,"endColumn":47},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"594","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":14},{"ruleId":"518","severity":1,"message":"595","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":20},{"ruleId":"518","severity":1,"message":"596","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"518","severity":1,"message":"597","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":12},{"ruleId":"518","severity":1,"message":"598","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":15},{"ruleId":"518","severity":1,"message":"599","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":22},{"ruleId":"518","severity":1,"message":"600","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":14},{"ruleId":"518","severity":1,"message":"601","line":43,"column":10,"nodeType":"520","messageId":"521","endLine":43,"endColumn":21},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":43,"endColumn":2},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":43,"endColumn":2},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":43,"endColumn":2},{"ruleId":"518","severity":1,"message":"605","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":13},{"ruleId":"518","severity":1,"message":"594","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"606","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":17},{"ruleId":"518","severity":1,"message":"607","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":19},{"ruleId":"518","severity":1,"message":"608","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":19},{"ruleId":"518","severity":1,"message":"594","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":14},{"ruleId":"518","severity":1,"message":"609","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":12},{"ruleId":"518","severity":1,"message":"607","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":19},{"ruleId":"518","severity":1,"message":"608","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":19},{"ruleId":"518","severity":1,"message":"594","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":14},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"594","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":14},{"ruleId":"518","severity":1,"message":"595","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":20},{"ruleId":"518","severity":1,"message":"596","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"518","severity":1,"message":"597","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":12},{"ruleId":"518","severity":1,"message":"598","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":15},{"ruleId":"518","severity":1,"message":"599","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":22},{"ruleId":"518","severity":1,"message":"600","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":14},{"ruleId":"518","severity":1,"message":"601","line":42,"column":10,"nodeType":"520","messageId":"521","endLine":42,"endColumn":21},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"594","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":14},{"ruleId":"518","severity":1,"message":"595","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":20},{"ruleId":"518","severity":1,"message":"596","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"518","severity":1,"message":"597","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":12},{"ruleId":"518","severity":1,"message":"598","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":15},{"ruleId":"518","severity":1,"message":"599","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":22},{"ruleId":"518","severity":1,"message":"600","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":14},{"ruleId":"518","severity":1,"message":"601","line":42,"column":10,"nodeType":"520","messageId":"521","endLine":42,"endColumn":21},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"558","severity":1,"message":"610","line":61,"column":38,"nodeType":"560","messageId":"611","endLine":61,"endColumn":40},{"ruleId":"558","severity":1,"message":"612","line":66,"column":32,"nodeType":"560","messageId":"561","endLine":66,"endColumn":34},{"ruleId":"558","severity":1,"message":"610","line":82,"column":36,"nodeType":"560","messageId":"611","endLine":82,"endColumn":38},{"ruleId":"558","severity":1,"message":"612","line":87,"column":30,"nodeType":"560","messageId":"561","endLine":87,"endColumn":32},{"ruleId":"558","severity":1,"message":"559","line":131,"column":24,"nodeType":"560","messageId":"561","endLine":131,"endColumn":26},{"ruleId":"558","severity":1,"message":"559","line":156,"column":24,"nodeType":"560","messageId":"561","endLine":156,"endColumn":26},{"ruleId":"518","severity":1,"message":"613","line":170,"column":9,"nodeType":"520","messageId":"521","endLine":170,"endColumn":26},{"ruleId":"558","severity":1,"message":"559","line":181,"column":34,"nodeType":"560","messageId":"561","endLine":181,"endColumn":36},{"ruleId":"558","severity":1,"message":"612","line":182,"column":34,"nodeType":"560","messageId":"561","endLine":182,"endColumn":36},{"ruleId":"558","severity":1,"message":"559","line":198,"column":32,"nodeType":"560","messageId":"561","endLine":198,"endColumn":34},{"ruleId":"558","severity":1,"message":"612","line":199,"column":32,"nodeType":"560","messageId":"561","endLine":199,"endColumn":34},{"ruleId":"583","severity":1,"message":"614","line":211,"column":6,"nodeType":"585","endLine":211,"endColumn":8,"suggestions":"615"},{"ruleId":"518","severity":1,"message":"526","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"616","line":23,"column":10,"nodeType":"520","messageId":"521","endLine":23,"endColumn":15},{"ruleId":"518","severity":1,"message":"617","line":23,"column":17,"nodeType":"520","messageId":"521","endLine":23,"endColumn":25},{"ruleId":"518","severity":1,"message":"526","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"616","line":19,"column":10,"nodeType":"520","messageId":"521","endLine":19,"endColumn":15},{"ruleId":"518","severity":1,"message":"617","line":19,"column":17,"nodeType":"520","messageId":"521","endLine":19,"endColumn":25},{"ruleId":"518","severity":1,"message":"526","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"616","line":19,"column":10,"nodeType":"520","messageId":"521","endLine":19,"endColumn":15},{"ruleId":"518","severity":1,"message":"617","line":19,"column":17,"nodeType":"520","messageId":"521","endLine":19,"endColumn":25},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"618","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":18},{"ruleId":"518","severity":1,"message":"619","line":46,"column":10,"nodeType":"520","messageId":"521","endLine":46,"endColumn":14},{"ruleId":"518","severity":1,"message":"620","line":46,"column":16,"nodeType":"520","messageId":"521","endLine":46,"endColumn":23},{"ruleId":"583","severity":1,"message":"621","line":59,"column":6,"nodeType":"585","endLine":59,"endColumn":12,"suggestions":"622"},{"ruleId":"518","severity":1,"message":"623","line":26,"column":9,"nodeType":"520","messageId":"521","endLine":26,"endColumn":16},{"ruleId":"583","severity":1,"message":"624","line":59,"column":27,"nodeType":"520","endLine":59,"endColumn":38},{"ruleId":"583","severity":1,"message":"624","line":80,"column":24,"nodeType":"520","endLine":80,"endColumn":35},{"ruleId":"583","severity":1,"message":"624","line":88,"column":23,"nodeType":"520","endLine":88,"endColumn":34},{"ruleId":"625","severity":1,"message":"626","line":143,"column":13,"nodeType":"553","endLine":143,"endColumn":79},{"ruleId":"625","severity":1,"message":"626","line":160,"column":13,"nodeType":"553","endLine":160,"endColumn":78},{"ruleId":"518","severity":1,"message":"623","line":26,"column":9,"nodeType":"520","messageId":"521","endLine":26,"endColumn":16},{"ruleId":"518","severity":1,"message":"627","line":32,"column":10,"nodeType":"520","messageId":"521","endLine":32,"endColumn":23},{"ruleId":"518","severity":1,"message":"601","line":33,"column":10,"nodeType":"520","messageId":"521","endLine":33,"endColumn":21},{"ruleId":"583","severity":1,"message":"624","line":64,"column":25,"nodeType":"520","endLine":64,"endColumn":36},{"ruleId":"583","severity":1,"message":"624","line":76,"column":23,"nodeType":"520","endLine":76,"endColumn":34},{"ruleId":"625","severity":1,"message":"626","line":148,"column":13,"nodeType":"553","endLine":148,"endColumn":80},{"ruleId":"625","severity":1,"message":"626","line":167,"column":13,"nodeType":"553","endLine":167,"endColumn":78},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"558","severity":1,"message":"559","line":115,"column":24,"nodeType":"560","messageId":"561","endLine":115,"endColumn":26},{"ruleId":"558","severity":1,"message":"610","line":142,"column":36,"nodeType":"560","messageId":"611","endLine":142,"endColumn":38},{"ruleId":"558","severity":1,"message":"612","line":147,"column":30,"nodeType":"560","messageId":"561","endLine":147,"endColumn":32},{"ruleId":"558","severity":1,"message":"612","line":168,"column":34,"nodeType":"560","messageId":"561","endLine":168,"endColumn":36},{"ruleId":"558","severity":1,"message":"559","line":186,"column":32,"nodeType":"560","messageId":"561","endLine":186,"endColumn":34},{"ruleId":"558","severity":1,"message":"612","line":187,"column":32,"nodeType":"560","messageId":"561","endLine":187,"endColumn":34},{"ruleId":"583","severity":1,"message":"628","line":199,"column":6,"nodeType":"585","endLine":199,"endColumn":8,"suggestions":"629"},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"619","line":41,"column":10,"nodeType":"520","messageId":"521","endLine":41,"endColumn":14},{"ruleId":"518","severity":1,"message":"620","line":41,"column":16,"nodeType":"520","messageId":"521","endLine":41,"endColumn":23},{"ruleId":"518","severity":1,"message":"630","line":43,"column":10,"nodeType":"520","messageId":"521","endLine":43,"endColumn":20},{"ruleId":"518","severity":1,"message":"631","line":43,"column":22,"nodeType":"520","messageId":"521","endLine":43,"endColumn":35},{"ruleId":"583","severity":1,"message":"621","line":64,"column":6,"nodeType":"585","endLine":64,"endColumn":12,"suggestions":"632"},{"ruleId":"518","severity":1,"message":"633","line":79,"column":5,"nodeType":"520","messageId":"521","endLine":79,"endColumn":9},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":59,"endColumn":2},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":59,"endColumn":2},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":59,"endColumn":2},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":59,"endColumn":2},{"ruleId":"518","severity":1,"message":"623","line":27,"column":9,"nodeType":"520","messageId":"521","endLine":27,"endColumn":16},{"ruleId":"518","severity":1,"message":"634","line":35,"column":10,"nodeType":"520","messageId":"521","endLine":35,"endColumn":23},{"ruleId":"518","severity":1,"message":"635","line":36,"column":10,"nodeType":"520","messageId":"521","endLine":36,"endColumn":22},{"ruleId":"518","severity":1,"message":"627","line":38,"column":10,"nodeType":"520","messageId":"521","endLine":38,"endColumn":23},{"ruleId":"583","severity":1,"message":"624","line":42,"column":25,"nodeType":"520","endLine":42,"endColumn":36},{"ruleId":"583","severity":1,"message":"624","line":69,"column":25,"nodeType":"520","endLine":69,"endColumn":36},{"ruleId":"625","severity":1,"message":"626","line":151,"column":13,"nodeType":"553","endLine":151,"endColumn":80},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"528","line":3,"column":10,"nodeType":"520","messageId":"521","endLine":3,"endColumn":18},{"ruleId":"518","severity":1,"message":"636","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":28},{"ruleId":"518","severity":1,"message":"637","line":42,"column":10,"nodeType":"520","messageId":"521","endLine":42,"endColumn":18},{"ruleId":"518","severity":1,"message":"638","line":42,"column":20,"nodeType":"520","messageId":"521","endLine":42,"endColumn":31},{"ruleId":"518","severity":1,"message":"639","line":81,"column":9,"nodeType":"520","messageId":"521","endLine":81,"endColumn":23},{"ruleId":"518","severity":1,"message":"640","line":104,"column":9,"nodeType":"520","messageId":"521","endLine":104,"endColumn":31},{"ruleId":"558","severity":1,"message":"559","line":115,"column":24,"nodeType":"560","messageId":"561","endLine":115,"endColumn":26},{"ruleId":"518","severity":1,"message":"641","line":139,"column":9,"nodeType":"520","messageId":"521","endLine":139,"endColumn":25},{"ruleId":"558","severity":1,"message":"610","line":142,"column":36,"nodeType":"560","messageId":"611","endLine":142,"endColumn":38},{"ruleId":"558","severity":1,"message":"612","line":147,"column":30,"nodeType":"560","messageId":"561","endLine":147,"endColumn":32},{"ruleId":"558","severity":1,"message":"559","line":179,"column":36,"nodeType":"560","messageId":"561","endLine":179,"endColumn":38},{"ruleId":"558","severity":1,"message":"612","line":180,"column":36,"nodeType":"560","messageId":"561","endLine":180,"endColumn":38},{"ruleId":"583","severity":1,"message":"642","line":192,"column":6,"nodeType":"585","endLine":192,"endColumn":8,"suggestions":"643"},{"ruleId":"558","severity":1,"message":"559","line":257,"column":48,"nodeType":"560","messageId":"561","endLine":257,"endColumn":50},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":53,"endColumn":2},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"518","severity":1,"message":"619","line":41,"column":10,"nodeType":"520","messageId":"521","endLine":41,"endColumn":14},{"ruleId":"518","severity":1,"message":"620","line":41,"column":16,"nodeType":"520","messageId":"521","endLine":41,"endColumn":23},{"ruleId":"518","severity":1,"message":"630","line":43,"column":10,"nodeType":"520","messageId":"521","endLine":43,"endColumn":20},{"ruleId":"518","severity":1,"message":"631","line":43,"column":22,"nodeType":"520","messageId":"521","endLine":43,"endColumn":35},{"ruleId":"583","severity":1,"message":"621","line":64,"column":6,"nodeType":"585","endLine":64,"endColumn":12,"suggestions":"644"},{"ruleId":"518","severity":1,"message":"645","line":76,"column":9,"nodeType":"520","messageId":"521","endLine":76,"endColumn":23},{"ruleId":"518","severity":1,"message":"633","line":79,"column":5,"nodeType":"520","messageId":"521","endLine":79,"endColumn":9},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":53,"endColumn":2},{"ruleId":"602","severity":1,"message":"603","line":1,"column":1,"nodeType":"604","endLine":44,"endColumn":2},{"ruleId":"518","severity":1,"message":"567","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":49},{"ruleId":"583","severity":1,"message":"621","line":70,"column":6,"nodeType":"585","endLine":70,"endColumn":12,"suggestions":"646"},{"ruleId":"518","severity":1,"message":"526","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"596","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":16},{"ruleId":"518","severity":1,"message":"647","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":20},{"ruleId":"518","severity":1,"message":"595","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":20},{"ruleId":"518","severity":1,"message":"648","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":16},{"ruleId":"518","severity":1,"message":"649","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"650","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":17},{"ruleId":"518","severity":1,"message":"616","line":24,"column":10,"nodeType":"520","messageId":"521","endLine":24,"endColumn":15},{"ruleId":"518","severity":1,"message":"617","line":24,"column":17,"nodeType":"520","messageId":"521","endLine":24,"endColumn":25},{"ruleId":"518","severity":1,"message":"526","line":1,"column":35,"nodeType":"520","messageId":"521","endLine":1,"endColumn":44},{"ruleId":"518","severity":1,"message":"567","line":1,"column":46,"nodeType":"520","messageId":"521","endLine":1,"endColumn":57},{"ruleId":"518","severity":1,"message":"651","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":23},{"ruleId":"518","severity":1,"message":"526","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"616","line":19,"column":10,"nodeType":"520","messageId":"521","endLine":19,"endColumn":15},{"ruleId":"518","severity":1,"message":"617","line":19,"column":17,"nodeType":"520","messageId":"521","endLine":19,"endColumn":25},{"ruleId":"518","severity":1,"message":"554","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":26},"no-unused-vars","'AuthContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["652"],"no-negated-in-lhs",["653"],"'useEffect' is defined but never used.","'getArtists' is defined but never used.","'getSongs' is defined but never used.","'getUsers' is defined but never used.","'getAlbums' is defined but never used.","'Sidedrawer' is defined but never used.","'Signin' is defined but never used.","'Trendingtable' is defined but never used.","'CloudCircle' is defined but never used.","'DesktopWindowsSharp' is defined but never used.","'AuthProvider' is defined but never used.","'setArtists' is assigned a value but never used.","'setSongs' is assigned a value but never used.","'setAlbums' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'setTopCharts' is assigned a value but never used.","'setbongplaylist' is assigned a value but never used.","'setLoggedUser' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'changeToken' is assigned a value but never used.","'artists' is defined but never used.","'withStyles' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'PlayArrowIcon' is defined but never used.","'setTotalDownloads' is assigned a value but never used.","'editSong' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FaceIcon' is defined but never used.","'ArrowDropUpIcon' is defined but never used.","'Chart' is defined but never used.","'addTrending' is defined but never used.","'addPopular' is defined but never used.","'useCallback' is defined but never used.","'addTopcharts' is defined but never used.","'editTopcharts' is defined but never used.","'editTrending' is defined but never used.","'topcharts' is assigned a value but never used.","'sendOtpEmail' is defined but never used.","'sendOtpMobile' is defined but never used.","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'card' is assigned a value but never used.","'setList2Item' is assigned a value but never used.","'MusicStepper' is defined but never used.","'axios' is defined but never used.","'tutorialSteps' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recomended.length'. Either include it or remove the dependency array.","ArrayExpression",["654"],"'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'AccountCircle' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'useTheme' is defined but never used.","'setIsSubmitDisabled' is assigned a value but never used.","'Button' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'selectSongs' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Paper' is defined but never used.","'MusicCard' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'song' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.filter() expects a return value from arrow function.","'handleDeleteAlbum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.albums' and 'state.songs'. Either include them or remove the dependency array.",["655"],"'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'Editartist' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'settingKeys'. Either include it or remove the dependency array.",["656"],"'classes' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'selectArtists' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.artists' and 'state.songs'. Either include them or remove the dependency array.",["657"],"'artistName' is assigned a value but never used.","'setArtistName' is assigned a value but never used.",["658"],"'name' is assigned a value but never used.","'fetchedAlbums' is assigned a value but never used.","'fetchedSongs' is assigned a value but never used.","'Selectsongsforartist' is defined but never used.","'allSongs' is assigned a value but never used.","'setAllSongs' is assigned a value but never used.","'handleAddSongs' is assigned a value but never used.","'handleSelectedAddSongs' is assigned a value but never used.","'deleteArtistSong' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state.artists'. Either include it or remove the dependency array.",["659"],["660"],"'findArtistName' is assigned a value but never used.",["661"],"'ListItemIcon' is defined but never used.","'Checkbox' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'CloudUploadIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"666","fix":"670"},{"desc":"671","fix":"672"},{"desc":"666","fix":"673"},{"desc":"666","fix":"674"},"Update the dependencies array to be: [recomended.length]",{"range":"675","text":"676"},"Update the dependencies array to be: [state.albums, state.songs]",{"range":"677","text":"678"},"Update the dependencies array to be: [data, settingKeys]",{"range":"679","text":"680"},"Update the dependencies array to be: [state.artists, state.songs]",{"range":"681","text":"682"},{"range":"683","text":"680"},"Update the dependencies array to be: [state.artists]",{"range":"684","text":"685"},{"range":"686","text":"680"},{"range":"687","text":"680"},[4621,4623],"[recomended.length]",[5464,5466],"[state.albums, state.songs]",[1553,1559],"[data, settingKeys]",[5137,5139],"[state.artists, state.songs]",[1831,1837],[4986,4988],"[state.artists]",[1831,1837],[1956,1962]]