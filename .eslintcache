[{"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\index.js":"1","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\reportWebVitals.js":"2","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\App.js":"3","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Sidedrawer.js":"4","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\User.js":"5","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Songs.js":"6","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Signin.js":"7","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Artist.js":"8","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Albums.js":"9","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Songstable.js":"10","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\usersactions.js":"11","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editartist.js":"12","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addartist.js":"13","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editalbum.js":"14","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Artiststable.js":"15","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addalbum.js":"16","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Albumstable.js":"17","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\artistsactions.js":"18","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumforartist.js":"19","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsforartist.js":"20","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\songsactions.js":"21","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforalbum.js":"22","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\AdminHome.js":"23","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\albumactions.js":"24","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-lead.js":"25","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-vendor.js":"26","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-invoice.js":"27","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-processed.js":"28","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-spent.js":"29","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-profit-processed.js":"30","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-4.js":"31","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-1.js":"32","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-3.js":"33","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-2.js":"34","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addsong.js":"35","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforsong.js":"36","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Upload.js":"37","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editsong.js":"38","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Userstable.js":"39","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Adminpopular.js":"40","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintrending.js":"41","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintopcharts.js":"42","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Trendingtable.js":"43","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtrending.js":"44","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsfortrending.js":"45","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addpopular.js":"46","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addchart.js":"47","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Managehomepage.js":"48","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Active.js":"49","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Recommended.js":"50","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Bongplaylist.js":"51","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topartists.js":"52","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topalbums.js":"53","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopalbums.js":"54","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumfortopalbums.js":"55","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topalbumtable.js":"56","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topartiststable.js":"57","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopartists.js":"58","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistsfortopartists.js":"59","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Tabsvertical.js":"60","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addnewchart.js":"61","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Imageupload.js":"62","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Imageavatar.js":"63","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Userview.js":"64","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Viewartist.js":"65","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Viewalbum.js":"66"},{"size":500,"mtime":1607197583990,"results":"67","hashOfConfig":"68"},{"size":362,"mtime":499162500000,"results":"69","hashOfConfig":"68"},{"size":4799,"mtime":1609752018286,"results":"70","hashOfConfig":"68"},{"size":8544,"mtime":1609850255814,"results":"71","hashOfConfig":"68"},{"size":3753,"mtime":1610455469084,"results":"72","hashOfConfig":"68"},{"size":6215,"mtime":1610370438854,"results":"73","hashOfConfig":"68"},{"size":4037,"mtime":1607197855005,"results":"74","hashOfConfig":"68"},{"size":7943,"mtime":1610470725039,"results":"75","hashOfConfig":"68"},{"size":7923,"mtime":1610543398927,"results":"76","hashOfConfig":"68"},{"size":6327,"mtime":1610368512698,"results":"77","hashOfConfig":"68"},{"size":696,"mtime":1609175814396,"results":"78","hashOfConfig":"68"},{"size":12815,"mtime":1610381093568,"results":"79","hashOfConfig":"68"},{"size":7284,"mtime":1610379025574,"results":"80","hashOfConfig":"68"},{"size":17028,"mtime":1610302591777,"results":"81","hashOfConfig":"68"},{"size":5045,"mtime":1610455748654,"results":"82","hashOfConfig":"68"},{"size":14153,"mtime":1610291417013,"results":"83","hashOfConfig":"68"},{"size":7359,"mtime":1610543067465,"results":"84","hashOfConfig":"68"},{"size":1777,"mtime":1610297835029,"results":"85","hashOfConfig":"68"},{"size":2164,"mtime":1607430265038,"results":"86","hashOfConfig":"68"},{"size":2218,"mtime":1608576564825,"results":"87","hashOfConfig":"68"},{"size":6737,"mtime":1610354497060,"results":"88","hashOfConfig":"68"},{"size":3339,"mtime":1608574366031,"results":"89","hashOfConfig":"68"},{"size":10097,"mtime":1610522480234,"results":"90","hashOfConfig":"68"},{"size":1368,"mtime":1610210133020,"results":"91","hashOfConfig":"68"},{"size":940,"mtime":1608642855198,"results":"92","hashOfConfig":"68"},{"size":942,"mtime":1608642855294,"results":"93","hashOfConfig":"68"},{"size":940,"mtime":1608642855371,"results":"94","hashOfConfig":"68"},{"size":1211,"mtime":1608651020155,"results":"95","hashOfConfig":"68"},{"size":993,"mtime":1608651020990,"results":"96","hashOfConfig":"68"},{"size":1211,"mtime":1608651021437,"results":"97","hashOfConfig":"68"},{"size":1303,"mtime":1608656995912,"results":"98","hashOfConfig":"68"},{"size":1305,"mtime":1608656995101,"results":"99","hashOfConfig":"68"},{"size":1303,"mtime":1608656995559,"results":"100","hashOfConfig":"68"},{"size":1302,"mtime":1608656995429,"results":"101","hashOfConfig":"68"},{"size":12167,"mtime":1610458539028,"results":"102","hashOfConfig":"68"},{"size":2224,"mtime":1608885553040,"results":"103","hashOfConfig":"68"},{"size":942,"mtime":1608887309433,"results":"104","hashOfConfig":"68"},{"size":16929,"mtime":1610369287437,"results":"105","hashOfConfig":"68"},{"size":4182,"mtime":1610455401853,"results":"106","hashOfConfig":"68"},{"size":6315,"mtime":1610536039709,"results":"107","hashOfConfig":"68"},{"size":6545,"mtime":1610535382591,"results":"108","hashOfConfig":"68"},{"size":7357,"mtime":1609863355124,"results":"109","hashOfConfig":"68"},{"size":4626,"mtime":1609849138338,"results":"110","hashOfConfig":"68"},{"size":3583,"mtime":1610448496165,"results":"111","hashOfConfig":"68"},{"size":2846,"mtime":1610448550935,"results":"112","hashOfConfig":"68"},{"size":3584,"mtime":1609087617861,"results":"113","hashOfConfig":"68"},{"size":3616,"mtime":1609133461511,"results":"114","hashOfConfig":"68"},{"size":15760,"mtime":1610522260059,"results":"115","hashOfConfig":"68"},{"size":2204,"mtime":1610521594643,"results":"116","hashOfConfig":"68"},{"size":5407,"mtime":1610540773920,"results":"117","hashOfConfig":"68"},{"size":6538,"mtime":1610536289514,"results":"118","hashOfConfig":"68"},{"size":5437,"mtime":1610540242074,"results":"119","hashOfConfig":"68"},{"size":5410,"mtime":1610540446626,"results":"120","hashOfConfig":"68"},{"size":3618,"mtime":1609768368467,"results":"121","hashOfConfig":"68"},{"size":2589,"mtime":1609768487166,"results":"122","hashOfConfig":"68"},{"size":4667,"mtime":1609767752448,"results":"123","hashOfConfig":"68"},{"size":4673,"mtime":1609768295802,"results":"124","hashOfConfig":"68"},{"size":3649,"mtime":1609768730067,"results":"125","hashOfConfig":"68"},{"size":2592,"mtime":1609768550259,"results":"126","hashOfConfig":"68"},{"size":4352,"mtime":1609865593782,"results":"127","hashOfConfig":"68"},{"size":4212,"mtime":1609863493345,"results":"128","hashOfConfig":"68"},{"size":2458,"mtime":1610301561325,"results":"129","hashOfConfig":"68"},{"size":491,"mtime":1610298486032,"results":"130","hashOfConfig":"68"},{"size":2548,"mtime":1610470495269,"results":"131","hashOfConfig":"68"},{"size":9413,"mtime":1610472949246,"results":"132","hashOfConfig":"68"},{"size":9424,"mtime":1610544302536,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"6j67uu",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"136"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"136"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"136"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"136"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"136"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"136"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"136"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"136"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"136"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"136"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"136"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"136"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\index.js",[],["317","318"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\reportWebVitals.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\App.js",["319","320","321","322","323","324","325","326","327","328","329"],"import React, { useState, useEffect } from \"react\";\nimport { getArtists } from \"./Pagesactions/artistsactions\";\nimport { getSongs } from \"./Pagesactions/songsactions\";\nimport { getUsers } from \"./Pagesactions/usersactions\";\nimport { getAlbums } from \"./Pagesactions/albumactions\";\nimport Sidedrawer from \"./Components/Sidedrawer\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AdminHome from \"./Pages/AdminHome\";\nimport User from \"./Pages/User\";\nimport Artist from \"./Pages/Artist\";\nimport Songs from \"./Pages/Songs\";\nimport Albums from \"./Pages/Albums\";\nimport Signin from \"./Pages/Signin\";\nimport Admintrending from \"./Pages/Admintrending\";\nimport Adminpopular from \"./Pages/Adminpopular\";\nimport Admintopcharts from \"./Pages/Admintopcharts\";\nimport Managehomepage from \"./Pages/Managehomepage\";\nimport Bongplaylist from \"./Pages/Bongplaylist\";\nimport Topartists from \"./Pages/Topartists\";\nimport Topalbums from \"./Pages/Topalbums\";\nimport Recommended from \"./Pages/Recommended\";\nimport \"./App.css\";\n\nexport const GlobalData = React.createContext();\n\nfunction App() {\n  const [artists, setArtists] = useState();\n  const [songs, setSongs] = useState();\n  const [albums, setAlbums] = useState();\n  const [users, setUsers] = useState();\n\n  const [data, setData] = useState({\n    users: [],\n    artists: [],\n    songs: [],\n    albums: [],\n  });\n\n  // useEffect(() => {\n  //   const fetchAlbums = async () => {\n  //     let allAlbums;\n  //     allAlbums = await getAlbums();\n  //     console.log(allAlbums);\n  //     setAlbums(allAlbums);\n  //     setData({\n  //       ...data,\n  //       albums: allAlbums,\n  //     });\n  //   };\n\n  //   const fetchSongs = async () => {\n  //     let allSongs;\n  //     allSongs = await getSongs();\n  //     console.log(allSongs);\n  //     setSongs(allSongs);\n  //     setData({\n  //       ...data,\n  //       songs: allSongs,\n  //     });\n  //   };\n\n  //   const fetchArtists = async () => {\n  //     let allArtists;\n  //     allArtists = await getArtists();\n  //     console.log(allArtists);\n  //     setArtists(allArtists);\n  //     setData({\n  //       ...data,\n  //       artists: allArtists,\n  //     });\n  //   };\n\n  //   const fetchUsers = async () => {\n  //     let allUsers;\n  //     allUsers = await getUsers();\n  //     console.log(allUsers);\n  //     setUsers(allUsers);\n  //     setData({\n  //       ...data,\n  //       users: allUsers,\n  //     });\n  //   };\n\n  //   fetchUsers();\n\n  //   fetchArtists();\n  //   fetchAlbums();\n  //   fetchSongs();\n  // }, []);\n  return (\n    <GlobalData.Provider value={(artists, songs, albums, users)}>\n      <div className=\"App\">\n        {console.log(users, artists, songs, albums)}\n\n        <Router>\n          <Sidedrawer />\n          <Switch>\n            <Route exact path=\"/\" render={(routeProps) => <AdminHome />} />\n            <Route exact path=\"/signin\" render={(routeProps) => <Signin />} />\n\n            <Route\n              exact\n              path=\"/admin/users\"\n              render={(routeProps) => <User />}\n            />\n            <Route\n              exact\n              path=\"/admin/albums\"\n              render={(routeProps) => <Albums />}\n            />\n            <Route\n              exact\n              path=\"/admin/artist\"\n              render={(routeProps) => <Artist />}\n            />\n            <Route\n              exact\n              path=\"/admin/songs\"\n              render={(routeProps) => <Songs />}\n            />\n            <Route\n              exact\n              path=\"/admin/trending\"\n              render={(routeProps) => <Admintrending />}\n            />\n            <Route\n              exact\n              path=\"/admin/popular\"\n              render={(routeProps) => <Adminpopular />}\n            />\n            <Route\n              exact\n              path=\"/admin/charts\"\n              render={(routeProps) => <Admintopcharts />}\n            />\n            <Route\n              exact\n              path=\"/admin/managehomepage\"\n              render={(routeProps) => <Managehomepage />}\n            />\n            <Route\n              exact\n              path=\"/admin/bongplaylist\"\n              render={(routeProps) => <Bongplaylist />}\n            />\n            <Route\n              exact\n              path=\"/admin/topalbums\"\n              render={(routeProps) => <Topalbums />}\n            />\n            <Route\n              exact\n              path=\"/admin/topartists\"\n              render={(routeProps) => <Topartists />}\n            />\n            <Route\n              exact\n              path=\"/admin/recommended\"\n              render={(routeProps) => <Recommended />}\n            />\n          </Switch>\n        </Router>\n      </div>\n    </GlobalData.Provider>\n  );\n}\n\nexport default App;\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Sidedrawer.js",["330","331"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport Logo from \".././assets/logo2.png\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\nimport HomeWorkIcon from \"@material-ui/icons/HomeWork\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\n// const styles = {\r\n//   paper: {\r\n//     backgroundColor: \"black\",\r\n//     color: \"white\",\r\n//   },\r\n// };\r\n\r\nfunction Sidedrawer() {\r\n  const classes = useStyles();\r\n  // const customClasses = styles;\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n        // color=\"default\"\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <img style={{ width: \"105px\" }} src={Logo} />\r\n            Admin\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        // classes={{ paper: customClasses.paper }}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <List>\r\n          <Link style={{ textDecoration: \"none\", color: \"black\" }} to=\"/\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <AppsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/managehomepage\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <HomeWorkIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Manage Homepage\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/users\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Users\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/artist\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <FaceIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Artists\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/albums\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AlbumIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Albums\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/songs\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <MusicNoteIcon />{\" \"}\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Songs\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/trending\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <TrendingUpIcon style={{ color: \"#f44040\" }} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Trending\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/popular\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <WhatshotIcon style={{ color: \"#f44040\" }} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Popular\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/admin/charts\"\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InsertChartIcon style={{ color: \"#f44040\" }} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Top Charts\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidedrawer;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\User.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Songs.js",["332","333","334","335","336"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getSongs,\r\n  addSongs,\r\n  editSongs,\r\n  deleteSongs,\r\n} from \"../Pagesactions/songsactions\";\r\nimport Songstable from \"../Components/Songstable\";\r\nimport Addsong from \"../Components/Addsong\";\r\nimport Editsong from \"../Components/Editsong\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport seoAnalytics1 from \"../Components/charts/sale-seo-analytics-1\";\r\nimport seoAnalytics2 from \"../Components/charts/sale-seo-analytics-2\";\r\nimport seoAnalytics3 from \"../Components/charts/sale-seo-analytics-3\";\r\nimport seoAnalytics4 from \"../Components/charts/sale-seo-analytics-4\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminsong.css\";\r\n\r\nconst Songs = () => {\r\n  const [songs, setSongs] = useState();\r\n  const [totalDownloads, setTotalDownloads] = useState(\"0\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [editSongData, setEditSongData] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = (data) => {\r\n    setOpenEdit(true);\r\n    console.log(data);\r\n    setEditSongData(data);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditSongData();\r\n    console.log(editSongData);\r\n  };\r\n\r\n  const handleEditSong = async (data) => {\r\n    console.log(data);\r\n    let res;\r\n    res = await editSongs(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const addSong = async (data) => {\r\n    console.log(data);\r\n    let res;\r\n    res = await addSongs(data);\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  // const editSong = (data) => {\r\n  //   console.log(data);\r\n  //   editSongs(data);\r\n  //   setUpdateData(true);\r\n  // };\r\n  const deleteSong = async (id) => {\r\n    console.log(id);\r\n    let res;\r\n    res = await deleteSongs(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let allSongs = [];\r\n    const fetchSongs = async () => {\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setSongs(allSongs);\r\n\r\n      let count = 0;\r\n      allSongs.map((song) => {\r\n        count += song.noofplays;\r\n      });\r\n      console.log(count);\r\n      // setTotalPlays(count);\r\n    };\r\n    // const countPlays = () => {\r\n\r\n    // };\r\n\r\n    fetchSongs();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main song\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" md={6}>\r\n                {songs ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <MusicNoteIcon style={{ color: \"#f44040\" }} />\r\n                      <h3>{songs.length}</h3>\r\n                      <p className=\"text-muted\">Total Songs</p>\r\n                      <Chart {...seoAnalytics1} />\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                {totalDownloads ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <CloudDownloadIcon style={{ color: \"#f44040\" }} />\r\n                      <h3>{totalDownloads}</h3>\r\n                      <p className=\"text-muted\">Total Downloads</p>\r\n                      <Chart {...seoAnalytics2} />\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <ViewStreamIcon style={{ color: \"#f44040\" }} />\r\n                    <h3>0</h3>\r\n                    <p className=\"text-muted\">Total Streams</p>\r\n                    <Chart {...seoAnalytics3} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                    <h3>0</h3>\r\n                    <p className=\"text-muted\">Total Likes</p>\r\n                    <Chart {...seoAnalytics4} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            {songs ? (\r\n              <Songstable\r\n                data={songs}\r\n                handleDelete={deleteSong}\r\n                handleEdit={handleClickOpenEdit}\r\n                className=\"mb-4\"\r\n              />\r\n            ) : null}\r\n            {open ? (\r\n              <Addsong\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                addSong={addSong}\r\n              />\r\n            ) : null}\r\n            {editSongData ? (\r\n              <Editsong\r\n                data={editSongData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditSong={handleEditSong}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}> Add New Song </h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Songs;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Signin.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Artist.js",["337","338","339","340"],"import React, { useState, useEffect } from \"react\";\r\nimport Artiststable from \"../Components/Artiststable\";\r\nimport Addartist from \"../Components/Addartist\";\r\nimport Editartist from \"../Components/Editartist\";\r\nimport {\r\n  getArtists,\r\n  addArtists,\r\n  deleteArtists,\r\n  editArtists,\r\n} from \"../Pagesactions/artistsactions\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport Viewartist from \"../Components/Viewartist\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminartist.css\";\r\n\r\nconst Artist = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [albums, setAlbums] = useState([]);\r\n  const [songs, setSongs] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [openView, setOpenView] = React.useState(false);\r\n  const [editArtistData, setEditArtistData] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [viewData, setViewData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setAlbums(allAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setSongs(allSongs);\r\n    };\r\n\r\n    fetchSongs();\r\n\r\n    fetchAlbums();\r\n\r\n    fetchArtists();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditArtistData();\r\n    console.log(editArtistData);\r\n  };\r\n\r\n  const addArtist = async (data, albums, songs) => {\r\n    console.log(data, albums, songs);\r\n    let res;\r\n    res = await addArtists(data, albums, songs);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const deleteArtist = async (id) => {\r\n    console.log(id);\r\n    let res;\r\n    res = await deleteArtists(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const editArtist = async (data) => {\r\n    console.log(data);\r\n    await setEditArtistData(data);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditArtist = async (data) => {\r\n    console.log(data);\r\n    let res;\r\n    res = await editArtists(data);\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleToggleView = () => {\r\n    setOpenView(!openView);\r\n  };\r\n\r\n  const handleView = (data) => {\r\n    console.log(data);\r\n    setViewData(data);\r\n    handleToggleView();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main artist\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                {artists ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Row className=\"align-items-center m-l-0\">\r\n                        <Col sm=\"auto\">\r\n                          {/* <i className=\"icon feather icon-book f-30 text-c-purple\" /> */}\r\n                          <FaceIcon style={{ color: \"#f44040\" }} />\r\n                        </Col>\r\n                        <Col>\r\n                          <h6 className=\"text-muted m-b-10\">Total Artists</h6>\r\n                          <h2 className=\"m-b-0\">{artists.length}</h2>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">\r\n                          Total artists likes\r\n                        </h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        {/* <i className=\"icon feather icon-users f-30 text-c-red\" /> */}\r\n                        <NavigationIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">New Artists</h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <i className=\"icon feather icon-award f-30 text-c-blue\" />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">Unique Innovation</h6>\r\n                        <h2 className=\"m-b-0\">325</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            {artists ? (\r\n              <Artiststable\r\n                data={artists}\r\n                handleDelete={deleteArtist}\r\n                handleEdit={editArtist}\r\n                className=\"mb-4\"\r\n                handleView={handleView}\r\n              />\r\n            ) : null}\r\n            {open ? (\r\n              <Addartist\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                addArtist={addArtist}\r\n              />\r\n            ) : null}\r\n\r\n            {editArtistData ? (\r\n              <Editartist\r\n                data={editArtistData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditArtist={handleEditArtist}\r\n              />\r\n            ) : null}\r\n\r\n            {openView ? (\r\n              <Viewartist\r\n                open={openView}\r\n                handleToggleView={handleToggleView}\r\n                data={viewData}\r\n                albums={albums}\r\n                songs={songs}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}> New Artist </h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artist;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Albums.js",["341","342","343","344","345","346","347","348"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Songstable.js",["349","350","351","352","353","354","355","356","357"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Imageavatar from \"./Imageavatar\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Albumstable({ data, handleDelete, handleEdit }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [artists, setArtists] = useState();\r\n  const [artistName, setArtistName] = useState();\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  const findArtistName = (id) => {\r\n    let name;\r\n    console.log(artists);\r\n    name = artists.filter((artist) => {\r\n      return artist._id === id;\r\n    });\r\n    // return name;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {console.log(data)}\r\n              {/* {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))} */}\r\n\r\n              <StyledTableCell>Song Image</StyledTableCell>\r\n              <StyledTableCell>Song Name</StyledTableCell>\r\n              <StyledTableCell>Artists</StyledTableCell>\r\n              <StyledTableCell>Genres</StyledTableCell>\r\n              <StyledTableCell>Poets</StyledTableCell>\r\n              <StyledTableCell>Mix and Master</StyledTableCell>\r\n              <StyledTableCell>Producer</StyledTableCell>\r\n              <StyledTableCell>Label</StyledTableCell>\r\n              <StyledTableCell>Year</StyledTableCell>\r\n              <StyledTableCell>Delete</StyledTableCell>\r\n              <StyledTableCell>Edit</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                {console.log(row)}\r\n                <StyledTableCell align=\"left\">\r\n                  {\" \"}\r\n                  <Imageavatar imageSrc={row.songimage} />\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.songname}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.artists.length}\r\n                </StyledTableCell>\r\n\r\n                {/* {artists ? (\r\n                  <>\r\n                    {row.artists.map((artist) => {\r\n                      return artists.map((foundArtist) => {\r\n                        return artist === foundArtist._id ? (\r\n                          <StyledTableCell align=\"right\">\r\n                            {foundArtist.artistname}\r\n                          </StyledTableCell>\r\n                        ) : null;\r\n                      });\r\n                    })}\r\n                  </>\r\n                ) : null} */}\r\n\r\n                <StyledTableCell align=\"left\">{row.genres}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.poet}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.mixmaster}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.producer}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.label}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.year}</StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">\r\n                  <button\r\n                    onClick={() => hanldeDelete(row._id)}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                  >\r\n                    {\" \"}\r\n                    <DeleteForeverIcon />\r\n                  </button>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  <button\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        songname: row.songname,\r\n                        songimage: row.songimage,\r\n                        noofplays: row.noofplays,\r\n                        artists: row.artists,\r\n                        genres: row.genres,\r\n                        poet: row.poet,\r\n                        mixmaster: row.mixmaster,\r\n                        producer: row.producer,\r\n                        label: row.label,\r\n                        year: row.year,\r\n                        summary: row.summary,\r\n                        lyrics: row.lyrics,\r\n                        relatedSongs: row.relatedSongs,\r\n                      })\r\n                    }\r\n                    className=\"btn btn-sm btn-primary\"\r\n                  >\r\n                    <EditIcon />\r\n                  </button>\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\usersactions.js",["358"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getUsers = async () => {\r\n  let users;\r\n\r\n  users = await axios.get(\"https://bong-backend.herokuapp.com/api/users\");\r\n  // users = await axios.get(\"http://localhost:3001/api/users\");\r\n  console.log(users);\r\n  return users.data;\r\n};\r\n\r\nconst deleteUsers = async (id) => {\r\n  console.log(id);\r\n\r\n  const response = await axios({\r\n    method: \"DELETE\",\r\n    url: \"https://bong-backend.herokuapp.com/api/users\",\r\n    // url: \"http://localhost:3001/api/users\",\r\n    data: {\r\n      id: id,\r\n    },\r\n  });\r\n  console.log(response);\r\n  // const data = await response.data;\r\n  // console.log(data);\r\n};\r\n\r\nexport { getUsers, deleteUsers };\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editartist.js",["359","360","361","362","363","364","365","366","367","368","369","370","371"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport Selectalbumforartist from \"../Components/Selectalbumforartist\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Imageupload from \"../Components/Imageupload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Editartist({\r\n  open,\r\n  data,\r\n  handleEditArtist,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    artistname: data.artistname,\r\n    artistimage: data.artistimage,\r\n    albums: data.albums,\r\n    songs: data.songs,\r\n  });\r\n  console.log(data);\r\n  const classes = useStyles();\r\n\r\n  const [allAlbums, setAllAlbums] = useState([]);\r\n  const [foundAlbums, setFoundAlbums] = useState([]);\r\n  const [editAlbums, setEditAlbums] = useState(false);\r\n  const [addAlbums, setAddAlbums] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    handleEditArtist(state);\r\n    handleCloseEdit();\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const deleteArtistAlbum = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundAlbums.filter((album) => {\r\n      if (album._id !== id) {\r\n        return album;\r\n      }\r\n    });\r\n    foundAlbums.filter((album) => {\r\n      if (album._id !== id) {\r\n        ids.push(album._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundAlbums(yoo);\r\n    await setState({\r\n      ...state,\r\n      albums: ids,\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  const handleAlbumsToggle = () => {\r\n    setEditAlbums(!editAlbums);\r\n    setAddAlbums(false);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    handleAlbumsToggle();\r\n    setAddAlbums(!addAlbums);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddAlbums = (data) => {\r\n    let ids = [];\r\n    console.log(foundAlbums);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundAlbums(data);\r\n    setState({\r\n      ...state,\r\n      albums: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const handleDeleteAlbum = useMemo(() => console.log(foundSongs), [\r\n    foundSongs,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      let filterAlbums = [];\r\n      allAlbums = await getAlbums();\r\n      setAllAlbums(allAlbums);\r\n      console.log(allAlbums);\r\n      state.albums.map((albumId) => {\r\n        allAlbums.filter((album) => {\r\n          if (album._id === albumId) {\r\n            filterAlbums.push(album);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundAlbums(filterAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      let filterSongs = [];\r\n      allSongs = await getSongs();\r\n      setAllSongs(allSongs);\r\n      console.log(allSongs);\r\n      state.songs.map((songId) => {\r\n        allSongs.filter((song) => {\r\n          if (song._id === songId) {\r\n            filterSongs.push(song);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundSongs(filterSongs);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Artist</DialogTitle>\r\n      </Dialog> */}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseEdit}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Edit Artist\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSubmit}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <Imageupload imageSrc={state.artistimage} />\r\n            </div>\r\n            <div className=\"col-12 col-md-8\">\r\n              <h4>Artist Detials</h4>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Artist Name\"\r\n                type=\"text\"\r\n                name=\"artistname\"\r\n                value={state.artistname}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <div>\r\n                  <span style={{ fontSize: \"25px\" }}>Albums</span>\r\n\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAlbumsToggle}\r\n                  >\r\n                    {editAlbums ? \"X\" : <EditIcon />}\r\n                  </button>\r\n                  <span>\r\n                    {editAlbums || addAlbums ? (\r\n                      <button\r\n                        style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                        className=\"btn btn-sm btn-danger\"\r\n                        onClick={handleAddAlbums}\r\n                      >\r\n                        {addAlbums ? \"X\" : \"+\"}\r\n                      </button>\r\n                    ) : null}\r\n                  </span>\r\n                  {editAlbums ? (\r\n                    <div>\r\n                      {foundAlbums ? (\r\n                        <List>\r\n                          {foundAlbums.map((album) => {\r\n                            return (\r\n                              <ListItem key={album._id}>\r\n                                {console.log()}\r\n                                <ListItemText\r\n                                  primary={album.albumname}\r\n                                  // secondary={secondary ? \"Secondary text\" : null}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteForeverIcon\r\n                                      onClick={() =>\r\n                                        deleteArtistAlbum(album._id)\r\n                                      }\r\n                                    />\r\n                                  </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                              </ListItem>\r\n                            );\r\n                          })}\r\n                        </List>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                {addAlbums ? (\r\n                  <Selectalbumforartist\r\n                    data={allAlbums}\r\n                    selectAlbums={handleSelectedAddAlbums}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n\r\n              <div>\r\n                <div>\r\n                  <span style={{ fontSize: \"25px\" }}>Songs</span>\r\n\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleSongsToggle}\r\n                  >\r\n                    {editSongs ? \"X\" : <EditIcon />}\r\n                  </button>\r\n                  <span>\r\n                    {editSongs || addSongs ? (\r\n                      <button\r\n                        style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                        className=\"btn btn-sm btn-danger\"\r\n                        onClick={handleAddSongs}\r\n                      >\r\n                        {addSongs ? \"X\" : \"+\"}\r\n                      </button>\r\n                    ) : null}\r\n                  </span>\r\n                  {editSongs ? (\r\n                    <div>\r\n                      {foundSongs ? (\r\n                        <List>\r\n                          {foundSongs.map((song) => {\r\n                            return (\r\n                              <ListItem>\r\n                                {console.log()}\r\n                                <ListItemText\r\n                                  primary={song.songname}\r\n                                  // secondary={secondary ? \"Secondary text\" : null}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteForeverIcon\r\n                                      onClick={() => deleteArtistSong(song._id)}\r\n                                    />\r\n                                  </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                              </ListItem>\r\n                            );\r\n                          })}\r\n                        </List>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                {addSongs ? (\r\n                  <Selectsongsforartist\r\n                    data={allSongs}\r\n                    selectSongs={handleSelectedAddSongs}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addartist.js",["372","373","374","375","376","377","378"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Selectalbumforartist from \"../Components/Selectalbumforartist\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Imageupload from \"../Components/Imageupload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Addartist = ({ open, addArtist, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    artistname: \"\",\r\n    artistimage: \"\",\r\n  });\r\n  const [selectAlbums, setSelectAlbums] = useState([]);\r\n  const [selectSongs, setSelectSongs] = useState([]);\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n\r\n  const [onAddAlbums, setOnAddAlbums] = useState(false);\r\n  const [onAddSongs, setOnAddSongs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  const handleAddArtist = useCallback(async (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    console.log(selectAlbums);\r\n    // await setState({\r\n    //   ...state,\r\n    //   albums: selectAlbums,\r\n    // });\r\n    // console.log(state);\r\n    addArtist(state, selectAlbums, selectSongs);\r\n    handleClose();\r\n  });\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleAlbums = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectAlbums(ids);\r\n  });\r\n\r\n  const handleSongs = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectSongs(ids);\r\n  });\r\n\r\n  const handleOnAddAlbums = () => {\r\n    setOnAddAlbums(!onAddAlbums);\r\n  };\r\n  const handleOnAddSongs = () => {\r\n    setOnAddSongs(!onAddSongs);\r\n  };\r\n  const handleImage = (id, image) => {\r\n    console.log(image);\r\n    setState({\r\n      ...state,\r\n      artistimage: image,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(selectAlbums)}\r\n      {console.log(state)}\r\n      {/* <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddArtist}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Artist</DialogTitle>\r\n      </Dialog> */}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Add Artist\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={handleAddArtist}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <Imageupload\r\n                className=\"mb-4\"\r\n                id=\"albbumimage\"\r\n                onInput={handleImage}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-8\">\r\n              <h4>Artist Details</h4>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Artist Name\"\r\n                type=\"text\"\r\n                name=\"artistname\"\r\n                value={state.artistname}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n              <br />\r\n              <br />\r\n\r\n              <div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <h5>Add Albums </h5>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <a\r\n                      className=\"btn btn-outline-danger\"\r\n                      onClick={handleOnAddAlbums}\r\n                    >\r\n                      {onAddAlbums ? \"X\" : \"+\"}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                {onAddAlbums ? (\r\n                  <div>\r\n                    {fetchedAlbums ? (\r\n                      <Selectalbumforartist\r\n                        data={fetchedAlbums}\r\n                        selectAlbums={handleAlbums}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                ) : null}\r\n\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <h5>Add Songs </h5>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <a\r\n                      className=\"btn btn-outline-danger\"\r\n                      onClick={handleOnAddSongs}\r\n                    >\r\n                      {onAddSongs ? \"X\" : \"+\"}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                {onAddSongs ? (\r\n                  <div>\r\n                    {fetchedAlbums ? (\r\n                      <Selectsongsforartist\r\n                        data={fetchedSongs}\r\n                        selectSongs={handleSongs}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addartist;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editalbum.js",["379","380","381","382","383","384","385","386","387"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Selectartistforalbum from \"../Components/Selectartistforalbum\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Imageupload from \"../Components/Imageupload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Editalbum({\r\n  open,\r\n  handleClickOpen,\r\n  data,\r\n  handleEditAlbum,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    albumname: data.albumname,\r\n    albumimage: data.albumimage,\r\n    artists: data.artists,\r\n    songs: data.songs,\r\n    tracks: data.tracks,\r\n    genres: data.genres,\r\n    duration: data.duration,\r\n    poets: data.poets,\r\n    mixmaster: data.mixmaster,\r\n    producer: data.producer,\r\n    label: data.label,\r\n    year: data.year,\r\n    summary: data.summary,\r\n    otheralbums: data.otheralbums,\r\n    relatedalbums: data.relatedalbums,\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [foundArtists, setFoundArtists] = useState([]);\r\n  const [editArtists, setEditArtists] = useState(false);\r\n  const [addArtists, setAddArtists] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  console.log(data);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    handleEditAlbum(state);\r\n    handleCloseEdit();\r\n    // setState({\r\n    //   albumname: \"\",\r\n    //   albumimage: \"\",\r\n    // });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtistsToggle = () => {\r\n    setEditArtists(!editArtists);\r\n    setAddArtists(false);\r\n  };\r\n\r\n  const handleAddArtists = () => {\r\n    handleArtistsToggle();\r\n    setAddArtists(!addArtists);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddArtists = (data) => {\r\n    let yoo;\r\n    console.log(foundArtists);\r\n    console.log(data);\r\n\r\n    yoo = allArtists.filter((artist) => {\r\n      return artist._id === data;\r\n    });\r\n\r\n    console.log(yoo);\r\n\r\n    setFoundArtists(yoo[0]);\r\n    setState({\r\n      ...state,\r\n      artists: yoo[0]._id,\r\n    });\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const deleteAlbumArtists = async (id) => {\r\n    console.log(id);\r\n\r\n    await setFoundArtists(\"\");\r\n    await setState({\r\n      ...state,\r\n      artists: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      let filterArtists;\r\n      allArtists = await getArtists();\r\n      setAllArtists(allArtists);\r\n      console.log(allArtists);\r\n\r\n      allArtists.filter((artist) => {\r\n        console.log(artist);\r\n        console.log(state.artists);\r\n        if (artist._id === state.artists) {\r\n          filterArtists = artist;\r\n        }\r\n      });\r\n\r\n      console.log(filterArtists);\r\n      await setFoundArtists(filterArtists);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      let filterSongs = [];\r\n      allSongs = await getSongs();\r\n      setAllSongs(allSongs);\r\n      console.log(allSongs);\r\n      state.songs.map((songId) => {\r\n        allSongs.filter((song) => {\r\n          if (song._id === songId) {\r\n            filterSongs.push(song);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundSongs(filterSongs);\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        // onSubmit={handleSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Artist</DialogTitle>\r\n      </Dialog>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseEdit}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Edit Album\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSubmit}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent className=\"container\">\r\n          <DialogContentText></DialogContentText>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <Imageupload imageSrc={state.albumimage} />\r\n            </div>\r\n            <div className=\"col-12 col-md-8\">\r\n              <h4>Album Details</h4>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Album Name\"\r\n                    type=\"text\"\r\n                    name=\"albumname\"\r\n                    value={state.albumname}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Number of Tracks\"\r\n                    type=\"text\"\r\n                    name=\"tracks\"\r\n                    value={state.tracks}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Genres\"\r\n                    type=\"text\"\r\n                    name=\"genres\"\r\n                    value={state.genres}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Album Duration\"\r\n                    type=\"text\"\r\n                    name=\"duration\"\r\n                    value={state.duration}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Album Poets\"\r\n                    type=\"text\"\r\n                    name=\"poets\"\r\n                    value={state.poets}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Mix and Master\"\r\n                    type=\"text\"\r\n                    name=\"mixmaster\"\r\n                    value={state.mixmaster}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Producer\"\r\n                    type=\"text\"\r\n                    name=\"producer\"\r\n                    value={state.producer}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Label\"\r\n                    type=\"text\"\r\n                    name=\"label\"\r\n                    value={state.label}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Year of Production\"\r\n                    type=\"text\"\r\n                    name=\"year\"\r\n                    value={state.year}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    multiline\r\n                    rows={8}\r\n                    label=\"Summary\"\r\n                    type=\"text\"\r\n                    name=\"summary\"\r\n                    value={state.summary}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                      {\" \"}\r\n                      <span style={{ fontSize: \"25px\" }}>Artist</span>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <button\r\n                        style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                        className=\"btn btn-sm btn-outline-danger\"\r\n                        onClick={handleArtistsToggle}\r\n                      >\r\n                        {editArtists ? \"X\" : <EditIcon />}\r\n                      </button>\r\n                      <span>\r\n                        {editArtists || addArtists ? (\r\n                          <button\r\n                            style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                            className=\"btn btn-sm btn-outline-danger\"\r\n                            onClick={handleAddArtists}\r\n                          >\r\n                            {addArtists ? \"X\" : \"+\"}\r\n                          </button>\r\n                        ) : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div>\r\n                      {editArtists ? (\r\n                        <div>\r\n                          {foundArtists ? (\r\n                            <List>\r\n                              <ListItem>\r\n                                <ListItemText\r\n                                  primary={foundArtists.artistname}\r\n                                  // secondary={secondary ? \"Secondary text\" : null}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteForeverIcon\r\n                                      onClick={() =>\r\n                                        deleteAlbumArtists(foundArtists._id)\r\n                                      }\r\n                                    />\r\n                                  </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                              </ListItem>\r\n                            </List>\r\n                          ) : null}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    {addArtists ? (\r\n                      <Selectartistforalbum\r\n                        data={allArtists}\r\n                        selectArtists={handleSelectedAddArtists}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                      <span style={{ fontSize: \"25px\" }}>Songs</span>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      {\" \"}\r\n                      <button\r\n                        style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                        className=\"btn btn-sm btn-outline-danger\"\r\n                        onClick={handleSongsToggle}\r\n                      >\r\n                        {editSongs ? \"X\" : <EditIcon />}\r\n                      </button>\r\n                      <span>\r\n                        {editSongs || addSongs ? (\r\n                          <button\r\n                            style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                            className=\"btn btn-sm btn-outline-danger\"\r\n                            onClick={handleAddSongs}\r\n                          >\r\n                            {addSongs ? \"X\" : \"+\"}\r\n                          </button>\r\n                        ) : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div>\r\n                      {editSongs ? (\r\n                        <div>\r\n                          {foundSongs ? (\r\n                            <List>\r\n                              {foundSongs.map((song) => (\r\n                                <ListItem>\r\n                                  {console.log()}\r\n                                  <ListItemText\r\n                                    primary={song.songname}\r\n                                    // secondary={secondary ? \"Secondary text\" : null}\r\n                                  />\r\n                                  <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                      <DeleteForeverIcon\r\n                                        onClick={() =>\r\n                                          deleteArtistSong(song._id)\r\n                                        }\r\n                                      />\r\n                                    </IconButton>\r\n                                  </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                              ))}\r\n                            </List>\r\n                          ) : null}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    {addSongs ? (\r\n                      <Selectsongsforartist\r\n                        data={allSongs}\r\n                        selectSongs={handleSelectedAddSongs}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update Album\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Artiststable.js",["388","389","390","391","392","393"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Editartist from \"../Components/Editartist\";\r\nimport Imageavatar from \"../Components/Imageavatar.js\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Artiststable({\r\n  data,\r\n  handleDelete,\r\n  handleEdit,\r\n  openEdit,\r\n  handleView,\r\n}) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* {console.log(keys)}\r\n              {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))} */}\r\n              <StyledTableCell>Artist Image</StyledTableCell>\r\n              <StyledTableCell>Artist Name</StyledTableCell>\r\n              <StyledTableCell>Albums</StyledTableCell>\r\n              <StyledTableCell>Songs</StyledTableCell>\r\n              <StyledTableCell>_id</StyledTableCell>\r\n              <StyledTableCell>Delete</StyledTableCell>\r\n              <StyledTableCell>Edit</StyledTableCell>\r\n              <StyledTableCell>View</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                <StyledTableCell>\r\n                  <Imageavatar imageSrc={row.artistimage} />\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.artistname}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.albums.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.songs.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell>{row._id}</StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-primary\"\r\n                    onClick={() => hanldeDelete(row._id)}\r\n                  >\r\n                    <DeleteForeverIcon />\r\n                  </button>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        artistimage: row.artistimage,\r\n                        artistname: row.artistname,\r\n                        albums: row.albums,\r\n                        songs: row.songs,\r\n                      })\r\n                    }\r\n                  >\r\n                    <EditIcon />\r\n                  </button>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-success\"\r\n                    onClick={() => {\r\n                      handleView({\r\n                        id: row._id,\r\n                        artistimage: row.artistimage,\r\n                        artistname: row.artistname,\r\n                        albums: row.albums,\r\n                        songs: row.songs,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <VisibilityIcon />\r\n                  </button>\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addalbum.js",["394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Selectartistforalbum from \"./Selectartistforalbum\";\r\nimport Selectsongsforartist from \"./Selectsongsforartist\";\r\nimport Selectalbumforartist from \"./Selectalbumforartist\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Imageupload from \"../Components/Imageupload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addalbum({ open, addAlbum, handleClose }) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    albumname: \"\",\r\n    albumimage: \"\",\r\n    tracks: \"\",\r\n    genres: \"\",\r\n    duration: \"\",\r\n    poets: \"\",\r\n    mixmaster: \"\",\r\n    producer: \"\",\r\n    label: \"\",\r\n    year: \"\",\r\n    summary: \"\",\r\n  });\r\n  const [selectArtists, setSelectArtists] = useState([]);\r\n  const [selectSongs, setSelectSongs] = useState([]);\r\n  const [selectOtherAlbums, setSelectOtherAlbums] = useState([]);\r\n  const [selectRelatedAlbums, setSelectRelatedAlbums] = useState([]);\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [onAddArtists, setOnAddArtists] = useState(false);\r\n  const [onAddSongs, setOnAddSongs] = useState(false);\r\n  const [onAddOtherAlbums, setOnAddOtherAlbums] = useState(false);\r\n  const [onAddRelatedAlbums, setOnAddRelatedAlbums] = useState(false);\r\n\r\n  const handleAddAlbum = (evt) => {\r\n    evt.preventDefault();\r\n    addAlbum(state);\r\n    handleClose();\r\n    setState({\r\n      albumname: \"\",\r\n      albumimage: \"\",\r\n    });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleOnAddArtists = () => {\r\n    setOnAddArtists(!onAddArtists);\r\n  };\r\n  const handleOnAddSongs = () => {\r\n    setOnAddSongs(!onAddSongs);\r\n  };\r\n\r\n  const handleOnAddOtherAlbums = () => {\r\n    setOnAddOtherAlbums(!onAddOtherAlbums);\r\n  };\r\n  const handleOnAddRelatedAlbums = () => {\r\n    setOnAddRelatedAlbums(!onAddRelatedAlbums);\r\n  };\r\n\r\n  const handleArtists = useCallback(async (data) => {\r\n    console.log(data);\r\n\r\n    await setSelectArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: data,\r\n    });\r\n  });\r\n\r\n  const handleSongs = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    console.log(ids);\r\n\r\n    await setSelectSongs(ids);\r\n\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  });\r\n\r\n  const handleOtherAlbums = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    console.log(ids);\r\n\r\n    await setSelectOtherAlbums(ids);\r\n\r\n    setState({\r\n      ...state,\r\n      otheralbums: ids,\r\n    });\r\n  });\r\n\r\n  const handleRelatedAlbums = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    console.log(ids);\r\n\r\n    await setSelectRelatedAlbums(ids);\r\n\r\n    setState({\r\n      ...state,\r\n      relatedalbums: ids,\r\n    });\r\n  });\r\n\r\n  const handleImage = (id, image) => {\r\n    console.log(image);\r\n    setState({\r\n      ...state,\r\n      albumimage: image,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongs();\r\n\r\n    fetchAlbums();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Add Album\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={handleAddAlbum}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <DialogContent className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-4\">\r\n                <Imageupload\r\n                  className=\"mb-4\"\r\n                  id=\"albbumimage\"\r\n                  onInput={handleImage}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-8\">\r\n                <h4>Album Details</h4>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Album Name\"\r\n                      type=\"text\"\r\n                      name=\"albumname\"\r\n                      value={state.albumname}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Number of Tracks\"\r\n                      type=\"number\"\r\n                      name=\"tracks\"\r\n                      value={state.tracks}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Genres\"\r\n                      type=\"text\"\r\n                      name=\"genres\"\r\n                      value={state.genres}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Album Duration\"\r\n                      type=\"text\"\r\n                      name=\"duration\"\r\n                      value={state.duration}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Poets\"\r\n                      type=\"text\"\r\n                      name=\"poets\"\r\n                      value={state.poets}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Mix and Master\"\r\n                      type=\"text\"\r\n                      name=\"mixmaster\"\r\n                      value={state.mixmaster}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Producer\"\r\n                      type=\"text\"\r\n                      name=\"producer\"\r\n                      value={state.producer}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Label\"\r\n                      type=\"text\"\r\n                      name=\"label\"\r\n                      value={state.label}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Year of Production\"\r\n                      type=\"text\"\r\n                      name=\"year\"\r\n                      value={state.year}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      multiline\r\n                      rows={8}\r\n                      label=\"Summary\"\r\n                      type=\"text\"\r\n                      name=\"summary\"\r\n                      value={state.summary}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <br />\r\n\r\n                    <br />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        <h5>Add Artist </h5>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <a\r\n                          className=\"btn btn-outline-danger\"\r\n                          onClick={handleOnAddArtists}\r\n                        >\r\n                          {onAddArtists ? \"X\" : \"+\"}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    {onAddArtists ? (\r\n                      <div>\r\n                        {fetchedArtists ? (\r\n                          <Selectartistforalbum\r\n                            data={fetchedArtists}\r\n                            selectArtists={handleArtists}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        <h5>Add Songs{\"   \"}</h5>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <a\r\n                          className=\"btn btn-outline-danger\"\r\n                          onClick={handleOnAddSongs}\r\n                        >\r\n                          {onAddSongs ? \"X\" : \"+\"}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {onAddSongs ? (\r\n                      <div>\r\n                        {fetchedSongs ? (\r\n                          <Selectsongsforartist\r\n                            data={fetchedSongs}\r\n                            selectSongs={handleSongs}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    ) : null}\r\n                    <br />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        <h5>Related Albums{\"   \"}</h5>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <a\r\n                          className=\"btn btn-outline-danger\"\r\n                          onClick={handleOnAddRelatedAlbums}\r\n                        >\r\n                          {onAddRelatedAlbums ? \"X\" : \"+\"}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {onAddRelatedAlbums ? (\r\n                      <div>\r\n                        {fetchedSongs ? (\r\n                          <Selectalbumforartist\r\n                            data={fetchedAlbums}\r\n                            selectAlbums={handleRelatedAlbums}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    ) : null}\r\n\r\n                    <br />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        <h5>Other Albums{\"   \"}</h5>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <a\r\n                          className=\"btn btn-outline-danger\"\r\n                          onClick={handleOnAddOtherAlbums}\r\n                        >\r\n                          {onAddOtherAlbums ? \"X\" : \"+\"}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {onAddOtherAlbums ? (\r\n                      <div>\r\n                        {fetchedSongs ? (\r\n                          <Selectalbumforartist\r\n                            data={fetchedAlbums}\r\n                            selectAlbums={handleOtherAlbums}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Albumstable.js",["406","407","408","409","410","411","412","413","414","415"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\artistsactions.js",["416","417"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getArtists = async () => {\r\n  let artists;\r\n\r\n  artists = await axios.get(\"https://bong-backend.herokuapp.com/api/artist\");\r\n  // artists = await axios.get(\"http://localhost:3001/api/artist\");\r\n  console.log(artists);\r\n  return artists.data;\r\n};\r\n\r\nconst findArtist = async (id) => {\r\n  let artist;\r\n\r\n  artist = await axios.get(\r\n    `https://bong-backend.herokuapp.com/api/artist/${id}`\r\n  );\r\n  // artists = await axios.get(\"http://localhost:3001/api/artist\");\r\n  console.log(artist);\r\n  return artist.data;\r\n};\r\n\r\nconst addArtists = async (data, albums, songs) => {\r\n  let artists;\r\n  console.log(data, albums, songs);\r\n  let artistsData = {\r\n    data,\r\n    albums,\r\n    songs,\r\n  };\r\n\r\n  artists = await axios.post(\r\n    \"https://bong-backend.herokuapp.com/api/artist\",\r\n    artistsData\r\n  );\r\n  // artists = await axios.post(\"http://localhost:3001/api/artist\", artistsData);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst editArtists = async (data) => {\r\n  let artists;\r\n\r\n  console.log(data);\r\n\r\n  artists = await axios.put(\r\n    \"https://bong-backend.herokuapp.com/api/artist\",\r\n    data\r\n  );\r\n  // artists = await axios.put(\"http://localhost:3001/api/artist\", data);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst deleteArtists = async (id) => {\r\n  let artists;\r\n\r\n  console.log(id);\r\n\r\n  const response = await axios({\r\n    method: \"DELETE\",\r\n    url: \"https://bong-backend.herokuapp.com/api/artist\",\r\n    // url: \"http://localhost:3001/api/artist\",\r\n    data: {\r\n      id: id,\r\n    },\r\n  });\r\n  console.log(response);\r\n  // console.log(artists.data);\r\n  // return artists.data;\r\n};\r\n\r\nexport { getArtists, addArtists, deleteArtists, editArtists, findArtist };\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumforartist.js",["418","419","420"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectalbumforartist({ data, selectAlbums }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    selectAlbums(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.albumname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Albums\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsforartist.js",["421","422","423"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsforartist({ data, selectSongs }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectSongs(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value._id);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.songname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Songs\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\songsactions.js",["424","425"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getSongs = async () => {\r\n  let songs;\r\n\r\n  // songs = await axios.get(\"https://bong-backend.herokuapp.com/api/song\");\r\n  songs = await axios.get(\"http://localhost:3001/api/song\");\r\n  console.log(songs);\r\n  return songs.data;\r\n};\r\n\r\nconst addSongs = async (data) => {\r\n  let artists;\r\n\r\n  console.log(data);\r\n\r\n  // axios\r\n  //   .post(\"https://httpbin.org/anything\", data)\r\n  //   .then((res) => console.log(res))\r\n  //   .catch((err) => console.log(err));\r\n\r\n  // artists = await axios.post(\r\n  //   \"https://bong-backend.herokuapp.com/api/song\",\r\n  //   data\r\n  // );\r\n  artists = await axios.post(\"http://localhost:3001/api/song\", data);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst editSongs = async (data) => {\r\n  let songs;\r\n\r\n  console.log(data);\r\n\r\n  // songs = await axios.put(\"https://bong-backend.herokuapp.com/api/song\", data);\r\n  songs = await axios.put(\"http://localhost:3001/api/song\", data);\r\n  console.log(songs.data);\r\n  return songs.data;\r\n};\r\n\r\nconst deleteSongs = async (id) => {\r\n  console.log(id);\r\n\r\n  const response = await axios({\r\n    method: \"DELETE\",\r\n    // url: \"https://bong-backend.herokuapp.com/api/song\",\r\n    url: \"http://localhost:3001/api/song\",\r\n    data: {\r\n      id: id,\r\n    },\r\n  });\r\n  console.log(response);\r\n  console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\nconst getTrending = async () => {\r\n  let trending;\r\n\r\n  // trending = await axios.get(\"https://bong-backend.herokuapp.com/api/trending\");\r\n  trending = await axios.get(\"http://localhost:3001/api/trending\");\r\n  console.log(trending);\r\n  return trending.data;\r\n};\r\n\r\nconst addTrending = async (data) => {\r\n  // let trending;\r\n  // console.log(data);\r\n  // trending = await axios.post(\r\n  //   \"https://bong-backend.herokuapp.com/api/trending\"\r\n  // );\r\n  // trending = await axios.post(\"http://localhost:3001/api/trending\", data);\r\n  // console.log(trending.data);\r\n  // return trending.data;\r\n};\r\n\r\nconst editTrending = async (data) => {\r\n  let trending;\r\n  // trending = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/trending\",\r\n  //   data\r\n  // );\r\n  console.log(data);\r\n\r\n  trending = await axios.put(\"http://localhost:3001/api/trending\", data);\r\n  console.log(trending.data);\r\n  return trending.data;\r\n};\r\n\r\nconst getPopular = async () => {\r\n  let popular;\r\n  //\r\n  // popular = await axios.get(\"https://bong-backend.herokuapp.com/api/popular\");\r\n  popular = await axios.get(\"http://localhost:3001/api/popular\");\r\n  console.log(popular);\r\n  return popular.data;\r\n};\r\n\r\nconst addPopular = async (data) => {\r\n  // let popular;\r\n  // console.log(data);\r\n  // popular = await axios.get(\"https://bong-backend.herokuapp.com/api/popular\");\r\n  // popular = await axios.post(\"http://localhost:3001/api/popular\", data);\r\n  // console.log(popular.data);\r\n  // return popular.data;\r\n};\r\n\r\nconst editPopular = async (data) => {\r\n  let popular;\r\n  // popular = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/popular\",\r\n  //   data\r\n  // );\r\n  popular = await axios.put(\"http://localhost:3001/api/popular\", data);\r\n  console.log(popular.data);\r\n  return popular.data;\r\n};\r\n\r\nconst getTopcharts = async () => {\r\n  let topchart;\r\n\r\n  topchart = await axios.get(\"http://localhost:3001/api/topcharts\");\r\n  // topchart = await axios.get(\r\n  //   \"https://bong-backend.herokuapp.com/api/topcharts\"\r\n  // );\r\n  console.log(topchart);\r\n  return topchart.data;\r\n};\r\n\r\nconst editTopcharts = async (data) => {\r\n  console.log(data);\r\n  let topchart;\r\n  // topchart = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/topcharts\",\r\n  //   data\r\n  // );\r\n  topchart = await axios.put(\"http://localhost:3001/api/topcharts\", data);\r\n  console.log(topchart.data);\r\n  return topchart.data;\r\n};\r\n\r\nconst getBongplaylist = async () => {\r\n  let Bongplaylist;\r\n\r\n  // Bongplaylist = await axios.get(\r\n  //   \"https://bong-backend.herokuapp.com/api/bongplaylist\"\r\n  // );\r\n  Bongplaylist = await axios.get(\"http://localhost:3001/api/bongplaylist\");\r\n  console.log(Bongplaylist);\r\n  return Bongplaylist.data;\r\n};\r\n\r\nconst editBongplaylist = async (data) => {\r\n  let Bongplaylist;\r\n  // Bongplaylist = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/bongplaylist\",\r\n  //   data\r\n  // );\r\n  Bongplaylist = await axios.put(\r\n    \"http://localhost:3001/api/bongplaylist\",\r\n    data\r\n  );\r\n  console.log(Bongplaylist.data);\r\n  return Bongplaylist.data;\r\n};\r\n\r\nconst getRecommended = async () => {\r\n  let Recommended;\r\n\r\n  // Recommended = await axios.get(\r\n  //   \"https://bong-backend.herokuapp.com/api/recommended\"\r\n  // );\r\n  Recommended = await axios.get(\"http://localhost:3001/api/recommended\");\r\n  console.log(Recommended);\r\n  return Recommended.data;\r\n};\r\n\r\nconst editRecommended = async (data) => {\r\n  let Recommended;\r\n  // Recommended = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/recommended\",\r\n  //   data\r\n  // );\r\n  console.log(data);\r\n  Recommended = await axios.put(\"http://localhost:3001/api/recommended\", data);\r\n  // console.log(Recommended.data);\r\n  // return Recommended.data;\r\n};\r\n\r\nconst getTopalbums = async () => {\r\n  let Topalbums;\r\n\r\n  // Topalbums = await axios.get(\r\n  //   \"https://bong-backend.herokuapp.com/api/topalbums\"\r\n  // );\r\n  Topalbums = await axios.get(\"http://localhost:3001/api/topalbums\");\r\n  console.log(Topalbums);\r\n  return Topalbums.data;\r\n};\r\n\r\nconst editTopalbums = async (data) => {\r\n  let Topalbums;\r\n  // Topalbums = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/Topalbums\",\r\n  //   data\r\n  // );\r\n  Topalbums = await axios.put(\"http://localhost:3001/api/Topalbums\", data);\r\n  console.log(Topalbums.data);\r\n  return Topalbums.data;\r\n};\r\n\r\nconst getTopartists = async () => {\r\n  let Topartists;\r\n\r\n  // Topartists = await axios.get(\r\n  //   \"https://bong-backend.herokuapp.com/api/topartists\"\r\n  // );\r\n  Topartists = await axios.get(\"http://localhost:3001/api/topartists\");\r\n  console.log(Topartists);\r\n  return Topartists.data;\r\n};\r\n\r\nconst editTopartists = async (data) => {\r\n  let Topartists;\r\n  // Topartists = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/Topartists\",\r\n  //   data\r\n  // );\r\n  Topartists = await axios.put(\"http://localhost:3001/api/Topartists\", data);\r\n  console.log(Topartists.data);\r\n  return Topartists.data;\r\n};\r\n\r\nexport {\r\n  addTrending,\r\n  getSongs,\r\n  addSongs,\r\n  editSongs,\r\n  getTrending,\r\n  deleteSongs,\r\n  editTrending,\r\n  editPopular,\r\n  addPopular,\r\n  getPopular,\r\n  getTopcharts,\r\n  editTopcharts,\r\n  getBongplaylist,\r\n  editBongplaylist,\r\n  getRecommended,\r\n  editRecommended,\r\n  getTopalbums,\r\n  editTopalbums,\r\n  getTopartists,\r\n  editTopartists,\r\n};\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforalbum.js",["426","427","428","429","430","431","432","433","434"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsforartist({ data, selectArtists }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState();\r\n\r\n  //   const handleToggle = (value) => async () => {\r\n  //     console.log(value);\r\n  //     const currentIndex = checked.indexOf(value);\r\n  //     console.log(currentIndex);\r\n  //     const newChecked = [...checked];\r\n  //     console.log(newChecked);\r\n\r\n  //     if (currentIndex === -1) {\r\n  //       newChecked.push(value);\r\n  //     } else {\r\n  //       newChecked.splice(currentIndex, 1);\r\n  //     }\r\n\r\n  //     await setChecked(newChecked);\r\n  //   };\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n    setChecked(event.target.value);\r\n  };\r\n\r\n  const handleAddArtist = () => {\r\n    selectArtists(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        name=\"gender1\"\r\n        // value={checked}\r\n        onChange={handleChange}\r\n      >\r\n        {console.log(data)}\r\n        {data.map((value) => {\r\n          const labelId = `checkbox-list-label-${value}`;\r\n          console.log(labelId);\r\n          console.log(value);\r\n\r\n          return (\r\n            <FormControlLabel\r\n              value={value._id}\r\n              control={<Radio />}\r\n              label={value.artistname}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddArtist}>\r\n        Add Artist\r\n      </button>\r\n      {/* {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.songname}`} />\r\n          </ListItem>\r\n        );\r\n      })} */}\r\n      {/* <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Artist\r\n      </button> */}\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\AdminHome.js",["435","436","437","438"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\albumactions.js",["439"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getAlbums = async () => {\r\n  let albums;\r\n\r\n  // albums = await axios.get(\"https://bong-backend.herokuapp.com/api/album\");\r\n  albums = await axios.get(\"http://localhost:3001/api/album\");\r\n  console.log(albums);\r\n  return albums.data;\r\n};\r\n\r\nconst addAlbums = async (data) => {\r\n  let artists;\r\n\r\n  console.log(data);\r\n\r\n  // artists = await axios.post(\r\n  //   \"https://bong-backend.herokuapp.com/api/album\",\r\n  //   data\r\n  // );\r\n  artists = await axios.post(\"http://localhost:3001/api/album\", data);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst editAlbums = async (data) => {\r\n  let artists;\r\n\r\n  console.log(data);\r\n\r\n  // artists = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/album\",\r\n  //   data\r\n  // );\r\n  artists = await axios.put(\"http://localhost:3001/api/album\", data);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst deleteAlbums = async (id) => {\r\n  console.log(id);\r\n\r\n  const response = await axios({\r\n    method: \"DELETE\",\r\n    // url: \"https://bong-backend.herokuapp.com/api/album\",\r\n    url: \"http://localhost:3001/api/album\",\r\n    data: {\r\n      id: id,\r\n    },\r\n  });\r\n  console.log(response);\r\n  // console.log(artists.data);\r\n  // return artists.data;\r\n};\r\n\r\nexport { getAlbums, addAlbums, deleteAlbums, editAlbums };\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-lead.js",["440"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Leads :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-vendor.js",["441"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Vendors :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-invoice.js",["442"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ff5252'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Leads :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-processed.js",["443"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#fff',\r\n            strokeColor: '#4680ff',\r\n            strokeWidth: 2,\r\n            hover: {\r\n                size: 7,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Amount Processed :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-spent.js",["444"],"export default {\r\n    type: 'bar',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: '60%'\r\n            }\r\n        },\r\n        xaxis: {\r\n            crosshairs: {\r\n                width: 1\r\n            },\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Amount Spent :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89, 63, 25, 44, 12]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-profit-processed.js",["445"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ffba57'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#fff',\r\n            strokeColor: '#ffba57',\r\n            strokeWidth: 2,\r\n            hover: {\r\n                size: 7,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Profit Processed :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89, 63]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-4.js",["446"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ffba57'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#ffba57',\r\n            strokeColor: '#ffba57',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Usage :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [12, 25, 36, 9, 54, 25, 66, 66, 41, 89, 63, 25, 44, 89, 41]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-1.js",["447"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#4680ff',\r\n            strokeColor: '#4680ff',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Site Analysis :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-3.js",["448"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ff5252'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#ff5252',\r\n            strokeColor: '#ff5252',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Visit :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-2.js",["449"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#9ccc65',\r\n            strokeColor: '#9ccc65',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Sale :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [12, 25, 36, 9, 54, 25, 66, 66, 41, 89, 63, 25, 44, 89, 41]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addsong.js",["450","451","452","453","454","455","456","457","458","459"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Selectartistforsong from \"../Components/Selectartistforsong\";\r\nimport Upload from \"../Components/Upload\";\r\nimport Imageupload from \"../Components/Imageupload\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Selectsongsforartist from \"./Selectsongsforartist\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Addsong = ({ open, addSong, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    songname: \"\",\r\n    songimage: \"\",\r\n    artists: [],\r\n    genres: \"\",\r\n    lyrics: \"\",\r\n    poet: \"\",\r\n    mixmaster: \"\",\r\n    producer: \"\",\r\n    label: \"\",\r\n    year: \"\",\r\n    summary: \"\",\r\n    relatedSongs: [],\r\n  });\r\n\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [selectArtists, setSelectArtists] = useState();\r\n  const [selectSongs, setSelectSongs] = useState([]);\r\n  const [onAddArtists, setOnAddArtists] = useState(false);\r\n  const [onAddRelatedSongs, setOnAddRelatedSongs] = useState(false);\r\n  const [file, setFile] = useState();\r\n\r\n  const handleAddSong = useCallback(async (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    console.log(file);\r\n\r\n    const data = new FormData();\r\n    data.append(\"songname\", state.songname);\r\n    data.append(\"songimage\", state.songimage);\r\n    data.append(\"artists\", state.artists);\r\n    data.append(\"genres\", state.genres);\r\n    data.append(\"lyrics\", state.lyrics);\r\n    data.append(\"poet\", state.poet);\r\n    data.append(\"mixmaster\", state.mixmaster);\r\n    data.append(\"producer\", state.producer);\r\n    data.append(\"label\", state.label);\r\n    data.append(\"year\", state.year);\r\n    data.append(\"summary\", state.summary);\r\n    data.append(\"relatedSongs\", state.relatedSongs);\r\n    data.append(\"file\", file);\r\n\r\n    addSong(data);\r\n    handleClose();\r\n  });\r\n\r\n  const handleOnAddArtists = () => {\r\n    setOnAddArtists(!onAddArtists);\r\n  };\r\n  const handleOnAddRelatedSongs = () => {\r\n    setOnAddRelatedSongs(!onAddRelatedSongs);\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtists = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: ids,\r\n    });\r\n  });\r\n\r\n  const handleSongs = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    console.log(ids);\r\n    await setSelectSongs(ids);\r\n    setState({\r\n      ...state,\r\n      relatedSongs: ids,\r\n    });\r\n  });\r\n\r\n  const handleImage = (id, image) => {\r\n    console.log(image);\r\n    setState({\r\n      ...state,\r\n      songimage: image,\r\n    });\r\n  };\r\n\r\n  const handleFile = (uploadedFile) => {\r\n    setFile(uploadedFile);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddSong}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Song</DialogTitle>\r\n      </Dialog>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Add Song\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={handleAddSong}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <div>\r\n                <Imageupload\r\n                  className=\"mb-4\"\r\n                  id=\"songimage\"\r\n                  onInput={handleImage}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"flex\">\r\n                <Upload handleFile={handleFile} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-8\">\r\n              <h4>Song Details</h4>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Song Name\"\r\n                    type=\"text\"\r\n                    name=\"songname\"\r\n                    value={state.songname}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Genres\"\r\n                    type=\"text\"\r\n                    name=\"genres\"\r\n                    value={state.genres}\r\n                    onChange={handleChange}\r\n                  />\r\n\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Song Poet\"\r\n                    type=\"text\"\r\n                    name=\"poet\"\r\n                    value={state.poet}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Mix and Master\"\r\n                    type=\"text\"\r\n                    name=\"mixmaster\"\r\n                    value={state.mixmaster}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Producer\"\r\n                    type=\"text\"\r\n                    name=\"producer\"\r\n                    value={state.producer}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Year\"\r\n                    type=\"text\"\r\n                    name=\"year\"\r\n                    value={state.year}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Label\"\r\n                    type=\"text\"\r\n                    name=\"label\"\r\n                    value={state.label}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    multiline\r\n                    rows={8}\r\n                    label=\"Song Lyrics\"\r\n                    type=\"text\"\r\n                    name=\"lyrics\"\r\n                    value={state.lyrics}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    multiline\r\n                    rows={8}\r\n                    label=\"Summary\"\r\n                    type=\"text\"\r\n                    name=\"summary\"\r\n                    value={state.summary}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                  <br />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                      <h5>Add Artist </h5>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <a\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={handleOnAddArtists}\r\n                      >\r\n                        {onAddArtists ? \"X\" : \"+\"}\r\n                      </a>\r\n                    </div>\r\n                    {onAddArtists ? (\r\n                      <div>\r\n                        {fetchedArtists ? (\r\n                          <Selectartistforsong\r\n                            data={fetchedArtists}\r\n                            selectArtists={handleArtists}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                  <br />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                      <h5>Related Songs </h5>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <a\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={handleOnAddRelatedSongs}\r\n                      >\r\n                        {onAddRelatedSongs ? \"X\" : \"+\"}\r\n                      </a>\r\n                    </div>\r\n                    {onAddRelatedSongs ? (\r\n                      <div>\r\n                        {fetchedSongs ? (\r\n                          <Selectsongsforartist\r\n                            data={fetchedSongs}\r\n                            selectSongs={handleSongs}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddSong} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addsong;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforsong.js",["460","461","462"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectartistforsong({ data, selectArtists }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectArtists(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value._id);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.artistname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Artist\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Upload.js",["463","464","465"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst Upload = ({ handleFile }) => {\r\n  const [file, setFile] = useState();\r\n  const filePickerRef = useRef();\r\n\r\n  const pickImagehandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        id=\"file\"\r\n        accept=\".mp3\"\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        onChange={(event) => {\r\n          const file = event.target.files[0];\r\n          setFile(file);\r\n          handleFile(file);\r\n        }}\r\n      />\r\n      {file ? <p>{file.name}</p> : null}\r\n\r\n      {console.log(file)}\r\n      <button\r\n        className={`btn btn-sm btn-danger`}\r\n        type=\"button\"\r\n        onClick={pickImagehandler}\r\n      >\r\n        Upload Song\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editsong.js",["466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Selectartistforsong from \"../Components/Selectartistforsong\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Imageupload from \"../Components/Imageupload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Editsong({\r\n  open,\r\n  handleClickOpen,\r\n  data,\r\n  handleEditSong,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    songname: data.songname,\r\n    songimage: data.songimage,\r\n    artists: data.artists,\r\n    songs: data.songs,\r\n    genres: data.genres,\r\n    poet: data.poet,\r\n    label: data.label,\r\n    mixmaster: data.mixmaster,\r\n    producer: data.producer,\r\n    summary: data.summary,\r\n    lyrics: data.lyrics,\r\n    year: data.year,\r\n    relatedSongs: data.relatedSongs,\r\n  });\r\n  const classes = useStyles();\r\n\r\n  console.log(open, data);\r\n\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [foundArtists, setFoundArtists] = useState([]);\r\n  const [editArtists, setEditArtists] = useState(false);\r\n  const [editRelatedSongs, setEditRelatedSongs] = useState(false);\r\n  const [addRelatedSongs, setAddRelatedSongs] = useState(false);\r\n  const [addArtists, setAddArtists] = useState(false);\r\n  const [fetchedSongs, setFetchedSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    handleEditSong(state);\r\n    handleCloseEdit();\r\n    // setState({\r\n    //   albumname: \"\",\r\n    //   albumimage: \"\",\r\n    // });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtistsToggle = () => {\r\n    setEditArtists(!editArtists);\r\n    setAddArtists(false);\r\n  };\r\n\r\n  const handleRelatedSongsToggle = () => {\r\n    console.log(\"yoo\");\r\n    setEditRelatedSongs(!editRelatedSongs);\r\n    setAddRelatedSongs(false);\r\n  };\r\n\r\n  const handleAddArtists = () => {\r\n    handleArtistsToggle();\r\n    setAddArtists(!addArtists);\r\n  };\r\n\r\n  const handleAddRelatedSongs = () => {\r\n    handleRelatedSongsToggle();\r\n    setAddRelatedSongs(!addRelatedSongs);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddArtists = (data) => {\r\n    let yoo;\r\n    console.log(foundArtists);\r\n    console.log(data);\r\n\r\n    yoo = data.map((artist) => {\r\n      return artist._id;\r\n    });\r\n\r\n    console.log(yoo);\r\n\r\n    setFoundArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: yoo,\r\n    });\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const deleteAlbumArtists = async (id) => {\r\n    console.log(id);\r\n\r\n    await setFoundArtists(\"\");\r\n    await setState({\r\n      ...state,\r\n      artists: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      let filterArtists = [];\r\n      allArtists = await getArtists();\r\n      setAllArtists(allArtists);\r\n      console.log(allArtists);\r\n\r\n      state.artists.map((artistId) => {\r\n        allArtists.filter((artist) => {\r\n          if (artist._id === artistId) {\r\n            filterArtists.push(artist);\r\n          }\r\n        });\r\n      });\r\n\r\n      console.log(filterArtists);\r\n      await setFoundArtists(filterArtists);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      let filterSongs = [];\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n\r\n      state.relatedSongs.map((songId) => {\r\n        allSongs.filter((song) => {\r\n          if (songId === song._id) {\r\n            filterSongs.push(song);\r\n          }\r\n        });\r\n      });\r\n\r\n      console.log(filterSongs);\r\n      await setFoundSongs(filterSongs);\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        // onSubmit={handleSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Song</DialogTitle>\r\n      </Dialog>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseEdit}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Edit Song\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSubmit}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <Imageupload imageSrc={state.songimage} />\r\n            </div>\r\n            <div className=\"col-12 col-md-8\">\r\n              <h4>Song Details</h4>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Song Name\"\r\n                    type=\"text\"\r\n                    name=\"songname\"\r\n                    value={state.songname}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Genres\"\r\n                    type=\"text\"\r\n                    name=\"genres\"\r\n                    value={state.genres}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Label\"\r\n                    type=\"text\"\r\n                    name=\"label\"\r\n                    value={state.label}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Poets\"\r\n                    type=\"text\"\r\n                    name=\"poet\"\r\n                    value={state.poet}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Producer\"\r\n                    type=\"text\"\r\n                    name=\"producer\"\r\n                    value={state.producer}\r\n                    onChange={handleChange}\r\n                  />\r\n\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Year of Release\"\r\n                    type=\"text\"\r\n                    name=\"year\"\r\n                    value={state.year}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Mix and Master\"\r\n                    type=\"text\"\r\n                    name=\"mixmaster\"\r\n                    value={state.mixmaster}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    multiline\r\n                    rows={8}\r\n                    label=\"Lyrics\"\r\n                    type=\"text\"\r\n                    name=\"lyrics\"\r\n                    value={state.lyrics}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    multiline\r\n                    rows={8}\r\n                    label=\"Summary\"\r\n                    type=\"text\"\r\n                    name=\"summary\"\r\n                    value={state.summary}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                  <div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        <span style={{ fontSize: \"25px\" }}>Artist</span>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <button\r\n                          style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                          className=\"btn btn-sm btn-outline-danger\"\r\n                          onClick={handleArtistsToggle}\r\n                        >\r\n                          {editArtists ? \"X\" : <EditIcon />}\r\n                        </button>\r\n                        <span>\r\n                          {editArtists || addArtists ? (\r\n                            <button\r\n                              style={{\r\n                                marginLeft: \"20px\",\r\n                                marginBottom: \"7px\",\r\n                              }}\r\n                              className=\"btn btn-sm btn-outline-danger\"\r\n                              onClick={handleAddArtists}\r\n                            >\r\n                              {addArtists ? \"X\" : \"+\"}\r\n                            </button>\r\n                          ) : null}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      {console.log(foundArtists)}\r\n                      {editArtists ? (\r\n                        <List>\r\n                          {foundArtists.map((artist) => {\r\n                            return (\r\n                              <ListItem>\r\n                                <ListItemText\r\n                                  primary={artist.artistname}\r\n                                  // secondary={secondary ? \"Secondary text\" : null}\r\n                                />\r\n                                {console.log(artist.artistname)}\r\n                                <ListItemSecondaryAction>\r\n                                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteForeverIcon\r\n                                      onClick={() =>\r\n                                        deleteAlbumArtists(artist._id)\r\n                                      }\r\n                                    />\r\n                                  </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                              </ListItem>\r\n                            );\r\n                          })}\r\n                        </List>\r\n                      ) : null}\r\n                    </div>\r\n                    {addArtists ? (\r\n                      <Selectartistforsong\r\n                        data={allArtists}\r\n                        selectArtists={handleSelectedAddArtists}\r\n                      />\r\n                    ) : null}\r\n\r\n                    {/* <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        <span style={{ fontSize: \"25px\" }}>Related Songs</span>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <button\r\n                          style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                          className=\"btn btn-sm btn-outline-danger\"\r\n                          onClick={handleRelatedSongsToggle}\r\n                        >\r\n                          {editRelatedSongs ? \"X\" : <EditIcon />}\r\n                        </button>\r\n                        <span>\r\n                          {editRelatedSongs || addRelatedSongs ? (\r\n                            <button\r\n                              style={{\r\n                                marginLeft: \"20px\",\r\n                                marginBottom: \"7px\",\r\n                              }}\r\n                              className=\"btn btn-sm btn-outline-danger\"\r\n                              onClick={handleAddRelatedSongs}\r\n                            >\r\n                              {addRelatedSongs ? \"X\" : \"+\"}\r\n                            </button>\r\n                          ) : null}\r\n                        </span>\r\n                      </div>\r\n                    </div> */}\r\n                    {/* <div>\r\n                      {console.log(foundArtists)}\r\n                      {editArtists ? (\r\n                        <List>\r\n                          {foundArtists.map((artist) => {\r\n                            return (\r\n                              <ListItem>\r\n                                <ListItemText\r\n                                  primary={artist.artistname}\r\n                                  // secondary={secondary ? \"Secondary text\" : null}\r\n                                />\r\n                                {console.log(artist.artistname)}\r\n                                <ListItemSecondaryAction>\r\n                                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteForeverIcon\r\n                                      onClick={() =>\r\n                                        deleteAlbumArtists(artist._id)\r\n                                      }\r\n                                    />\r\n                                  </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                              </ListItem>\r\n                            );\r\n                          })}\r\n                        </List>\r\n                      ) : null}\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Userstable.js",["484","485","486","487"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { deleteUsers } from \"../Pagesactions/usersactions\";\r\nimport Imageavatar from \"./Imageavatar\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Userstable({ data, handleUpdateData, handleView }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    console.log(id);\r\n    let res;\r\n    res = await deleteUsers(id);\r\n    handleUpdateData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* {console.log(keys)}\r\n            {keys.map((key) => (\r\n              <StyledTableCell>{key}</StyledTableCell>\r\n            ))} */}\r\n            <StyledTableCell> User Image</StyledTableCell>\r\n            <StyledTableCell> User Name</StyledTableCell>\r\n            <StyledTableCell> Age</StyledTableCell>\r\n            <StyledTableCell> Gender</StyledTableCell>\r\n            <StyledTableCell> Phone Number</StyledTableCell>\r\n            <StyledTableCell> Email</StyledTableCell>\r\n            <StyledTableCell> Delete</StyledTableCell>\r\n            <StyledTableCell> View</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row, idx) => (\r\n            <StyledTableRow key={row._id}>\r\n              <StyledTableCell>\r\n                <Imageavatar imageSrc={row.image} />\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.age}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.gender}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.phoneNumber}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\r\n\r\n              <StyledTableCell align=\"left\">\r\n                <button\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={() => handleDelete(row._id)}\r\n                >\r\n                  <DeleteForeverIcon />\r\n                </button>\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"left\">\r\n                <button\r\n                  className=\"btn btn-sm btn-success\"\r\n                  onClick={() =>\r\n                    handleView({\r\n                      _id: row._id,\r\n                      name: row.name,\r\n                      gender: row.gender,\r\n                      age: row.age,\r\n                      email: row.email,\r\n                      phoneNumber: row.phoneNumber,\r\n                      image: row.image,\r\n                    })\r\n                  }\r\n                >\r\n                  <VisibilityIcon />\r\n                </button>\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Adminpopular.js",["488","489","490","491","492","493"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport Addpopular from \"../Components/Addpopular\";\r\nimport {\r\n  addPopular,\r\n  editPopular,\r\n  getPopular,\r\n} from \"../Pagesactions/songsactions\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst Adminpopular = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [popular, setPopular] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [sortState, setSortState] = useState(false);\r\n  const [sortedList, setSortedList] = useState();\r\n  const [active, setActive] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddPopular = async (data) => {\r\n    console.log(data);\r\n    // addPopular(data);\r\n    // console.log(\"yoo\");\r\n    let res;\r\n\r\n    res = await editPopular({ popular: data, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    let yoo = [];\r\n    let res;\r\n    res = await editPopular({ popular: yoo, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let popularSongs = popular[0].popular;\r\n    let filterSongs;\r\n    filterSongs = popularSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setpopular(filterSongs)\r\n    await editPopular({ popular: filterSongs, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleNewSort = async (sortedArray) => {\r\n    // console.log(sortedArray);\r\n    await setSortedList({ popular: sortedArray });\r\n    setSortState(true);\r\n  };\r\n\r\n  const handleSortList = async () => {\r\n    console.log(\"hello g\");\r\n    console.log(sortedList);\r\n    setSortState(false);\r\n\r\n    let res;\r\n    res = await editPopular({ popular: sortedList, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPopular = async () => {\r\n      let allPopular;\r\n      allPopular = await getPopular();\r\n      console.log(allPopular);\r\n      setPopular(allPopular);\r\n      setActive(allPopular[0].active);\r\n      setSortedList(allPopular);\r\n      setSortState(false);\r\n    };\r\n\r\n    fetchPopular();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Popular Songs</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\" mb-4 col-12 col-md-1\"></div>\r\n          <div className=\"col-12 col-md-10 text-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-3\">\r\n                <br />\r\n                <br />\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={handleClickOpen}\r\n                >\r\n                  <AddCircleIcon /> New List\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={handleDeleteList}\r\n                >\r\n                  <DeleteIcon /> Delete List\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button\r\n                  style={{ width: \"120px\" }}\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={handleSortList}\r\n                  disabled={sortState ? false : true}\r\n                >\r\n                  <SortIcon /> Save Sort\r\n                </button>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 d-flex justify-content-center\">\r\n                {popular ? (\r\n                  <React.Fragment>\r\n                    {popular[0].popular.length === 0 ? (\r\n                      \" Popular List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        <List className={classes.root}>\r\n                          <ListItem button>\r\n                            <ListItemAvatar>\r\n                              <Avatar\r\n                                alt={`Avatar n°${1 + 1}`}\r\n                                // src={value.image}\r\n                              />\r\n                            </ListItemAvatar>\r\n                            <h4 style={{ color: \"black\" }}>Popular List</h4>\r\n                          </ListItem>\r\n                        </List>\r\n                        {popular ? (\r\n                          <Trendingtable\r\n                            data={popular[0].popular}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                            handleNewSort={handleNewSort}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-1 col-md-3\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-1\">\r\n            {open ? (\r\n              <Addpopular\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddPopular={handleAddPopular}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Adminpopular;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintrending.js",["494","495","496","497","498"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintopcharts.js",["499","500","501","502","503","504","505","506","507"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport {\r\n  addTopcharts,\r\n  editTopcharts,\r\n  getTopcharts,\r\n} from \"../Pagesactions/songsactions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport Addtrending from \"../Components/Addtrending\";\r\nimport Tabsvertical from \"../Components/Tabsvertical.js\";\r\nimport Addnewchart from \"../Components/Addnewchart\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Admintopcharts = () => {\r\n  const [fetchedTopcharts, setFetchedTopcharts] = useState();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [active, setActive] = useState();\r\n  const [newList, setNewList] = useState(false);\r\n  const [id, setId] = useState();\r\n  const [name, setName] = useState();\r\n  const [sortState, setSortState] = useState(false);\r\n  const [sortedList, setSortedList] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpenNewList = async () => {\r\n    setNewList(!newList);\r\n  };\r\n\r\n  const handleId = async (id) => {\r\n    console.log(id);\r\n    setId(id);\r\n  };\r\n\r\n  const handleAddTopcharts = async (songs, name, image) => {\r\n    let topcharts = [\r\n      ...fetchedTopcharts,\r\n      {\r\n        topchart: songs,\r\n        name: name,\r\n        image: image,\r\n        id: uuidv4(),\r\n      },\r\n    ];\r\n    // addTrending(data);\r\n    let res;\r\n    res = await editTopcharts({ topcharts: topcharts, active: active });\r\n    console.log(res);\r\n\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteChart = async () => {\r\n    let yooCharts = fetchedTopcharts;\r\n    let filterCharts;\r\n    filterCharts = yooCharts.filter((value) => {\r\n      return value.id !== id;\r\n    });\r\n\r\n    let topcharts = [...filterCharts];\r\n    let res;\r\n    res = await editTopcharts({ topcharts: topcharts, active: active });\r\n    console.log(res);\r\n    setId();\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleAddNewList = async (data) => {\r\n    console.log(data);\r\n    fetchedTopcharts.map((value) => {\r\n      if (value.id === id) {\r\n        value.topchart = data;\r\n      }\r\n    });\r\n    let yoo = fetchedTopcharts;\r\n    let topcharts = [...yoo];\r\n    let res;\r\n    res = await editTopcharts({ topcharts: topcharts, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    fetchedTopcharts.map((value) => {\r\n      if (value.id === id) {\r\n        value.topchart = [];\r\n      }\r\n    });\r\n    let yoo = fetchedTopcharts;\r\n    let topcharts = [...yoo];\r\n    let res;\r\n    res = await editTopcharts({ topcharts: topcharts, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleNewSort = (sortedArray) => {\r\n    console.log(sortedArray);\r\n    setSortedList(sortedArray);\r\n    setSortState(true);\r\n  };\r\n\r\n  const handleSortList = async () => {\r\n    setSortState(false);\r\n    fetchedTopcharts.map((value) => {\r\n      if (value.id === id) {\r\n        value.topchart = sortedList;\r\n      }\r\n    });\r\n    let yoo = fetchedTopcharts;\r\n    let topcharts = [...yoo];\r\n    let res;\r\n    res = await editTopcharts({ topcharts: topcharts, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (songId) => {\r\n    let yooSongs = fetchedTopcharts;\r\n    let filterSongs;\r\n    yooSongs.map((value) => {\r\n      if (value.id === id) {\r\n        filterSongs = value.topchart.filter((song) => {\r\n          return song._id !== songId;\r\n        });\r\n        value.topchart = filterSongs;\r\n      }\r\n    });\r\n\r\n    let yoo = fetchedTopcharts;\r\n    let topcharts = [...yoo];\r\n    let res;\r\n    res = await editTopcharts({ topcharts: topcharts, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTopcharts = async () => {\r\n      let allTopcharts;\r\n      allTopcharts = await getTopcharts();\r\n      console.log(allTopcharts);\r\n      setFetchedTopcharts(allTopcharts[0].topcharts);\r\n      setActive(allTopcharts[0].active);\r\n      setSortedList(allTopcharts[0].topcharts);\r\n      setSortState(false);\r\n    };\r\n\r\n    fetchTopcharts();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"container\">\r\n        <h3>Top Charts</h3>\r\n        <br />\r\n        <br />\r\n        <div className=\"row\">\r\n          {console.log(fetchedTopcharts)}\r\n          <div className=\"col-12 col-md-8\">\r\n            {fetchedTopcharts ? (\r\n              <Tabsvertical\r\n                data={fetchedTopcharts}\r\n                handleDeleteSong={handleDeleteSong}\r\n                handleNewSort={handleNewSort}\r\n                handleId={handleId}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          {id ? (\r\n            <div className=\"col-12 col-md-2\">\r\n              <br />\r\n              <button\r\n                style={{ width: \"120px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleOpenNewList}\r\n              >\r\n                <AddCircleIcon /> New List\r\n              </button>\r\n              <br />\r\n              <br />\r\n              <button\r\n                style={{ width: \"120px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleDeleteList}\r\n              >\r\n                <DeleteIcon /> Delete List\r\n              </button>\r\n              <br />\r\n              <br />\r\n              <button\r\n                style={{ width: \"120px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleSortList}\r\n                disabled={sortState ? false : true}\r\n              >\r\n                <SortIcon /> Save Sort\r\n              </button>\r\n              <br />\r\n              <br />\r\n              <button\r\n                style={{ width: \"120px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleDeleteChart}\r\n              >\r\n                <DeleteIcon /> Delete Chart\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"col-12 col-md-2\">\r\n            <h5 style={{ color: \"white\" }}> New Chart </h5>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 35, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n            {open ? (\r\n              <Addnewchart\r\n                open={open}\r\n                handleClose={handleClose}\r\n                handleAddTopcharts={handleAddTopcharts}\r\n              />\r\n            ) : null}\r\n            {newList ? (\r\n              <Addtrending\r\n                open={newList}\r\n                handleClickOpen={handleOpenNewList}\r\n                handleClose={handleOpenNewList}\r\n                handleAddTrending={handleAddNewList}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admintopcharts;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Trendingtable.js",["508","509","510"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <IconButton edge=\"end\" aria-label=\"comments\">\r\n    <DragIndicatorIcon />\r\n  </IconButton>\r\n));\r\n\r\nconst SortableItem = sortableElement(\r\n  ({ value, name, classes, handleDelete }) => (\r\n    <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n      <ListItemAvatar>\r\n        <Avatar alt=\"Remy Sharp\" src={value.songimage} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        style={{ color: \"black\" }}\r\n        primary={`${value.songname}`}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              className={classes.inline}\r\n              color=\"textPrimary\"\r\n            ></Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <DragHandle />\r\n        <IconButton>\r\n          <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n        </IconButton>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n);\r\n\r\nconst SortableContainer = sortableContainer(({ children, classes }) => {\r\n  return (\r\n    <List width=\"100%\" className={classes.root}>\r\n      {children}\r\n    </List>\r\n  );\r\n});\r\n\r\nconst Trendingtable = ({ data, handleDeleteSong, name, handleNewSort }) => {\r\n  const classes = useStyles();\r\n  console.log(data);\r\n  const [state, setState] = useState(data);\r\n  console.log(state);\r\n  const handleDelete = (id) => {\r\n    console.log(name);\r\n    handleDeleteSong(id, name);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setState((items) => arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  useMemo(() => {\r\n    handleNewSort(state, name);\r\n  }, [state]);\r\n\r\n  return (\r\n    <SortableContainer onSortEnd={onSortEnd} useDragHandle classes={classes}>\r\n      {console.log(state)}\r\n      {state.map((value, index) => (\r\n        <SortableItem\r\n          key={`item-${value._id}`}\r\n          index={index}\r\n          value={value}\r\n          handleDelete={handleDelete}\r\n          classes={classes}\r\n        />\r\n      ))}\r\n    </SortableContainer>\r\n    // <List className={classes.root} width=\"100%\">\r\n    //   {data.map((value) => {\r\n    //     return (\r\n    //       <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n    //         <ListItemAvatar>\r\n    //           <Avatar alt=\"Remy Sharp\" src={value.songimage} />\r\n    //         </ListItemAvatar>\r\n    //         <ListItemText\r\n    //           style={{ color: \"black\" }}\r\n    //           primary={`${value.songname}`}\r\n    //           secondary={\r\n    //             <React.Fragment>\r\n    //               <Typography\r\n    //                 component=\"span\"\r\n    //                 variant=\"body2\"\r\n    //                 className={classes.inline}\r\n    //                 color=\"textPrimary\"\r\n    //               >\r\n    //                 Ali Gatie\r\n    //               </Typography>\r\n    //             </React.Fragment>\r\n    //           }\r\n    //         />\r\n    //         <ListItemSecondaryAction>\r\n    //           <IconButton edge=\"end\" aria-label=\"comments\">\r\n    //             <DragIndicatorIcon />\r\n    //           </IconButton>\r\n    //           <IconButton>\r\n    //             <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n    //           </IconButton>\r\n    //           <Divider variant=\"inset\" component=\"li\" />\r\n    //         </ListItemSecondaryAction>\r\n    //       </ListItem>\r\n    //     );\r\n    //   })}\r\n    // </List>\r\n  );\r\n};\r\n\r\nexport default sortableContainer(Trendingtable);\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtrending.js",["511","512","513","514","515","516","517","518","519"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addtrending({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTrending,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddTrending(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for trending\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsfortrending.js",["520","521","522","523"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsfortrending({\r\n  data,\r\n  selectSongs,\r\n  handleClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value._id);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    let ids = [];\r\n    checked.map((song) => {\r\n      ids.push(song._id);\r\n    });\r\n    console.log(ids);\r\n    console.log(checked);\r\n    // selectSongs(ids);\r\n    selectSongs(checked);\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col-1 col-md-2\"></div>\r\n        <div className=\"col-10 col-md-8 \">\r\n          <List className={classes.root}>\r\n            {console.log(data)}\r\n            {data.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              console.log(labelId);\r\n              console.log(value._id);\r\n\r\n              return (\r\n                <ListItem\r\n                  key={value}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={checked.indexOf(value) !== -1}\r\n                      tabIndex={0}\r\n                      disableRipple\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={labelId} primary={`${value.songname}`} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"col-1 col-md-2 mt-4 text-center\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n            Add Songs\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addpopular.js",["524","525","526","527","528","529","530","531","532"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addpopular({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddPopular,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddPopular(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for Popular List\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addchart.js",["533","534","535","536","537","538","539","540","541"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Addchart = ({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddCharts,\r\n  listName,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddCharts(data, listName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for trending\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addchart;\r\n",["542","543"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Managehomepage.js",["544","545"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Active.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Recommended.js",["546","547"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Bongplaylist.js",["548","549","550","551"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topartists.js",["552","553"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topalbums.js",["554","555"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopalbums.js",["556","557","558","559","560","561","562","563","564"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectalbumfortopalbums from \"./Selectalbumfortopalbums\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addtopalbums({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTrending,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [selectAlbums, setSelectAlbums] = useState();\r\n\r\n  const handleSelectAlbums = (data) => {\r\n    console.log(data);\r\n    setSelectAlbums(data);\r\n    handleAddTrending(data);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n    fetchAlbums();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedAlbums)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Albums for Top albums\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedAlbums ? (\r\n          <div className=\"container\">\r\n            <Selectalbumfortopalbums\r\n              data={fetchedAlbums}\r\n              selectAlbums={handleSelectAlbums}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumfortopalbums.js",["565","566","567"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectalbumfortopalbums({ data, selectAlbums }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    selectAlbums(checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-1 col-md-2\"></div>\r\n        <div className=\"col-10 col-md-8\">\r\n          <List className={classes.root}>\r\n            {data.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              console.log(labelId);\r\n              console.log(value);\r\n\r\n              return (\r\n                <ListItem\r\n                  key={value}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={checked.indexOf(value) !== -1}\r\n                      tabIndex={0}\r\n                      disableRipple\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={labelId} primary={`${value.albumname}`} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"col-1 col-md-2 mt-4 text-center\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n            Add Albums\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topalbumtable.js",["568","569","570"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <IconButton edge=\"end\" aria-label=\"comments\">\r\n    <DragIndicatorIcon />\r\n  </IconButton>\r\n));\r\n\r\nconst SortableItem = sortableElement(\r\n  ({ value, name, classes, handleDelete }) => (\r\n    <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n      <ListItemAvatar>\r\n        <Avatar alt=\"Remy Sharp\" src={value.albumimage} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        style={{ color: \"black\" }}\r\n        primary={`${value.albumname}`}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              className={classes.inline}\r\n              color=\"textPrimary\"\r\n            >\r\n              Ali Gatie\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <DragHandle />\r\n        <IconButton>\r\n          <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n        </IconButton>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n);\r\n\r\nconst SortableContainer = sortableContainer(({ children, classes }) => {\r\n  return (\r\n    <List width=\"100%\" className={classes.root}>\r\n      {children}\r\n    </List>\r\n  );\r\n});\r\n\r\nconst Topalbumtable = ({ data, handleDeleteSong, name, handleNewSort }) => {\r\n  const classes = useStyles();\r\n  console.log(data);\r\n  const [state, setState] = useState(data);\r\n  console.log(state);\r\n  const handleDelete = (id) => {\r\n    console.log(name);\r\n    handleDeleteSong(id, name);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setState((items) => arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  useMemo(() => {\r\n    handleNewSort(state, name);\r\n  }, [state]);\r\n\r\n  return (\r\n    <SortableContainer onSortEnd={onSortEnd} useDragHandle classes={classes}>\r\n      {console.log(state)}\r\n      {state.map((value, index) => (\r\n        <SortableItem\r\n          key={`item-${value._id}`}\r\n          index={index}\r\n          value={value}\r\n          handleDelete={handleDelete}\r\n          classes={classes}\r\n        />\r\n      ))}\r\n    </SortableContainer>\r\n    // <List className={classes.root} width=\"100%\">\r\n    //   {data.map((value) => {\r\n    //     return (\r\n    //       <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n    //         <ListItemAvatar>\r\n    //           <Avatar alt=\"Remy Sharp\" src={value.songimage} />\r\n    //         </ListItemAvatar>\r\n    //         <ListItemText\r\n    //           style={{ color: \"black\" }}\r\n    //           primary={`${value.songname}`}\r\n    //           secondary={\r\n    //             <React.Fragment>\r\n    //               <Typography\r\n    //                 component=\"span\"\r\n    //                 variant=\"body2\"\r\n    //                 className={classes.inline}\r\n    //                 color=\"textPrimary\"\r\n    //               >\r\n    //                 Ali Gatie\r\n    //               </Typography>\r\n    //             </React.Fragment>\r\n    //           }\r\n    //         />\r\n    //         <ListItemSecondaryAction>\r\n    //           <IconButton edge=\"end\" aria-label=\"comments\">\r\n    //             <DragIndicatorIcon />\r\n    //           </IconButton>\r\n    //           <IconButton>\r\n    //             <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n    //           </IconButton>\r\n    //           <Divider variant=\"inset\" component=\"li\" />\r\n    //         </ListItemSecondaryAction>\r\n    //       </ListItem>\r\n    //     );\r\n    //   })}\r\n    // </List>\r\n  );\r\n};\r\n\r\nexport default sortableContainer(Topalbumtable);\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topartiststable.js",["571","572","573"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <IconButton edge=\"end\" aria-label=\"comments\">\r\n    <DragIndicatorIcon />\r\n  </IconButton>\r\n));\r\n\r\nconst SortableItem = sortableElement(\r\n  ({ value, name, classes, handleDelete }) => (\r\n    <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n      <ListItemAvatar>\r\n        <Avatar alt=\"Remy Sharp\" src={value.artistimage} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        style={{ color: \"black\" }}\r\n        primary={`${value.artistname}`}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              className={classes.inline}\r\n              color=\"textPrimary\"\r\n            >\r\n              Ali Gatie\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <DragHandle />\r\n        <IconButton>\r\n          <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n        </IconButton>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n);\r\n\r\nconst SortableContainer = sortableContainer(({ children, classes }) => {\r\n  return (\r\n    <List width=\"100%\" className={classes.root}>\r\n      {children}\r\n    </List>\r\n  );\r\n});\r\n\r\nconst Topartiststable = ({ data, handleDeleteSong, name, handleNewSort }) => {\r\n  const classes = useStyles();\r\n  console.log(data);\r\n  const [state, setState] = useState(data);\r\n  console.log(state);\r\n  const handleDelete = (id) => {\r\n    console.log(name);\r\n    handleDeleteSong(id, name);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setState((items) => arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  useMemo(() => {\r\n    handleNewSort(state, name);\r\n  }, [state]);\r\n\r\n  return (\r\n    <SortableContainer onSortEnd={onSortEnd} useDragHandle classes={classes}>\r\n      {console.log(state)}\r\n      {state.map((value, index) => (\r\n        <SortableItem\r\n          key={`item-${value._id}`}\r\n          index={index}\r\n          value={value}\r\n          handleDelete={handleDelete}\r\n          classes={classes}\r\n        />\r\n      ))}\r\n    </SortableContainer>\r\n    // <List className={classes.root} width=\"100%\">\r\n    //   {data.map((value) => {\r\n    //     return (\r\n    //       <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n    //         <ListItemAvatar>\r\n    //           <Avatar alt=\"Remy Sharp\" src={value.songimage} />\r\n    //         </ListItemAvatar>\r\n    //         <ListItemText\r\n    //           style={{ color: \"black\" }}\r\n    //           primary={`${value.songname}`}\r\n    //           secondary={\r\n    //             <React.Fragment>\r\n    //               <Typography\r\n    //                 component=\"span\"\r\n    //                 variant=\"body2\"\r\n    //                 className={classes.inline}\r\n    //                 color=\"textPrimary\"\r\n    //               >\r\n    //                 Ali Gatie\r\n    //               </Typography>\r\n    //             </React.Fragment>\r\n    //           }\r\n    //         />\r\n    //         <ListItemSecondaryAction>\r\n    //           <IconButton edge=\"end\" aria-label=\"comments\">\r\n    //             <DragIndicatorIcon />\r\n    //           </IconButton>\r\n    //           <IconButton>\r\n    //             <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n    //           </IconButton>\r\n    //           <Divider variant=\"inset\" component=\"li\" />\r\n    //         </ListItemSecondaryAction>\r\n    //       </ListItem>\r\n    //     );\r\n    //   })}\r\n    // </List>\r\n  );\r\n};\r\n\r\nexport default sortableContainer(Topartiststable);\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopartists.js",["574","575","576","577","578","579","580","581","582"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectartistsfortopartists from \"./Selectartistsfortopartists\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addtopartists({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTrending,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [selectArtists, setSelectArtists] = useState();\r\n\r\n  const handleSelectAlbums = (data) => {\r\n    console.log(data);\r\n    setSelectArtists(data);\r\n    handleAddTrending(data);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedArtists)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Artists for Top Artists\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedArtists ? (\r\n          <div className=\"container\">\r\n            <Selectartistsfortopartists\r\n              data={fetchedArtists}\r\n              selectAlbums={handleSelectAlbums}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistsfortopartists.js",["583","584","585"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectalbumfortopartists({ data, selectAlbums }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    selectAlbums(checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-1 col-md-2\"></div>\r\n        <div className=\"col-10 col-md-8\">\r\n          <List className={classes.root}>\r\n            {data.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              console.log(labelId);\r\n              console.log(value);\r\n\r\n              return (\r\n                <ListItem\r\n                  key={value}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={checked.indexOf(value) !== -1}\r\n                      tabIndex={0}\r\n                      disableRipple\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={labelId} primary={`${value.artistname}`} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"col-1 col-md-2 mt-4 text-center\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n            Add Artists\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Tabsvertical.js",["586","587","588","589","590"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst Tabsvertical = ({ data, handleDeleteSong, handleNewSort, handleId }) => {\r\n  const classes = useStyles();\r\n  const [active, setActive] = useState(\"active\");\r\n  const [id, setId] = useState();\r\n  const [color, setColor] = useState(false);\r\n\r\n  const handleClick = (id) => {\r\n    console.log(id);\r\n    setId(id);\r\n    handleId(id);\r\n    setColor(true);\r\n    // setActive(\"active\");\r\n  };\r\n  return (\r\n    <div>\r\n      {console.log(data)}\r\n      <div class=\"row\">\r\n        <div className=\"col-2\"></div>\r\n        <div class=\"col-3\">\r\n          <h5>Charts</h5>\r\n          <div\r\n            class=\"nav flex-column nav-pills\"\r\n            id=\"v-pills-tab\"\r\n            role=\"tablist\"\r\n            aria-orientation=\"vertical\"\r\n          >\r\n            {data.map((value) => {\r\n              return (\r\n                <div>\r\n                  <a\r\n                    class={`nav-link btn btn-${\r\n                      value.id === id ? \"primary\" : \"danger\"\r\n                    } btn-sm`}\r\n                    id={value.id}\r\n                    data-toggle=\"pill\"\r\n                    href={`#${value.id}`}\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-settings\"\r\n                    aria-selected=\"false\"\r\n                    onClick={() => handleClick(value.id)}\r\n                  >\r\n                    {value.name}\r\n                  </a>\r\n                  <br />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div class=\"col-7\">\r\n          <div className=\"row\">\r\n            <div className=\"col-1 col-md-0\"></div>\r\n            <div className=\"col-10 col-md-12\">\r\n              {active ? (\r\n                <div class=\"tab-content\" id=\"v-pills-tabContent\">\r\n                  {console.log(data.length)}\r\n                  {data.map((value) => (\r\n                    <div\r\n                      class={`tab-pane fade show  ${\r\n                        value.id === id ? active : \"\"\r\n                      }`}\r\n                      id={`${value.id}`}\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"v-pills-profile-tab\"\r\n                    >\r\n                      {value.topchart.length === 0 ? (\r\n                        \"List is Empty\"\r\n                      ) : (\r\n                        <div>\r\n                          <List className={classes.root}>\r\n                            <ListItem key={value} button>\r\n                              <ListItemAvatar>\r\n                                <Avatar\r\n                                  alt={`Avatar n°${value + 1}`}\r\n                                  src={value.image}\r\n                                />\r\n                              </ListItemAvatar>\r\n                              <h4 style={{ color: \"black\" }}>{value.name}</h4>\r\n                              {/* <ListItemText\r\n                              // id={labelId}\r\n                              primary={value.name}\r\n                            /> */}\r\n                            </ListItem>\r\n                            <Divider />\r\n                          </List>\r\n                          <Trendingtable\r\n                            data={value.topchart}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                            handleNewSort={handleNewSort}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-1 col-md-0\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabsvertical;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addnewchart.js",["591","592","593","594","595","596","597","598","599"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport Imageupload from \"../Components/Imageupload\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addnewchart({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTopcharts,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n  const [name, setName] = useState();\r\n  const [image, setImage] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddTopcharts(data, name, image);\r\n    handleClose();\r\n  };\r\n\r\n  const handleNameChange = (evt) => {\r\n    console.log(evt.target.value);\r\n    setName(evt.target.value);\r\n  };\r\n\r\n  const handleImage = (id, image) => {\r\n    console.log(image);\r\n    setImage(image);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for trending\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <form\r\n              style={{ marginLeft: \"165px\" }}\r\n              className={classes.root}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n            >\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Chart Name\"\r\n                variant=\"outlined\"\r\n                value={name}\r\n                onChange={handleNameChange}\r\n              />\r\n              <Imageupload onInput={handleImage} id=\"20\" />\r\n            </form>\r\n\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Imageupload.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Imageavatar.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Userview.js",["600","601","602","603","604"],"import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Row, Col, Card, Tabs, Tab, Dropdown, Carousel } from \"react-bootstrap\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Userview({ open, handleClose, data }) {\r\n  let { _id, name, age, gender, email, phoneNumber, image } = data;\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <div style={{ width: \"300px\", height: \"415px\" }}>\r\n          <Card className=\"user-card user-card-3 support-bar1\">\r\n            <Card.Body>\r\n              <div className=\"text-center\">\r\n                <div className=\"position-relative d-inline-block\">\r\n                  <img\r\n                    className=\"img-radius img-fluid wid-150\"\r\n                    src={\r\n                      image\r\n                        ? image\r\n                        : \"https://images.pexels.com/photos/792326/pexels-photo-792326.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                    }\r\n                    alt=\"User\"\r\n                    style={{\r\n                      borderRadius: \"50%\",\r\n                      width: \"200px\",\r\n                      height: \"200px\",\r\n                    }}\r\n                  />\r\n                  {console.log(name)}\r\n                  <h3 className=\"mb-1 mt-3 f-w-400\">{name}</h3>\r\n                  <p className=\"mb-3 text-muted\">{email}</p>\r\n                  <p className=\"mb-3 text-muted\">{phoneNumber}</p>\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n            <Card.Footer className=\"bg-light\">\r\n              <Row className=\"text-center\">\r\n                <Col>\r\n                  <h6 className=\"mb-1\">{age}</h6>\r\n                  <p className=\"mb-0\">Age</p>\r\n                </Col>\r\n                <Col>\r\n                  <h6 className=\"mb-1\">{gender}</h6>\r\n                  <p className=\"mb-0\">Gender</p>\r\n                </Col>\r\n                {/* <Col>\r\n                  <h6 className=\"mb-1\">678</h6>\r\n                  <p className=\"mb-0\">Following</p>\r\n                </Col> */}\r\n              </Row>\r\n            </Card.Footer>\r\n          </Card>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Viewartist.js",["605","606","607","608","609","610","611","612","613","614"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"../Styles/View.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Row, Col, Card, Dropdown, Carousel } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Viewartist({\r\n  open,\r\n  handleToggleView,\r\n  data,\r\n  albums,\r\n  songs,\r\n}) {\r\n  const classes = useStyles();\r\n  console.log(data);\r\n  console.log(songs);\r\n\r\n  const [filterAlbums, setFilterAlbums] = useState();\r\n  const [filterSongs, setFilterSongs] = useState();\r\n\r\n  useEffect(() => {\r\n    let yoo = [];\r\n    let yoo2 = [];\r\n    data.albums.map((albumId) => {\r\n      albums.map((album) => {\r\n        if (album._id === albumId) {\r\n          yoo.push(album);\r\n        }\r\n      });\r\n    });\r\n\r\n    data.songs.map((songId) => {\r\n      songs.map((song) => {\r\n        if (song._id === songId) {\r\n          yoo2.push(song);\r\n        }\r\n      });\r\n    });\r\n\r\n    console.log(yoo);\r\n    setFilterAlbums(yoo);\r\n    console.log(yoo2);\r\n    setFilterSongs(yoo2);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleToggleView}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleToggleView}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              View Artist Profile\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleToggleView}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <div className=\"text-center\">\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"110px\",\r\n              }}\r\n              className=\"cover\"\r\n            ></div>\r\n            <div className=\"row\">\r\n              <div className=\"col-4\"></div>\r\n              <div className=\"col-4 \">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={\r\n                      data.artistimage\r\n                        ? data.artistimage\r\n                        : \"https://images.pexels.com/photos/792326/pexels-photo-792326.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                    }\r\n                    className={classes.large}\r\n                    style={{\r\n                      width: \"200px\",\r\n                      height: \"200px\",\r\n                      marginTop: \"-45px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <h4>{data.artistname}</h4>\r\n              </div>\r\n              <div className=\"col-4\"></div>\r\n            </div>\r\n\r\n            <div className=\"container text-center\">\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12 col-md-4 text-center\">\r\n                  {\" \"}\r\n                  <br />\r\n                  {filterAlbums ? (\r\n                    <Card className=\"new-cust-card\">\r\n                      <Card.Header>\r\n                        <Card.Title as=\"h5\">Albums</Card.Title>\r\n                      </Card.Header>\r\n                      <div style={{ height: \"415px\" }}>\r\n                        <PerfectScrollbar>\r\n                          <Card.Body className=\"p-b-0\">\r\n                            {filterAlbums.map((album) => {\r\n                              return (\r\n                                <div className=\"align-middle mb-2\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-4\">\r\n                                      <img\r\n                                        src={album.albumimage}\r\n                                        alt=\"user\"\r\n                                        className=\"img-radius img-fluid align-top \"\r\n                                        style={{\r\n                                          width: \"55px\",\r\n                                          height: \"55px\",\r\n                                          borderRadius: \"50%\",\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                      <div className=\"d-inline-block \">\r\n                                        <a>\r\n                                          <h5 style={{ marginTop: \"12px\" }}>\r\n                                            {album.albumname}\r\n                                          </h5>\r\n                                        </a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <hr />\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </Card.Body>\r\n                        </PerfectScrollbar>\r\n                      </div>\r\n                    </Card>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"col-12 col-md-8\">\r\n                  <br />\r\n                  {filterSongs ? (\r\n                    <div className=\"row\">\r\n                      {filterSongs.map((song) => {\r\n                        return (\r\n                          <div className=\"col-12 col-md-6 mb-5\">\r\n                            <div style={{ width: \"300px\", height: \"415px\" }}>\r\n                              <Card className=\"user-card user-card-3 support-bar1\">\r\n                                <Card.Body>\r\n                                  <div className=\"text-center\">\r\n                                    <div className=\"position-relative d-inline-block\">\r\n                                      <img\r\n                                        className=\"img-radius img-fluid wid-150\"\r\n                                        src={song.songimage}\r\n                                        alt=\"User\"\r\n                                        style={{\r\n                                          borderRadius: \"50%\",\r\n                                          width: \"200px\",\r\n                                          height: \"200px\",\r\n                                        }}\r\n                                      />\r\n                                      <h3 className=\"mb-1 mt-3 f-w-400\">\r\n                                        {song.songname}\r\n                                      </h3>\r\n                                      <p className=\"mb-3 text-muted\">yoo</p>\r\n                                    </div>\r\n                                  </div>\r\n                                </Card.Body>\r\n                                <Card.Footer className=\"bg-light\">\r\n                                  <Row className=\"text-center\">\r\n                                    <Col>\r\n                                      <h6 className=\"mb-1\">22</h6>\r\n                                      <p className=\"mb-0\">Plays</p>\r\n                                    </Col>\r\n                                    <Col>\r\n                                      <h6 className=\"mb-1\">{song.year}</h6>\r\n                                      <p className=\"mb-0\">Year</p>\r\n                                    </Col>\r\n                                    <Col>\r\n                                      <h6 className=\"mb-1\">678</h6>\r\n                                      <p className=\"mb-0\">Following</p>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Card.Footer>\r\n                              </Card>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  ) : null}\r\n                  <br />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Viewalbum.js",["615","616","617","618","619","620","621","622","623"],{"ruleId":"624","replacedBy":"625"},{"ruleId":"626","replacedBy":"627"},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"632","line":2,"column":10,"nodeType":"630","messageId":"631","endLine":2,"endColumn":20},{"ruleId":"628","severity":1,"message":"633","line":3,"column":10,"nodeType":"630","messageId":"631","endLine":3,"endColumn":18},{"ruleId":"628","severity":1,"message":"634","line":4,"column":10,"nodeType":"630","messageId":"631","endLine":4,"endColumn":18},{"ruleId":"628","severity":1,"message":"635","line":5,"column":10,"nodeType":"630","messageId":"631","endLine":5,"endColumn":19},{"ruleId":"628","severity":1,"message":"636","line":28,"column":19,"nodeType":"630","messageId":"631","endLine":28,"endColumn":29},{"ruleId":"628","severity":1,"message":"637","line":29,"column":17,"nodeType":"630","messageId":"631","endLine":29,"endColumn":25},{"ruleId":"628","severity":1,"message":"638","line":30,"column":18,"nodeType":"630","messageId":"631","endLine":30,"endColumn":27},{"ruleId":"628","severity":1,"message":"639","line":31,"column":17,"nodeType":"630","messageId":"631","endLine":31,"endColumn":25},{"ruleId":"628","severity":1,"message":"640","line":33,"column":10,"nodeType":"630","messageId":"631","endLine":33,"endColumn":14},{"ruleId":"628","severity":1,"message":"641","line":33,"column":16,"nodeType":"630","messageId":"631","endLine":33,"endColumn":23},{"ruleId":"628","severity":1,"message":"642","line":4,"column":32,"nodeType":"630","messageId":"631","endLine":4,"endColumn":42},{"ruleId":"643","severity":1,"message":"644","line":145,"column":13,"nodeType":"645","endLine":145,"endColumn":58},{"ruleId":"628","severity":1,"message":"646","line":19,"column":8,"nodeType":"630","messageId":"631","endLine":19,"endColumn":21},{"ruleId":"628","severity":1,"message":"647","line":29,"column":26,"nodeType":"630","messageId":"631","endLine":29,"endColumn":43},{"ruleId":"628","severity":1,"message":"648","line":57,"column":5,"nodeType":"630","messageId":"631","endLine":57,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":77,"column":5,"nodeType":"630","messageId":"631","endLine":77,"endColumn":8},{"ruleId":"649","severity":1,"message":"650","line":89,"column":27,"nodeType":"651","messageId":"652","endLine":89,"endColumn":29},{"ruleId":"628","severity":1,"message":"653","line":17,"column":8,"nodeType":"630","messageId":"631","endLine":17,"endColumn":23},{"ruleId":"628","severity":1,"message":"654","line":19,"column":8,"nodeType":"630","messageId":"631","endLine":19,"endColumn":13},{"ruleId":"628","severity":1,"message":"648","line":86,"column":5,"nodeType":"630","messageId":"631","endLine":86,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":93,"column":5,"nodeType":"630","messageId":"631","endLine":93,"endColumn":8},{"ruleId":"628","severity":1,"message":"655","line":13,"column":8,"nodeType":"630","messageId":"631","endLine":13,"endColumn":16},{"ruleId":"628","severity":1,"message":"653","line":15,"column":8,"nodeType":"630","messageId":"631","endLine":15,"endColumn":23},{"ruleId":"628","severity":1,"message":"654","line":21,"column":8,"nodeType":"630","messageId":"631","endLine":21,"endColumn":13},{"ruleId":"628","severity":1,"message":"656","line":29,"column":10,"nodeType":"630","messageId":"631","endLine":29,"endColumn":17},{"ruleId":"628","severity":1,"message":"657","line":53,"column":11,"nodeType":"630","messageId":"631","endLine":53,"endColumn":23},{"ruleId":"628","severity":1,"message":"648","line":87,"column":9,"nodeType":"630","messageId":"631","endLine":87,"endColumn":12},{"ruleId":"628","severity":1,"message":"648","line":94,"column":5,"nodeType":"630","messageId":"631","endLine":94,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":108,"column":5,"nodeType":"630","messageId":"631","endLine":108,"endColumn":8},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"659","line":41,"column":10,"nodeType":"630","messageId":"631","endLine":41,"endColumn":14},{"ruleId":"628","severity":1,"message":"660","line":42,"column":10,"nodeType":"630","messageId":"631","endLine":42,"endColumn":14},{"ruleId":"628","severity":1,"message":"661","line":42,"column":16,"nodeType":"630","messageId":"631","endLine":42,"endColumn":23},{"ruleId":"628","severity":1,"message":"662","line":44,"column":10,"nodeType":"630","messageId":"631","endLine":44,"endColumn":20},{"ruleId":"628","severity":1,"message":"663","line":44,"column":22,"nodeType":"630","messageId":"631","endLine":44,"endColumn":35},{"ruleId":"664","severity":1,"message":"665","line":65,"column":6,"nodeType":"666","endLine":65,"endColumn":12,"suggestions":"667"},{"ruleId":"628","severity":1,"message":"668","line":77,"column":9,"nodeType":"630","messageId":"631","endLine":77,"endColumn":23},{"ruleId":"628","severity":1,"message":"669","line":80,"column":5,"nodeType":"630","messageId":"631","endLine":80,"endColumn":9},{"ruleId":"628","severity":1,"message":"670","line":1,"column":8,"nodeType":"630","messageId":"631","endLine":1,"endColumn":13},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"649","severity":1,"message":"671","line":82,"column":38,"nodeType":"651","messageId":"672","endLine":82,"endColumn":40},{"ruleId":"649","severity":1,"message":"673","line":87,"column":32,"nodeType":"651","messageId":"652","endLine":87,"endColumn":34},{"ruleId":"649","severity":1,"message":"671","line":103,"column":36,"nodeType":"651","messageId":"672","endLine":103,"endColumn":38},{"ruleId":"649","severity":1,"message":"673","line":108,"column":30,"nodeType":"651","messageId":"652","endLine":108,"endColumn":32},{"ruleId":"649","severity":1,"message":"650","line":152,"column":24,"nodeType":"651","messageId":"652","endLine":152,"endColumn":26},{"ruleId":"649","severity":1,"message":"650","line":177,"column":24,"nodeType":"651","messageId":"652","endLine":177,"endColumn":26},{"ruleId":"628","severity":1,"message":"674","line":191,"column":9,"nodeType":"630","messageId":"631","endLine":191,"endColumn":26},{"ruleId":"649","severity":1,"message":"650","line":202,"column":34,"nodeType":"651","messageId":"652","endLine":202,"endColumn":36},{"ruleId":"649","severity":1,"message":"673","line":203,"column":34,"nodeType":"651","messageId":"652","endLine":203,"endColumn":36},{"ruleId":"649","severity":1,"message":"650","line":219,"column":32,"nodeType":"651","messageId":"652","endLine":219,"endColumn":34},{"ruleId":"649","severity":1,"message":"673","line":220,"column":32,"nodeType":"651","messageId":"652","endLine":220,"endColumn":34},{"ruleId":"664","severity":1,"message":"675","line":232,"column":6,"nodeType":"666","endLine":232,"endColumn":8,"suggestions":"676"},{"ruleId":"628","severity":1,"message":"677","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":21},{"ruleId":"628","severity":1,"message":"678","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":19},{"ruleId":"664","severity":1,"message":"679","line":76,"column":27,"nodeType":"630","endLine":76,"endColumn":38},{"ruleId":"664","severity":1,"message":"679","line":97,"column":24,"nodeType":"630","endLine":97,"endColumn":35},{"ruleId":"664","severity":1,"message":"679","line":105,"column":23,"nodeType":"630","endLine":105,"endColumn":34},{"ruleId":"680","severity":1,"message":"681","line":194,"column":21,"nodeType":"645","endLine":197,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":220,"column":21,"nodeType":"645","endLine":223,"endColumn":22},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"682","line":20,"column":8,"nodeType":"630","messageId":"631","endLine":20,"endColumn":15},{"ruleId":"649","severity":1,"message":"650","line":148,"column":24,"nodeType":"651","messageId":"652","endLine":148,"endColumn":26},{"ruleId":"649","severity":1,"message":"671","line":175,"column":36,"nodeType":"651","messageId":"672","endLine":175,"endColumn":38},{"ruleId":"649","severity":1,"message":"673","line":180,"column":30,"nodeType":"651","messageId":"652","endLine":180,"endColumn":32},{"ruleId":"649","severity":1,"message":"673","line":201,"column":34,"nodeType":"651","messageId":"652","endLine":201,"endColumn":36},{"ruleId":"649","severity":1,"message":"650","line":219,"column":32,"nodeType":"651","messageId":"652","endLine":219,"endColumn":34},{"ruleId":"649","severity":1,"message":"673","line":220,"column":32,"nodeType":"651","messageId":"652","endLine":220,"endColumn":34},{"ruleId":"664","severity":1,"message":"683","line":232,"column":6,"nodeType":"666","endLine":232,"endColumn":8,"suggestions":"684"},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"685","line":12,"column":8,"nodeType":"630","messageId":"631","endLine":12,"endColumn":18},{"ruleId":"628","severity":1,"message":"659","line":48,"column":10,"nodeType":"630","messageId":"631","endLine":48,"endColumn":14},{"ruleId":"628","severity":1,"message":"660","line":49,"column":10,"nodeType":"630","messageId":"631","endLine":49,"endColumn":14},{"ruleId":"628","severity":1,"message":"661","line":49,"column":16,"nodeType":"630","messageId":"631","endLine":49,"endColumn":23},{"ruleId":"664","severity":1,"message":"665","line":62,"column":6,"nodeType":"666","endLine":62,"endColumn":12,"suggestions":"686"},{"ruleId":"628","severity":1,"message":"687","line":58,"column":10,"nodeType":"630","messageId":"631","endLine":58,"endColumn":23},{"ruleId":"628","severity":1,"message":"688","line":59,"column":10,"nodeType":"630","messageId":"631","endLine":59,"endColumn":21},{"ruleId":"628","severity":1,"message":"689","line":60,"column":10,"nodeType":"630","messageId":"631","endLine":60,"endColumn":27},{"ruleId":"628","severity":1,"message":"690","line":61,"column":10,"nodeType":"630","messageId":"631","endLine":61,"endColumn":29},{"ruleId":"664","severity":1,"message":"679","line":102,"column":25,"nodeType":"630","endLine":102,"endColumn":36},{"ruleId":"664","severity":1,"message":"679","line":112,"column":23,"nodeType":"630","endLine":112,"endColumn":34},{"ruleId":"664","severity":1,"message":"679","line":127,"column":29,"nodeType":"630","endLine":127,"endColumn":40},{"ruleId":"664","severity":1,"message":"679","line":142,"column":31,"nodeType":"630","endLine":142,"endColumn":42},{"ruleId":"680","severity":1,"message":"681","line":346,"column":25,"nodeType":"645","endLine":349,"endColumn":26},{"ruleId":"680","severity":1,"message":"681","line":372,"column":25,"nodeType":"645","endLine":375,"endColumn":26},{"ruleId":"680","severity":1,"message":"681","line":397,"column":25,"nodeType":"645","endLine":400,"endColumn":26},{"ruleId":"680","severity":1,"message":"681","line":423,"column":25,"nodeType":"645","endLine":426,"endColumn":26},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"691","line":2,"column":22,"nodeType":"630","messageId":"631","endLine":2,"endColumn":32},{"ruleId":"628","severity":1,"message":"659","line":47,"column":10,"nodeType":"630","messageId":"631","endLine":47,"endColumn":14},{"ruleId":"628","severity":1,"message":"660","line":48,"column":10,"nodeType":"630","messageId":"631","endLine":48,"endColumn":14},{"ruleId":"628","severity":1,"message":"661","line":48,"column":16,"nodeType":"630","messageId":"631","endLine":48,"endColumn":23},{"ruleId":"628","severity":1,"message":"662","line":50,"column":10,"nodeType":"630","messageId":"631","endLine":50,"endColumn":20},{"ruleId":"628","severity":1,"message":"663","line":50,"column":22,"nodeType":"630","messageId":"631","endLine":50,"endColumn":35},{"ruleId":"664","severity":1,"message":"665","line":71,"column":6,"nodeType":"666","endLine":71,"endColumn":12,"suggestions":"692"},{"ruleId":"628","severity":1,"message":"668","line":83,"column":9,"nodeType":"630","messageId":"631","endLine":83,"endColumn":23},{"ruleId":"628","severity":1,"message":"669","line":86,"column":5,"nodeType":"630","messageId":"631","endLine":86,"endColumn":9},{"ruleId":"628","severity":1,"message":"670","line":1,"column":8,"nodeType":"630","messageId":"631","endLine":1,"endColumn":13},{"ruleId":"628","severity":1,"message":"693","line":57,"column":7,"nodeType":"630","messageId":"631","endLine":57,"endColumn":14},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"694","line":19,"column":10,"nodeType":"630","messageId":"631","endLine":19,"endColumn":15},{"ruleId":"628","severity":1,"message":"695","line":19,"column":17,"nodeType":"630","messageId":"631","endLine":19,"endColumn":25},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"694","line":19,"column":10,"nodeType":"630","messageId":"631","endLine":19,"endColumn":15},{"ruleId":"628","severity":1,"message":"695","line":19,"column":17,"nodeType":"630","messageId":"631","endLine":19,"endColumn":25},{"ruleId":"628","severity":1,"message":"670","line":1,"column":8,"nodeType":"630","messageId":"631","endLine":1,"endColumn":13},{"ruleId":"628","severity":1,"message":"696","line":187,"column":3,"nodeType":"630","messageId":"631","endLine":187,"endColumn":14},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"697","line":4,"column":8,"nodeType":"630","messageId":"631","endLine":4,"endColumn":16},{"ruleId":"628","severity":1,"message":"698","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":20},{"ruleId":"628","severity":1,"message":"699","line":6,"column":8,"nodeType":"630","messageId":"631","endLine":6,"endColumn":20},{"ruleId":"628","severity":1,"message":"700","line":7,"column":8,"nodeType":"630","messageId":"631","endLine":7,"endColumn":16},{"ruleId":"628","severity":1,"message":"701","line":11,"column":8,"nodeType":"630","messageId":"631","endLine":11,"endColumn":19},{"ruleId":"628","severity":1,"message":"702","line":12,"column":8,"nodeType":"630","messageId":"631","endLine":12,"endColumn":17},{"ruleId":"628","severity":1,"message":"694","line":24,"column":10,"nodeType":"630","messageId":"631","endLine":24,"endColumn":15},{"ruleId":"628","severity":1,"message":"695","line":24,"column":17,"nodeType":"630","messageId":"631","endLine":24,"endColumn":25},{"ruleId":"628","severity":1,"message":"703","line":16,"column":8,"nodeType":"630","messageId":"631","endLine":16,"endColumn":22},{"ruleId":"628","severity":1,"message":"704","line":17,"column":8,"nodeType":"630","messageId":"631","endLine":17,"endColumn":20},{"ruleId":"628","severity":1,"message":"705","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":23},{"ruleId":"628","severity":1,"message":"706","line":20,"column":8,"nodeType":"630","messageId":"631","endLine":20,"endColumn":24},{"ruleId":"628","severity":1,"message":"670","line":1,"column":8,"nodeType":"630","messageId":"631","endLine":1,"endColumn":13},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":43,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":43,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":43,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":53,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":44,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":53,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":59,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":59,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":59,"endColumn":2},{"ruleId":"707","severity":1,"message":"708","line":1,"column":1,"nodeType":"709","endLine":59,"endColumn":2},{"ruleId":"628","severity":1,"message":"677","line":9,"column":8,"nodeType":"630","messageId":"631","endLine":9,"endColumn":21},{"ruleId":"628","severity":1,"message":"710","line":11,"column":8,"nodeType":"630","messageId":"631","endLine":11,"endColumn":25},{"ruleId":"628","severity":1,"message":"711","line":63,"column":10,"nodeType":"630","messageId":"631","endLine":63,"endColumn":23},{"ruleId":"628","severity":1,"message":"687","line":66,"column":10,"nodeType":"630","messageId":"631","endLine":66,"endColumn":23},{"ruleId":"628","severity":1,"message":"688","line":67,"column":10,"nodeType":"630","messageId":"631","endLine":67,"endColumn":21},{"ruleId":"664","severity":1,"message":"679","line":72,"column":25,"nodeType":"630","endLine":72,"endColumn":36},{"ruleId":"664","severity":1,"message":"679","line":111,"column":25,"nodeType":"630","endLine":111,"endColumn":36},{"ruleId":"664","severity":1,"message":"679","line":123,"column":23,"nodeType":"630","endLine":123,"endColumn":34},{"ruleId":"680","severity":1,"message":"681","line":331,"column":23,"nodeType":"645","endLine":334,"endColumn":24},{"ruleId":"680","severity":1,"message":"681","line":355,"column":23,"nodeType":"645","endLine":358,"endColumn":24},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"694","line":19,"column":10,"nodeType":"630","messageId":"631","endLine":19,"endColumn":15},{"ruleId":"628","severity":1,"message":"695","line":19,"column":17,"nodeType":"630","messageId":"631","endLine":19,"endColumn":25},{"ruleId":"628","severity":1,"message":"629","line":1,"column":35,"nodeType":"630","messageId":"631","endLine":1,"endColumn":44},{"ruleId":"628","severity":1,"message":"658","line":1,"column":46,"nodeType":"630","messageId":"631","endLine":1,"endColumn":57},{"ruleId":"628","severity":1,"message":"712","line":3,"column":8,"nodeType":"630","messageId":"631","endLine":3,"endColumn":23},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"713","line":6,"column":8,"nodeType":"630","messageId":"631","endLine":6,"endColumn":28},{"ruleId":"628","severity":1,"message":"677","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":21},{"ruleId":"628","severity":1,"message":"710","line":12,"column":8,"nodeType":"630","messageId":"631","endLine":12,"endColumn":25},{"ruleId":"628","severity":1,"message":"682","line":20,"column":8,"nodeType":"630","messageId":"631","endLine":20,"endColumn":15},{"ruleId":"628","severity":1,"message":"714","line":76,"column":10,"nodeType":"630","messageId":"631","endLine":76,"endColumn":22},{"ruleId":"628","severity":1,"message":"715","line":116,"column":9,"nodeType":"630","messageId":"631","endLine":116,"endColumn":30},{"ruleId":"628","severity":1,"message":"716","line":126,"column":9,"nodeType":"630","messageId":"631","endLine":126,"endColumn":23},{"ruleId":"628","severity":1,"message":"717","line":149,"column":9,"nodeType":"630","messageId":"631","endLine":149,"endColumn":31},{"ruleId":"649","severity":1,"message":"650","line":160,"column":24,"nodeType":"651","messageId":"652","endLine":160,"endColumn":26},{"ruleId":"628","severity":1,"message":"718","line":184,"column":9,"nodeType":"630","messageId":"631","endLine":184,"endColumn":25},{"ruleId":"649","severity":1,"message":"671","line":187,"column":36,"nodeType":"651","messageId":"672","endLine":187,"endColumn":38},{"ruleId":"649","severity":1,"message":"673","line":192,"column":30,"nodeType":"651","messageId":"652","endLine":192,"endColumn":32},{"ruleId":"649","severity":1,"message":"650","line":213,"column":36,"nodeType":"651","messageId":"652","endLine":213,"endColumn":38},{"ruleId":"649","severity":1,"message":"673","line":214,"column":36,"nodeType":"651","messageId":"652","endLine":214,"endColumn":38},{"ruleId":"649","severity":1,"message":"650","line":232,"column":39,"nodeType":"651","messageId":"652","endLine":232,"endColumn":41},{"ruleId":"649","severity":1,"message":"673","line":233,"column":32,"nodeType":"651","messageId":"652","endLine":233,"endColumn":34},{"ruleId":"664","severity":1,"message":"719","line":246,"column":6,"nodeType":"666","endLine":246,"endColumn":8,"suggestions":"720"},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"659","line":41,"column":10,"nodeType":"630","messageId":"631","endLine":41,"endColumn":14},{"ruleId":"628","severity":1,"message":"648","line":55,"column":5,"nodeType":"630","messageId":"631","endLine":55,"endColumn":8},{"ruleId":"664","severity":1,"message":"665","line":61,"column":6,"nodeType":"666","endLine":61,"endColumn":12,"suggestions":"721"},{"ruleId":"628","severity":1,"message":"722","line":10,"column":3,"nodeType":"630","messageId":"631","endLine":10,"endColumn":13},{"ruleId":"628","severity":1,"message":"699","line":14,"column":8,"nodeType":"630","messageId":"631","endLine":14,"endColumn":20},{"ruleId":"628","severity":1,"message":"682","line":19,"column":8,"nodeType":"630","messageId":"631","endLine":19,"endColumn":15},{"ruleId":"628","severity":1,"message":"648","line":54,"column":5,"nodeType":"630","messageId":"631","endLine":54,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":61,"column":5,"nodeType":"630","messageId":"631","endLine":61,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":90,"column":5,"nodeType":"630","messageId":"631","endLine":90,"endColumn":8},{"ruleId":"628","severity":1,"message":"723","line":12,"column":3,"nodeType":"630","messageId":"631","endLine":12,"endColumn":14},{"ruleId":"628","severity":1,"message":"699","line":16,"column":8,"nodeType":"630","messageId":"631","endLine":16,"endColumn":20},{"ruleId":"628","severity":1,"message":"682","line":21,"column":8,"nodeType":"630","messageId":"631","endLine":21,"endColumn":15},{"ruleId":"628","severity":1,"message":"648","line":63,"column":5,"nodeType":"630","messageId":"631","endLine":63,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":99,"column":5,"nodeType":"630","messageId":"631","endLine":99,"endColumn":8},{"ruleId":"628","severity":1,"message":"724","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":45},{"ruleId":"628","severity":1,"message":"725","line":5,"column":3,"nodeType":"630","messageId":"631","endLine":5,"endColumn":15},{"ruleId":"628","severity":1,"message":"726","line":13,"column":8,"nodeType":"630","messageId":"631","endLine":13,"endColumn":21},{"ruleId":"628","severity":1,"message":"669","line":25,"column":10,"nodeType":"630","messageId":"631","endLine":25,"endColumn":14},{"ruleId":"628","severity":1,"message":"727","line":25,"column":16,"nodeType":"630","messageId":"631","endLine":25,"endColumn":23},{"ruleId":"649","severity":1,"message":"650","line":82,"column":34,"nodeType":"651","messageId":"652","endLine":82,"endColumn":36},{"ruleId":"649","severity":1,"message":"650","line":96,"column":34,"nodeType":"651","messageId":"652","endLine":96,"endColumn":36},{"ruleId":"649","severity":1,"message":"650","line":117,"column":34,"nodeType":"651","messageId":"652","endLine":117,"endColumn":36},{"ruleId":"649","severity":1,"message":"650","line":133,"column":26,"nodeType":"651","messageId":"652","endLine":133,"endColumn":28},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"664","severity":1,"message":"728","line":90,"column":6,"nodeType":"666","endLine":90,"endColumn":13,"suggestions":"729"},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":14},{"ruleId":"628","severity":1,"message":"699","line":7,"column":8,"nodeType":"630","messageId":"631","endLine":7,"endColumn":20},{"ruleId":"628","severity":1,"message":"697","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":16},{"ruleId":"628","severity":1,"message":"731","line":9,"column":8,"nodeType":"630","messageId":"631","endLine":9,"endColumn":12},{"ruleId":"628","severity":1,"message":"682","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":15},{"ruleId":"628","severity":1,"message":"732","line":17,"column":8,"nodeType":"630","messageId":"631","endLine":17,"endColumn":22},{"ruleId":"628","severity":1,"message":"733","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":14},{"ruleId":"628","severity":1,"message":"688","line":42,"column":10,"nodeType":"630","messageId":"631","endLine":42,"endColumn":21},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"694","line":23,"column":10,"nodeType":"630","messageId":"631","endLine":23,"endColumn":15},{"ruleId":"628","severity":1,"message":"695","line":23,"column":17,"nodeType":"630","messageId":"631","endLine":23,"endColumn":25},{"ruleId":"649","severity":1,"message":"650","line":44,"column":24,"nodeType":"651","messageId":"652","endLine":44,"endColumn":26},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":14},{"ruleId":"628","severity":1,"message":"699","line":7,"column":8,"nodeType":"630","messageId":"631","endLine":7,"endColumn":20},{"ruleId":"628","severity":1,"message":"697","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":16},{"ruleId":"628","severity":1,"message":"731","line":9,"column":8,"nodeType":"630","messageId":"631","endLine":9,"endColumn":12},{"ruleId":"628","severity":1,"message":"682","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":15},{"ruleId":"628","severity":1,"message":"732","line":17,"column":8,"nodeType":"630","messageId":"631","endLine":17,"endColumn":22},{"ruleId":"628","severity":1,"message":"733","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":14},{"ruleId":"628","severity":1,"message":"688","line":42,"column":10,"nodeType":"630","messageId":"631","endLine":42,"endColumn":21},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":14},{"ruleId":"628","severity":1,"message":"699","line":7,"column":8,"nodeType":"630","messageId":"631","endLine":7,"endColumn":20},{"ruleId":"628","severity":1,"message":"697","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":16},{"ruleId":"628","severity":1,"message":"731","line":9,"column":8,"nodeType":"630","messageId":"631","endLine":9,"endColumn":12},{"ruleId":"628","severity":1,"message":"682","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":15},{"ruleId":"628","severity":1,"message":"732","line":17,"column":8,"nodeType":"630","messageId":"631","endLine":17,"endColumn":22},{"ruleId":"628","severity":1,"message":"733","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":14},{"ruleId":"628","severity":1,"message":"688","line":43,"column":10,"nodeType":"630","messageId":"631","endLine":43,"endColumn":21},{"ruleId":"624","replacedBy":"734"},{"ruleId":"626","replacedBy":"735"},{"ruleId":"628","severity":1,"message":"736","line":26,"column":8,"nodeType":"630","messageId":"631","endLine":26,"endColumn":20},{"ruleId":"628","severity":1,"message":"737","line":44,"column":10,"nodeType":"630","messageId":"631","endLine":44,"endColumn":19},{"ruleId":"628","severity":1,"message":"648","line":39,"column":5,"nodeType":"630","messageId":"631","endLine":39,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":72,"column":5,"nodeType":"630","messageId":"631","endLine":72,"endColumn":8},{"ruleId":"628","severity":1,"message":"699","line":13,"column":8,"nodeType":"630","messageId":"631","endLine":13,"endColumn":20},{"ruleId":"628","severity":1,"message":"682","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":15},{"ruleId":"628","severity":1,"message":"648","line":59,"column":5,"nodeType":"630","messageId":"631","endLine":59,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":92,"column":5,"nodeType":"630","messageId":"631","endLine":92,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":40,"column":5,"nodeType":"630","messageId":"631","endLine":40,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":73,"column":5,"nodeType":"630","messageId":"631","endLine":73,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":40,"column":5,"nodeType":"630","messageId":"631","endLine":40,"endColumn":8},{"ruleId":"628","severity":1,"message":"648","line":73,"column":5,"nodeType":"630","messageId":"631","endLine":73,"endColumn":8},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":14},{"ruleId":"628","severity":1,"message":"699","line":7,"column":8,"nodeType":"630","messageId":"631","endLine":7,"endColumn":20},{"ruleId":"628","severity":1,"message":"697","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":16},{"ruleId":"628","severity":1,"message":"731","line":9,"column":8,"nodeType":"630","messageId":"631","endLine":9,"endColumn":12},{"ruleId":"628","severity":1,"message":"682","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":15},{"ruleId":"628","severity":1,"message":"732","line":17,"column":8,"nodeType":"630","messageId":"631","endLine":17,"endColumn":22},{"ruleId":"628","severity":1,"message":"733","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":14},{"ruleId":"628","severity":1,"message":"738","line":42,"column":10,"nodeType":"630","messageId":"631","endLine":42,"endColumn":22},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"694","line":19,"column":10,"nodeType":"630","messageId":"631","endLine":19,"endColumn":15},{"ruleId":"628","severity":1,"message":"695","line":19,"column":17,"nodeType":"630","messageId":"631","endLine":19,"endColumn":25},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"664","severity":1,"message":"728","line":92,"column":6,"nodeType":"666","endLine":92,"endColumn":13,"suggestions":"739"},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"664","severity":1,"message":"728","line":92,"column":6,"nodeType":"666","endLine":92,"endColumn":13,"suggestions":"740"},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":14},{"ruleId":"628","severity":1,"message":"699","line":7,"column":8,"nodeType":"630","messageId":"631","endLine":7,"endColumn":20},{"ruleId":"628","severity":1,"message":"697","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":16},{"ruleId":"628","severity":1,"message":"731","line":9,"column":8,"nodeType":"630","messageId":"631","endLine":9,"endColumn":12},{"ruleId":"628","severity":1,"message":"682","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":15},{"ruleId":"628","severity":1,"message":"732","line":17,"column":8,"nodeType":"630","messageId":"631","endLine":17,"endColumn":22},{"ruleId":"628","severity":1,"message":"733","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":14},{"ruleId":"628","severity":1,"message":"687","line":42,"column":10,"nodeType":"630","messageId":"631","endLine":42,"endColumn":23},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"694","line":19,"column":10,"nodeType":"630","messageId":"631","endLine":19,"endColumn":15},{"ruleId":"628","severity":1,"message":"695","line":19,"column":17,"nodeType":"630","messageId":"631","endLine":19,"endColumn":25},{"ruleId":"628","severity":1,"message":"629","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"699","line":4,"column":8,"nodeType":"630","messageId":"631","endLine":4,"endColumn":20},{"ruleId":"628","severity":1,"message":"741","line":21,"column":18,"nodeType":"630","messageId":"631","endLine":21,"endColumn":27},{"ruleId":"628","severity":1,"message":"742","line":23,"column":10,"nodeType":"630","messageId":"631","endLine":23,"endColumn":15},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":6,"column":8,"nodeType":"630","messageId":"631","endLine":6,"endColumn":14},{"ruleId":"628","severity":1,"message":"699","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":20},{"ruleId":"628","severity":1,"message":"697","line":9,"column":8,"nodeType":"630","messageId":"631","endLine":9,"endColumn":16},{"ruleId":"628","severity":1,"message":"731","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":12},{"ruleId":"628","severity":1,"message":"682","line":11,"column":8,"nodeType":"630","messageId":"631","endLine":11,"endColumn":15},{"ruleId":"628","severity":1,"message":"732","line":18,"column":8,"nodeType":"630","messageId":"631","endLine":18,"endColumn":22},{"ruleId":"628","severity":1,"message":"733","line":19,"column":8,"nodeType":"630","messageId":"631","endLine":19,"endColumn":14},{"ruleId":"628","severity":1,"message":"688","line":50,"column":10,"nodeType":"630","messageId":"631","endLine":50,"endColumn":21},{"ruleId":"628","severity":1,"message":"743","line":4,"column":26,"nodeType":"630","messageId":"631","endLine":4,"endColumn":30},{"ruleId":"628","severity":1,"message":"744","line":4,"column":32,"nodeType":"630","messageId":"631","endLine":4,"endColumn":35},{"ruleId":"628","severity":1,"message":"745","line":4,"column":37,"nodeType":"630","messageId":"631","endLine":4,"endColumn":45},{"ruleId":"628","severity":1,"message":"746","line":4,"column":47,"nodeType":"630","messageId":"631","endLine":4,"endColumn":55},{"ruleId":"628","severity":1,"message":"747","line":11,"column":9,"nodeType":"630","messageId":"631","endLine":11,"endColumn":12},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":3,"column":8,"nodeType":"630","messageId":"631","endLine":3,"endColumn":14},{"ruleId":"628","severity":1,"message":"745","line":13,"column":26,"nodeType":"630","messageId":"631","endLine":13,"endColumn":34},{"ruleId":"628","severity":1,"message":"746","line":13,"column":36,"nodeType":"630","messageId":"631","endLine":13,"endColumn":44},{"ruleId":"649","severity":1,"message":"650","line":61,"column":31,"nodeType":"651","messageId":"652","endLine":61,"endColumn":33},{"ruleId":"649","severity":1,"message":"650","line":62,"column":26,"nodeType":"651","messageId":"652","endLine":62,"endColumn":28},{"ruleId":"649","severity":1,"message":"650","line":69,"column":29,"nodeType":"651","messageId":"652","endLine":69,"endColumn":31},{"ruleId":"649","severity":1,"message":"650","line":70,"column":24,"nodeType":"651","messageId":"652","endLine":70,"endColumn":26},{"ruleId":"664","severity":1,"message":"748","line":81,"column":6,"nodeType":"666","endLine":81,"endColumn":8,"suggestions":"749"},{"ruleId":"680","severity":1,"message":"681","line":179,"column":41,"nodeType":"645","endLine":179,"endColumn":44},{"ruleId":"628","severity":1,"message":"658","line":1,"column":38,"nodeType":"630","messageId":"631","endLine":1,"endColumn":49},{"ruleId":"628","severity":1,"message":"730","line":3,"column":8,"nodeType":"630","messageId":"631","endLine":3,"endColumn":14},{"ruleId":"628","severity":1,"message":"745","line":13,"column":26,"nodeType":"630","messageId":"631","endLine":13,"endColumn":34},{"ruleId":"628","severity":1,"message":"746","line":13,"column":36,"nodeType":"630","messageId":"631","endLine":13,"endColumn":44},{"ruleId":"628","severity":1,"message":"750","line":14,"column":8,"nodeType":"630","messageId":"631","endLine":14,"endColumn":24},{"ruleId":"628","severity":1,"message":"751","line":55,"column":10,"nodeType":"630","messageId":"631","endLine":55,"endColumn":22},{"ruleId":"649","severity":1,"message":"650","line":69,"column":29,"nodeType":"651","messageId":"652","endLine":69,"endColumn":31},{"ruleId":"649","severity":1,"message":"650","line":70,"column":24,"nodeType":"651","messageId":"652","endLine":70,"endColumn":26},{"ruleId":"664","severity":1,"message":"752","line":81,"column":6,"nodeType":"666","endLine":81,"endColumn":8,"suggestions":"753"},"no-native-reassign",["754"],"no-negated-in-lhs",["755"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getArtists' is defined but never used.","'getSongs' is defined but never used.","'getUsers' is defined but never used.","'getAlbums' is defined but never used.","'setArtists' is assigned a value but never used.","'setSongs' is assigned a value but never used.","'setAlbums' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'withStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PlayArrowIcon' is defined but never used.","'setTotalDownloads' is assigned a value but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ArrowDropUpIcon' is defined but never used.","'Chart' is defined but never used.","'FaceIcon' is defined but never used.","'artists' is assigned a value but never used.","'fetchArtists' is assigned a value but never used.","'useCallback' is defined but never used.","'keys' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'artistName' is assigned a value but never used.","'setArtistName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'settingKeys'. Either include it or remove the dependency array.","ArrayExpression",["756"],"'findArtistName' is assigned a value but never used.","'name' is assigned a value but never used.","'React' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.filter() expects a return value from arrow function.","'handleDeleteAlbum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.albums' and 'state.songs'. Either include them or remove the dependency array.",["757"],"'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Divider' is defined but never used.","React Hook useEffect has missing dependencies: 'state.artists' and 'state.songs'. Either include them or remove the dependency array.",["758"],"'Editartist' is defined but never used.",["759"],"'selectArtists' is assigned a value but never used.","'selectSongs' is assigned a value but never used.","'selectOtherAlbums' is assigned a value but never used.","'selectRelatedAlbums' is assigned a value but never used.","'findArtist' is defined but never used.",["760"],"'artists' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'Recommended' is assigned a value but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'TrendingUpIcon' is defined but never used.","'WhatshotIcon' is defined but never used.","'InsertChartIcon' is defined but never used.","'PlaylistPlayIcon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'DialogContentText' is defined but never used.","'fetchedAlbums' is assigned a value but never used.","'CloudUploadIcon' is defined but never used.","'Selectsongsforartist' is defined but never used.","'fetchedSongs' is assigned a value but never used.","'handleAddRelatedSongs' is assigned a value but never used.","'handleAddSongs' is assigned a value but never used.","'handleSelectedAddSongs' is assigned a value but never used.","'deleteArtistSong' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.artists' and 'state.relatedSongs'. Either include them or remove the dependency array.",["761"],["762"],"'addPopular' is defined but never used.","'addTrending' is defined but never used.","'useMemo' is defined but never used.","'addTopcharts' is defined but never used.","'Trendingtable' is defined but never used.","'setName' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'handleNewSort' and 'name'. Either include them or remove the dependency array. If 'handleNewSort' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["763"],"'Button' is defined but never used.","'List' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.",["754"],["755"],"'HomeWorkIcon' is defined but never used.","'fetchDone' is assigned a value but never used.","'selectAlbums' is assigned a value but never used.",["764"],["765"],"'setActive' is assigned a value but never used.","'color' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Dropdown' is defined but never used.","'Carousel' is defined but never used.","'_id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'albums', 'data.albums', 'data.songs', and 'songs'. Either include them or remove the dependency array.",["766"],"'PerfectScrollbar' is defined but never used.","'filterAlbums' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.songs' and 'songs'. Either include them or remove the dependency array.",["767"],"no-global-assign","no-unsafe-negation",{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"772","fix":"773"},{"desc":"768","fix":"774"},{"desc":"768","fix":"775"},{"desc":"776","fix":"777"},{"desc":"768","fix":"778"},{"desc":"779","fix":"780"},{"desc":"779","fix":"781"},{"desc":"779","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},"Update the dependencies array to be: [data, settingKeys]",{"range":"787","text":"788"},"Update the dependencies array to be: [state.albums, state.songs]",{"range":"789","text":"790"},"Update the dependencies array to be: [state.artists, state.songs]",{"range":"791","text":"792"},{"range":"793","text":"788"},{"range":"794","text":"788"},"Update the dependencies array to be: [state.artists, state.relatedSongs]",{"range":"795","text":"796"},{"range":"797","text":"788"},"Update the dependencies array to be: [handleNewSort, name, state]",{"range":"798","text":"799"},{"range":"800","text":"799"},{"range":"801","text":"799"},"Update the dependencies array to be: [albums, data.albums, data.songs, songs]",{"range":"802","text":"803"},"Update the dependencies array to be: [data.songs, songs]",{"range":"804","text":"805"},[1873,1879],"[data, settingKeys]",[6032,6034],"[state.albums, state.songs]",[6136,6138],"[state.artists, state.songs]",[1686,1692],[1987,1993],[6564,6566],"[state.artists, state.relatedSongs]",[1687,1693],[2793,2800],"[handleNewSort, name, state]",[2834,2841],[2838,2845],[2072,2074],"[albums, data.albums, data.songs, songs]",[2092,2094],"[data.songs, songs]"]