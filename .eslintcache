[{"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\index.js":"1","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\reportWebVitals.js":"2","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\App.js":"3","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Sidedrawer.js":"4","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\User.js":"5","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Songs.js":"6","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Signin.js":"7","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Artist.js":"8","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Albums.js":"9","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Songstable.js":"10","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\usersactions.js":"11","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editartist.js":"12","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addartist.js":"13","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editalbum.js":"14","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Artiststable.js":"15","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addalbum.js":"16","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Albumstable.js":"17","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\artistsactions.js":"18","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumforartist.js":"19","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsforartist.js":"20","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\songsactions.js":"21","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforalbum.js":"22","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\AdminHome.js":"23","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\albumactions.js":"24","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-lead.js":"25","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-vendor.js":"26","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-invoice.js":"27","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-processed.js":"28","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-spent.js":"29","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-profit-processed.js":"30","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-4.js":"31","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-1.js":"32","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-3.js":"33","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-2.js":"34","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addsong.js":"35","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforsong.js":"36","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Upload.js":"37","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editsong.js":"38","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Userstable.js":"39","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Adminpopular.js":"40","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintrending.js":"41","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintopcharts.js":"42","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Trendingtable.js":"43","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtrending.js":"44","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsfortrending.js":"45","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addpopular.js":"46","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addchart.js":"47","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Managehomepage.js":"48","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Active.js":"49","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Recommended.js":"50","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Bongplaylist.js":"51","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topartists.js":"52","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topalbums.js":"53","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopalbums.js":"54","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumfortopalbums.js":"55","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topalbumtable.js":"56","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topartiststable.js":"57","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopartists.js":"58","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistsfortopartists.js":"59","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Tabsvertical.js":"60","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addnewchart.js":"61","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Imageupload.js":"62"},{"size":500,"mtime":1607197583990,"results":"63","hashOfConfig":"64"},{"size":362,"mtime":499162500000,"results":"65","hashOfConfig":"64"},{"size":4799,"mtime":1609752018286,"results":"66","hashOfConfig":"64"},{"size":8544,"mtime":1609850255814,"results":"67","hashOfConfig":"64"},{"size":3232,"mtime":1608955716873,"results":"68","hashOfConfig":"64"},{"size":6215,"mtime":1609303588166,"results":"69","hashOfConfig":"64"},{"size":4037,"mtime":1607197855005,"results":"70","hashOfConfig":"64"},{"size":6676,"mtime":1609300941351,"results":"71","hashOfConfig":"64"},{"size":6661,"mtime":1609301379091,"results":"72","hashOfConfig":"64"},{"size":4476,"mtime":1609744746987,"results":"73","hashOfConfig":"64"},{"size":696,"mtime":1609175814396,"results":"74","hashOfConfig":"64"},{"size":10993,"mtime":1609152277527,"results":"75","hashOfConfig":"64"},{"size":5307,"mtime":1608639342909,"results":"76","hashOfConfig":"64"},{"size":10577,"mtime":1608575506800,"results":"77","hashOfConfig":"64"},{"size":3743,"mtime":1608576751625,"results":"78","hashOfConfig":"64"},{"size":5242,"mtime":1608955537233,"results":"79","hashOfConfig":"64"},{"size":4311,"mtime":1608578168842,"results":"80","hashOfConfig":"64"},{"size":1496,"mtime":1609300998518,"results":"81","hashOfConfig":"64"},{"size":2164,"mtime":1607430265038,"results":"82","hashOfConfig":"64"},{"size":2218,"mtime":1608576564825,"results":"83","hashOfConfig":"64"},{"size":6644,"mtime":1609865991138,"results":"84","hashOfConfig":"64"},{"size":3339,"mtime":1608574366031,"results":"85","hashOfConfig":"64"},{"size":16200,"mtime":1609750069060,"results":"86","hashOfConfig":"64"},{"size":1350,"mtime":1609175903518,"results":"87","hashOfConfig":"64"},{"size":940,"mtime":1608642855198,"results":"88","hashOfConfig":"64"},{"size":942,"mtime":1608642855294,"results":"89","hashOfConfig":"64"},{"size":940,"mtime":1608642855371,"results":"90","hashOfConfig":"64"},{"size":1211,"mtime":1608651020155,"results":"91","hashOfConfig":"64"},{"size":993,"mtime":1608651020990,"results":"92","hashOfConfig":"64"},{"size":1211,"mtime":1608651021437,"results":"93","hashOfConfig":"64"},{"size":1303,"mtime":1608656995912,"results":"94","hashOfConfig":"64"},{"size":1305,"mtime":1608656995101,"results":"95","hashOfConfig":"64"},{"size":1303,"mtime":1608656995559,"results":"96","hashOfConfig":"64"},{"size":1302,"mtime":1608656995429,"results":"97","hashOfConfig":"64"},{"size":5031,"mtime":1608887393953,"results":"98","hashOfConfig":"64"},{"size":2224,"mtime":1608885553040,"results":"99","hashOfConfig":"64"},{"size":942,"mtime":1608887309433,"results":"100","hashOfConfig":"64"},{"size":8412,"mtime":1609150506704,"results":"101","hashOfConfig":"64"},{"size":3362,"mtime":1609301118636,"results":"102","hashOfConfig":"64"},{"size":5002,"mtime":1609759702288,"results":"103","hashOfConfig":"64"},{"size":5292,"mtime":1609848981341,"results":"104","hashOfConfig":"64"},{"size":7357,"mtime":1609863355124,"results":"105","hashOfConfig":"64"},{"size":4626,"mtime":1609849138338,"results":"106","hashOfConfig":"64"},{"size":3583,"mtime":1609072223472,"results":"107","hashOfConfig":"64"},{"size":2707,"mtime":1608982160791,"results":"108","hashOfConfig":"64"},{"size":3584,"mtime":1609087617861,"results":"109","hashOfConfig":"64"},{"size":3616,"mtime":1609133461511,"results":"110","hashOfConfig":"64"},{"size":5692,"mtime":1609759443605,"results":"111","hashOfConfig":"64"},{"size":2137,"mtime":1609578341368,"results":"112","hashOfConfig":"64"},{"size":5260,"mtime":1609760443721,"results":"113","hashOfConfig":"64"},{"size":5287,"mtime":1609763472484,"results":"114","hashOfConfig":"64"},{"size":5290,"mtime":1609768706063,"results":"115","hashOfConfig":"64"},{"size":5263,"mtime":1609767810576,"results":"116","hashOfConfig":"64"},{"size":3618,"mtime":1609768368467,"results":"117","hashOfConfig":"64"},{"size":2589,"mtime":1609768487166,"results":"118","hashOfConfig":"64"},{"size":4667,"mtime":1609767752448,"results":"119","hashOfConfig":"64"},{"size":4673,"mtime":1609768295802,"results":"120","hashOfConfig":"64"},{"size":3649,"mtime":1609768730067,"results":"121","hashOfConfig":"64"},{"size":2592,"mtime":1609768550259,"results":"122","hashOfConfig":"64"},{"size":4352,"mtime":1609865593782,"results":"123","hashOfConfig":"64"},{"size":4212,"mtime":1609863493345,"results":"124","hashOfConfig":"64"},{"size":2257,"mtime":1609863428487,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"6j67uu",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"128"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"128"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"128"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"128"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"128"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"128"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"128"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"128"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"128"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"128"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"128"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"128"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"128"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"128"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"128"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"128"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\index.js",[],["298","299"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\reportWebVitals.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\App.js",["300","301","302","303","304","305","306","307","308","309","310"],"import React, { useState, useEffect } from \"react\";\nimport { getArtists } from \"./Pagesactions/artistsactions\";\nimport { getSongs } from \"./Pagesactions/songsactions\";\nimport { getUsers } from \"./Pagesactions/usersactions\";\nimport { getAlbums } from \"./Pagesactions/albumactions\";\nimport Sidedrawer from \"./Components/Sidedrawer\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AdminHome from \"./Pages/AdminHome\";\nimport User from \"./Pages/User\";\nimport Artist from \"./Pages/Artist\";\nimport Songs from \"./Pages/Songs\";\nimport Albums from \"./Pages/Albums\";\nimport Signin from \"./Pages/Signin\";\nimport Admintrending from \"./Pages/Admintrending\";\nimport Adminpopular from \"./Pages/Adminpopular\";\nimport Admintopcharts from \"./Pages/Admintopcharts\";\nimport Managehomepage from \"./Pages/Managehomepage\";\nimport Bongplaylist from \"./Pages/Bongplaylist\";\nimport Topartists from \"./Pages/Topartists\";\nimport Topalbums from \"./Pages/Topalbums\";\nimport Recommended from \"./Pages/Recommended\";\nimport \"./App.css\";\n\nexport const GlobalData = React.createContext();\n\nfunction App() {\n  const [artists, setArtists] = useState();\n  const [songs, setSongs] = useState();\n  const [albums, setAlbums] = useState();\n  const [users, setUsers] = useState();\n\n  const [data, setData] = useState({\n    users: [],\n    artists: [],\n    songs: [],\n    albums: [],\n  });\n\n  // useEffect(() => {\n  //   const fetchAlbums = async () => {\n  //     let allAlbums;\n  //     allAlbums = await getAlbums();\n  //     console.log(allAlbums);\n  //     setAlbums(allAlbums);\n  //     setData({\n  //       ...data,\n  //       albums: allAlbums,\n  //     });\n  //   };\n\n  //   const fetchSongs = async () => {\n  //     let allSongs;\n  //     allSongs = await getSongs();\n  //     console.log(allSongs);\n  //     setSongs(allSongs);\n  //     setData({\n  //       ...data,\n  //       songs: allSongs,\n  //     });\n  //   };\n\n  //   const fetchArtists = async () => {\n  //     let allArtists;\n  //     allArtists = await getArtists();\n  //     console.log(allArtists);\n  //     setArtists(allArtists);\n  //     setData({\n  //       ...data,\n  //       artists: allArtists,\n  //     });\n  //   };\n\n  //   const fetchUsers = async () => {\n  //     let allUsers;\n  //     allUsers = await getUsers();\n  //     console.log(allUsers);\n  //     setUsers(allUsers);\n  //     setData({\n  //       ...data,\n  //       users: allUsers,\n  //     });\n  //   };\n\n  //   fetchUsers();\n\n  //   fetchArtists();\n  //   fetchAlbums();\n  //   fetchSongs();\n  // }, []);\n  return (\n    <GlobalData.Provider value={(artists, songs, albums, users)}>\n      <div className=\"App\">\n        {console.log(users, artists, songs, albums)}\n\n        <Router>\n          <Sidedrawer />\n          <Switch>\n            <Route exact path=\"/\" render={(routeProps) => <AdminHome />} />\n            <Route exact path=\"/signin\" render={(routeProps) => <Signin />} />\n\n            <Route\n              exact\n              path=\"/admin/users\"\n              render={(routeProps) => <User />}\n            />\n            <Route\n              exact\n              path=\"/admin/albums\"\n              render={(routeProps) => <Albums />}\n            />\n            <Route\n              exact\n              path=\"/admin/artist\"\n              render={(routeProps) => <Artist />}\n            />\n            <Route\n              exact\n              path=\"/admin/songs\"\n              render={(routeProps) => <Songs />}\n            />\n            <Route\n              exact\n              path=\"/admin/trending\"\n              render={(routeProps) => <Admintrending />}\n            />\n            <Route\n              exact\n              path=\"/admin/popular\"\n              render={(routeProps) => <Adminpopular />}\n            />\n            <Route\n              exact\n              path=\"/admin/charts\"\n              render={(routeProps) => <Admintopcharts />}\n            />\n            <Route\n              exact\n              path=\"/admin/managehomepage\"\n              render={(routeProps) => <Managehomepage />}\n            />\n            <Route\n              exact\n              path=\"/admin/bongplaylist\"\n              render={(routeProps) => <Bongplaylist />}\n            />\n            <Route\n              exact\n              path=\"/admin/topalbums\"\n              render={(routeProps) => <Topalbums />}\n            />\n            <Route\n              exact\n              path=\"/admin/topartists\"\n              render={(routeProps) => <Topartists />}\n            />\n            <Route\n              exact\n              path=\"/admin/recommended\"\n              render={(routeProps) => <Recommended />}\n            />\n          </Switch>\n        </Router>\n      </div>\n    </GlobalData.Provider>\n  );\n}\n\nexport default App;\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Sidedrawer.js",["311","312"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\User.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Songs.js",["313","314","315","316","317"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getSongs,\r\n  addSongs,\r\n  editSongs,\r\n  deleteSongs,\r\n} from \"../Pagesactions/songsactions\";\r\nimport Songstable from \"../Components/Songstable\";\r\nimport Addsong from \"../Components/Addsong\";\r\nimport Editsong from \"../Components/Editsong\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport seoAnalytics1 from \"../Components/charts/sale-seo-analytics-1\";\r\nimport seoAnalytics2 from \"../Components/charts/sale-seo-analytics-2\";\r\nimport seoAnalytics3 from \"../Components/charts/sale-seo-analytics-3\";\r\nimport seoAnalytics4 from \"../Components/charts/sale-seo-analytics-4\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminsong.css\";\r\n\r\nconst Songs = () => {\r\n  const [songs, setSongs] = useState();\r\n  const [totalDownloads, setTotalDownloads] = useState(\"0\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [editSongData, setEditSongData] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = (data) => {\r\n    setOpenEdit(true);\r\n    console.log(data);\r\n    setEditSongData(data);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditSongData();\r\n    console.log(editSongData);\r\n  };\r\n\r\n  const handleEditSong = async (data) => {\r\n    console.log(data);\r\n    let res;\r\n    res = await editSongs(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const addSong = async (data) => {\r\n    console.log(data);\r\n    let res;\r\n    res = await addSongs(data);\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  // const editSong = (data) => {\r\n  //   console.log(data);\r\n  //   editSongs(data);\r\n  //   setUpdateData(true);\r\n  // };\r\n  const deleteSong = async (id) => {\r\n    console.log(id);\r\n    let res;\r\n    res = await deleteSongs(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let allSongs = [];\r\n    const fetchSongs = async () => {\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setSongs(allSongs);\r\n\r\n      let count = 0;\r\n      allSongs.map((song) => {\r\n        count += song.noofplays;\r\n      });\r\n      console.log(count);\r\n      // setTotalPlays(count);\r\n    };\r\n    // const countPlays = () => {\r\n\r\n    // };\r\n\r\n    fetchSongs();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main song\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" md={6}>\r\n                {songs ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <MusicNoteIcon style={{ color: \"#f44040\" }} />\r\n                      <h3>{songs.length}</h3>\r\n                      <p className=\"text-muted\">Total Songs</p>\r\n                      <Chart {...seoAnalytics1} />\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                {totalDownloads ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <CloudDownloadIcon style={{ color: \"#f44040\" }} />\r\n                      <h3>{totalDownloads}</h3>\r\n                      <p className=\"text-muted\">Total Downloads</p>\r\n                      <Chart {...seoAnalytics2} />\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <ViewStreamIcon style={{ color: \"#f44040\" }} />\r\n                    <h3>0</h3>\r\n                    <p className=\"text-muted\">Total Streams</p>\r\n                    <Chart {...seoAnalytics3} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                    <h3>0</h3>\r\n                    <p className=\"text-muted\">Total Likes</p>\r\n                    <Chart {...seoAnalytics4} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            {songs ? (\r\n              <Songstable\r\n                data={songs}\r\n                handleDelete={deleteSong}\r\n                handleEdit={handleClickOpenEdit}\r\n                className=\"mb-4\"\r\n              />\r\n            ) : null}\r\n            {open ? (\r\n              <Addsong\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                addSong={addSong}\r\n              />\r\n            ) : null}\r\n            {editSongData ? (\r\n              <Editsong\r\n                data={editSongData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditSong={handleEditSong}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}> Add New Song </h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Songs;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Signin.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Artist.js",["318","319","320","321"],"import React, { useState, useEffect } from \"react\";\r\nimport Artiststable from \"../Components/Artiststable\";\r\nimport Addartist from \"../Components/Addartist\";\r\nimport Editartist from \"../Components/Editartist\";\r\nimport {\r\n  getArtists,\r\n  addArtists,\r\n  deleteArtists,\r\n  editArtists,\r\n} from \"../Pagesactions/artistsactions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminartist.css\";\r\n\r\nconst Artist = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [editArtistData, setEditArtistData] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditArtistData();\r\n    console.log(editArtistData);\r\n  };\r\n\r\n  const addArtist = async (data, albums, songs) => {\r\n    console.log(data, albums, songs);\r\n    let res;\r\n    res = await addArtists(data, albums, songs);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const deleteArtist = async (id) => {\r\n    console.log(id);\r\n    let res;\r\n    res = await deleteArtists(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const editArtist = async (data) => {\r\n    console.log(data);\r\n    await setEditArtistData(data);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditArtist = async (data) => {\r\n    let res;\r\n    res = await editArtists(data);\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main artist\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                {artists ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Row className=\"align-items-center m-l-0\">\r\n                        <Col sm=\"auto\">\r\n                          {/* <i className=\"icon feather icon-book f-30 text-c-purple\" /> */}\r\n                          <FaceIcon style={{ color: \"#f44040\" }} />\r\n                        </Col>\r\n                        <Col>\r\n                          <h6 className=\"text-muted m-b-10\">Total Artists</h6>\r\n                          <h2 className=\"m-b-0\">{artists.length}</h2>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">\r\n                          Total artists likes\r\n                        </h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        {/* <i className=\"icon feather icon-users f-30 text-c-red\" /> */}\r\n                        <NavigationIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">New Artists</h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <i className=\"icon feather icon-award f-30 text-c-blue\" />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">Unique Innovation</h6>\r\n                        <h2 className=\"m-b-0\">325</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            {artists ? (\r\n              <Artiststable\r\n                data={artists}\r\n                handleDelete={deleteArtist}\r\n                handleEdit={editArtist}\r\n                className=\"mb-4\"\r\n              />\r\n            ) : null}\r\n            {open ? (\r\n              <Addartist\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                addArtist={addArtist}\r\n              />\r\n            ) : null}\r\n\r\n            {editArtistData ? (\r\n              <Editartist\r\n                data={editArtistData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditArtist={handleEditArtist}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}> New Artist </h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artist;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Albums.js",["322","323","324","325","326","327"],"import React, { useState, useEffect } from \"react\";\r\nimport Albumstable from \"../Components/Albumstable\";\r\nimport Editalbum from \"../Components/Editalbum\";\r\nimport {\r\n  getAlbums,\r\n  addAlbums,\r\n  deleteAlbums,\r\n  editAlbums,\r\n} from \"../Pagesactions/albumactions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Addalbum from \"../Components/Addalbum\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminalbum.css\";\r\n\r\nconst Albums = () => {\r\n  const [albums, setAlbums] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [editAlbumData, setEditAlbumData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setAlbums(allAlbums);\r\n    };\r\n\r\n    fetchAlbums();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setEditAlbumData();\r\n    console.log(editAlbumData);\r\n  };\r\n\r\n  const addAlbum = async (data) => {\r\n    console.log(data);\r\n\r\n    let res = await addAlbums(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const deleteAlbum = async (id) => {\r\n    console.log(id);\r\n    let res;\r\n    res = await deleteAlbums(id);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const editAlbum = async (data) => {\r\n    console.log(data);\r\n\r\n    await setEditAlbumData(data);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditAlbum = async (data) => {\r\n    console.log(data);\r\n    let res;\r\n    res = await editAlbums(data);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main album\">\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1 col-md-2\"></div>\r\n          <div className=\"col-10 col-md-8\">\r\n            <Row>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                {albums ? (\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Row className=\"align-items-center m-l-0\">\r\n                        <Col sm=\"auto\">\r\n                          {/* <i className=\"icon feather icon-book f-30 text-c-purple\" /> */}\r\n                          <AlbumIcon style={{ color: \"#f44040\" }} />\r\n                        </Col>\r\n                        <Col>\r\n                          <h6 className=\"text-muted m-b-10\">Total Albums</h6>\r\n                          <h2 className=\"m-b-0\">{albums.length}</h2>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ) : null}\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        <FavoriteIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">\r\n                          Total Albums likes\r\n                        </h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        {/* <i className=\"icon feather icon-users f-30 text-c-red\" /> */}\r\n                        <NavigationIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">New Artists</h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mb-4\" xl={6} md={6}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row className=\"align-items-center m-l-0\">\r\n                      <Col sm=\"auto\">\r\n                        {/* <i className=\"icon feather icon-award f-30 text-c-blue\" /> */}\r\n                        <PlayArrowIcon style={{ color: \"#f44040\" }} />\r\n                      </Col>\r\n                      <Col>\r\n                        <h6 className=\"text-muted m-b-10\">Albums Played</h6>\r\n                        <h2 className=\"m-b-0\">0</h2>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            {albums ? (\r\n              <Albumstable\r\n                data={albums}\r\n                handleDelete={deleteAlbum}\r\n                handleEdit={editAlbum}\r\n              />\r\n            ) : null}\r\n            <Addalbum\r\n              open={open}\r\n              handleClickOpen={handleClickOpen}\r\n              handleClose={handleClose}\r\n              addAlbum={addAlbum}\r\n            />\r\n            {editAlbumData ? (\r\n              <Editalbum\r\n                data={editAlbumData}\r\n                open={openEdit}\r\n                handleClickOpen={handleClickOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                handleEditAlbum={handleEditAlbum}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-1 col-md-2 mb-4\">\r\n            <h3 style={{ color: \"white\" }}>New Album</h3>\r\n            <Icon style={{ marginTop: \"500px\" }}>\r\n              <AddCircleIcon\r\n                style={{ color: \"#F44040\", fontSize: 50, marginTop: \"10px\" }}\r\n                onClick={handleClickOpen}\r\n              />\r\n            </Icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Albums;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Songstable.js",["328","329","330","331","332","333","334","335"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Albumstable({ data, handleDelete, handleEdit }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [artists, setArtists] = useState();\r\n  const [artistName, setArtistName] = useState();\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  const findArtistName = (id) => {\r\n    let name;\r\n    console.log(artists);\r\n    name = artists.filter((artist) => {\r\n      return artist._id === id;\r\n    });\r\n    // return name;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {console.log(data)}\r\n              {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))}\r\n              <StyledTableCell>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n                {console.log(row)}\r\n                <StyledTableCell align=\"left\">\r\n                  {row.artists.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row._id}</StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">{row.songname}</StyledTableCell>\r\n\r\n                {/* <StyledTableCell align=\"left\">{row.songimage}</StyledTableCell> */}\r\n                <StyledTableCell align=\"left\">{row.noofplays}</StyledTableCell>\r\n                {/* <StyledTableCell align=\"right\">\r\n                  {artists ? findArtistName(row.artists) : null}\r\n                </StyledTableCell> */}\r\n                {/* <StyledTableCell align=\"right\">\r\n                {row.album.length}\r\n              </StyledTableCell> */}\r\n                <StyledTableCell align=\"left\">\r\n                  <DeleteForeverIcon onClick={() => hanldeDelete(row._id)} />\r\n                  <EditIcon\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        songname: row.songname,\r\n                        songimage: row.songimage,\r\n                        noofplays: row.noofplays,\r\n                        artists: row.artists,\r\n                      })\r\n                    }\r\n                  />\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\usersactions.js",["336"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getUsers = async () => {\r\n  let users;\r\n\r\n  users = await axios.get(\"https://bong-backend.herokuapp.com/api/users\");\r\n  // users = await axios.get(\"http://localhost:3001/api/users\");\r\n  console.log(users);\r\n  return users.data;\r\n};\r\n\r\nconst deleteUsers = async (id) => {\r\n  console.log(id);\r\n\r\n  const response = await axios({\r\n    method: \"DELETE\",\r\n    url: \"https://bong-backend.herokuapp.com/api/users\",\r\n    // url: \"http://localhost:3001/api/users\",\r\n    data: {\r\n      id: id,\r\n    },\r\n  });\r\n  console.log(response);\r\n  // const data = await response.data;\r\n  // console.log(data);\r\n};\r\n\r\nexport { getUsers, deleteUsers };\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editartist.js",["337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport Selectalbumforartist from \"../Components/Selectalbumforartist\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nexport default function Editartist({\r\n  open,\r\n  data,\r\n  handleEditArtist,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    artistname: data.artistname,\r\n    artistimage: data.artistimage,\r\n    albums: data.albums,\r\n    songs: data.songs,\r\n  });\r\n  console.log(data);\r\n  const [allAlbums, setAllAlbums] = useState([]);\r\n  const [foundAlbums, setFoundAlbums] = useState([]);\r\n  const [editAlbums, setEditAlbums] = useState(false);\r\n  const [addAlbums, setAddAlbums] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    handleEditArtist(state);\r\n    handleCloseEdit();\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const deleteArtistAlbum = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundAlbums.filter((album) => {\r\n      if (album._id !== id) {\r\n        return album;\r\n      }\r\n    });\r\n    foundAlbums.filter((album) => {\r\n      if (album._id !== id) {\r\n        ids.push(album._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundAlbums(yoo);\r\n    await setState({\r\n      ...state,\r\n      albums: ids,\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  const handleAlbumsToggle = () => {\r\n    setEditAlbums(!editAlbums);\r\n    setAddAlbums(false);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    handleAlbumsToggle();\r\n    setAddAlbums(!addAlbums);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddAlbums = (data) => {\r\n    let ids = [];\r\n    console.log(foundAlbums);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundAlbums(data);\r\n    setState({\r\n      ...state,\r\n      albums: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const handleDeleteAlbum = useMemo(() => console.log(foundSongs), [\r\n    foundSongs,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      let filterAlbums = [];\r\n      allAlbums = await getAlbums();\r\n      setAllAlbums(allAlbums);\r\n      console.log(allAlbums);\r\n      state.albums.map((albumId) => {\r\n        allAlbums.filter((album) => {\r\n          if (album._id === albumId) {\r\n            filterAlbums.push(album);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundAlbums(filterAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      let filterSongs = [];\r\n      allSongs = await getSongs();\r\n      setAllSongs(allSongs);\r\n      console.log(allSongs);\r\n      state.songs.map((songId) => {\r\n        allSongs.filter((song) => {\r\n          if (song._id === songId) {\r\n            filterSongs.push(song);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundSongs(filterSongs);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Artist</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"artistname\"\r\n            value={state.artistname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.artistimage}\r\n            name=\"artistimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Albums</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleAlbumsToggle}\r\n              >\r\n                {editAlbums ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editAlbums || addAlbums ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddAlbums}\r\n                  >\r\n                    {addAlbums ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editAlbums ? (\r\n                <div>\r\n                  {foundAlbums ? (\r\n                    <List>\r\n                      {foundAlbums.map((album) => {\r\n                        return (\r\n                          <ListItem key={album._id}>\r\n                            {console.log()}\r\n                            <ListItemText\r\n                              primary={album.albumname}\r\n                              // secondary={secondary ? \"Secondary text\" : null}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                              <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                <DeleteForeverIcon\r\n                                  onClick={() => deleteArtistAlbum(album._id)}\r\n                                />\r\n                              </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addAlbums ? (\r\n              <Selectalbumforartist\r\n                data={allAlbums}\r\n                selectAlbums={handleSelectedAddAlbums}\r\n              />\r\n            ) : null}\r\n          </div>\r\n\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Songs</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleSongsToggle}\r\n              >\r\n                {editSongs ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editSongs || addSongs ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddSongs}\r\n                  >\r\n                    {addSongs ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editSongs ? (\r\n                <div>\r\n                  {foundSongs ? (\r\n                    <List>\r\n                      {foundSongs.map((song) => {\r\n                        return (\r\n                          <ListItem>\r\n                            {console.log()}\r\n                            <ListItemText\r\n                              primary={song.songname}\r\n                              // secondary={secondary ? \"Secondary text\" : null}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                              <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                <DeleteForeverIcon\r\n                                  onClick={() => deleteArtistSong(song._id)}\r\n                                />\r\n                              </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addSongs ? (\r\n              <Selectsongsforartist\r\n                data={allSongs}\r\n                selectSongs={handleSelectedAddSongs}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addartist.js",["350","351","352","353","354","355"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Selectalbumforartist from \"../Components/Selectalbumforartist\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Addartist = ({ open, addArtist, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    artistname: \"\",\r\n    artistimage: \"\",\r\n  });\r\n  const [selectAlbums, setSelectAlbums] = useState([]);\r\n  const [selectSongs, setSelectSongs] = useState([]);\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n\r\n  const [onAddAlbums, setOnAddAlbums] = useState(false);\r\n  const [onAddSongs, setOnAddSongs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  const handleAddArtist = useCallback(async (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    console.log(selectAlbums);\r\n    // await setState({\r\n    //   ...state,\r\n    //   albums: selectAlbums,\r\n    // });\r\n    // console.log(state);\r\n    addArtist(state, selectAlbums, selectSongs);\r\n    handleClose();\r\n  });\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleAlbums = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectAlbums(ids);\r\n  });\r\n\r\n  const handleSongs = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectSongs(ids);\r\n  });\r\n\r\n  const handleOnAddAlbums = () => {\r\n    setOnAddAlbums(!onAddAlbums);\r\n  };\r\n  const handleOnAddSongs = () => {\r\n    setOnAddSongs(!onAddSongs);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(selectAlbums)}\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddArtist}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Artist</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"artistname\"\r\n            value={state.artistname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Artist Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.artistimage}\r\n            name=\"artistimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <h5>\r\n            Add Albums{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddAlbums}>\r\n              {onAddAlbums ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddAlbums ? (\r\n            <div>\r\n              {fetchedAlbums ? (\r\n                <Selectalbumforartist\r\n                  data={fetchedAlbums}\r\n                  selectAlbums={handleAlbums}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          <h5>\r\n            Add Songs{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddSongs}>\r\n              {onAddSongs ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddSongs ? (\r\n            <div>\r\n              {fetchedAlbums ? (\r\n                <Selectsongsforartist\r\n                  data={fetchedSongs}\r\n                  selectSongs={handleSongs}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddArtist} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addartist;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editalbum.js",["356","357","358","359","360","361","362","363"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Selectartistforalbum from \"../Components/Selectartistforalbum\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nexport default function Editalbum({\r\n  open,\r\n  handleClickOpen,\r\n  data,\r\n  handleEditAlbum,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    albumname: data.albumname,\r\n    albumimage: data.albumimage,\r\n    artists: data.artists,\r\n    songs: data.songs,\r\n  });\r\n\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [foundArtists, setFoundArtists] = useState([]);\r\n  const [editArtists, setEditArtists] = useState(false);\r\n  const [addArtists, setAddArtists] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  console.log(data);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    handleEditAlbum(state);\r\n    handleCloseEdit();\r\n    // setState({\r\n    //   albumname: \"\",\r\n    //   albumimage: \"\",\r\n    // });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtistsToggle = () => {\r\n    setEditArtists(!editArtists);\r\n    setAddArtists(false);\r\n  };\r\n\r\n  const handleAddArtists = () => {\r\n    handleArtistsToggle();\r\n    setAddArtists(!addArtists);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddArtists = (data) => {\r\n    let yoo;\r\n    console.log(foundArtists);\r\n    console.log(data);\r\n\r\n    yoo = allArtists.filter((artist) => {\r\n      return artist._id === data;\r\n    });\r\n\r\n    console.log(yoo);\r\n\r\n    setFoundArtists(yoo[0]);\r\n    setState({\r\n      ...state,\r\n      artists: yoo[0]._id,\r\n    });\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const deleteAlbumArtists = async (id) => {\r\n    console.log(id);\r\n\r\n    await setFoundArtists(\"\");\r\n    await setState({\r\n      ...state,\r\n      artists: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      let filterArtists;\r\n      allArtists = await getArtists();\r\n      setAllArtists(allArtists);\r\n      console.log(allArtists);\r\n\r\n      allArtists.filter((artist) => {\r\n        console.log(artist);\r\n        console.log(state.artists);\r\n        if (artist._id === state.artists) {\r\n          filterArtists = artist;\r\n        }\r\n      });\r\n\r\n      console.log(filterArtists);\r\n      await setFoundArtists(filterArtists);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      let filterSongs = [];\r\n      allSongs = await getSongs();\r\n      setAllSongs(allSongs);\r\n      console.log(allSongs);\r\n      state.songs.map((songId) => {\r\n        allSongs.filter((song) => {\r\n          if (song._id === songId) {\r\n            filterSongs.push(song);\r\n          }\r\n        });\r\n      });\r\n\r\n      await setFoundSongs(filterSongs);\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        // onSubmit={handleSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Artist</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"albumname\"\r\n            value={state.albumname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.albumimage}\r\n            name=\"albumimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Artist</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleArtistsToggle}\r\n              >\r\n                {editArtists ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editArtists || addArtists ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddArtists}\r\n                  >\r\n                    {addArtists ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editArtists ? (\r\n                <div>\r\n                  {foundArtists ? (\r\n                    <List>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={foundArtists.artistname}\r\n                          // secondary={secondary ? \"Secondary text\" : null}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <DeleteForeverIcon\r\n                              onClick={() =>\r\n                                deleteAlbumArtists(foundArtists._id)\r\n                              }\r\n                            />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addArtists ? (\r\n              <Selectartistforalbum\r\n                data={allArtists}\r\n                selectArtists={handleSelectedAddArtists}\r\n              />\r\n            ) : null}\r\n          </div>\r\n\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Songs</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleSongsToggle}\r\n              >\r\n                {editSongs ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editSongs || addSongs ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddSongs}\r\n                  >\r\n                    {addSongs ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n              {editSongs ? (\r\n                <div>\r\n                  {foundSongs ? (\r\n                    <List>\r\n                      {foundSongs.map((song) => (\r\n                        <ListItem>\r\n                          {console.log()}\r\n                          <ListItemText\r\n                            primary={song.songname}\r\n                            // secondary={secondary ? \"Secondary text\" : null}\r\n                          />\r\n                          <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                              <DeleteForeverIcon\r\n                                onClick={() => deleteArtistSong(song._id)}\r\n                              />\r\n                            </IconButton>\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {addSongs ? (\r\n              <Selectsongsforartist\r\n                data={allSongs}\r\n                selectSongs={handleSelectedAddSongs}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update Album\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Artiststable.js",["364","365","366","367","368"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Editartist from \"../Components/Editartist\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Artiststable({\r\n  data,\r\n  handleDelete,\r\n  handleEdit,\r\n  openEdit,\r\n}) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {console.log(keys)}\r\n              {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))}\r\n              <StyledTableCell>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n                <StyledTableCell align=\"left\">\r\n                  {row.albums.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.songs.length}\r\n                </StyledTableCell>\r\n                <StyledTableCell>{row._id}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{row.artistname}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {row.artistimage}\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">\r\n                  <DeleteForeverIcon onClick={() => hanldeDelete(row._id)} />\r\n                  <EditIcon\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        artistimage: row.artistimage,\r\n                        artistname: row.artistname,\r\n                        albums: row.albums,\r\n                        songs: row.songs,\r\n                      })\r\n                    }\r\n                  />\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addalbum.js",["369","370","371","372","373","374","375"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Selectartistforalbum from \"./Selectartistforalbum\";\r\nimport Selectsongsforartist from \"./Selectsongsforartist\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Addalbum({ open, addAlbum, handleClose }) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    albumname: \"\",\r\n    albumimage: \"\",\r\n  });\r\n  const [selectArtists, setSelectArtists] = useState([]);\r\n  const [selectSongs, setSelectSongs] = useState([]);\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [onAddArtists, setOnAddArtists] = useState(false);\r\n  const [onAddSongs, setOnAddSongs] = useState(false);\r\n\r\n  const handleAddAlbum = (evt) => {\r\n    evt.preventDefault();\r\n    addAlbum(state);\r\n    handleClose();\r\n    setState({\r\n      albumname: \"\",\r\n      albumimage: \"\",\r\n    });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleOnAddArtists = () => {\r\n    setOnAddArtists(!onAddArtists);\r\n  };\r\n  const handleOnAddSongs = () => {\r\n    setOnAddSongs(!onAddSongs);\r\n  };\r\n\r\n  const handleArtists = useCallback(async (data) => {\r\n    console.log(data);\r\n    // let ids = [];\r\n    // await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: data,\r\n    });\r\n  });\r\n\r\n  const handleSongs = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    console.log(ids);\r\n\r\n    await setSelectSongs(ids);\r\n\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddAlbum}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Album</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"albumname\"\r\n            value={state.albumname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.albumimage}\r\n            name=\"albumimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <h5>\r\n            Add Artist{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddArtists}>\r\n              {onAddArtists ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddArtists ? (\r\n            <div>\r\n              {fetchedArtists ? (\r\n                <Selectartistforalbum\r\n                  data={fetchedArtists}\r\n                  selectArtists={handleArtists}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          <br />\r\n\r\n          <h5>\r\n            Add Songs{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddSongs}>\r\n              {onAddSongs ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddSongs ? (\r\n            <div>\r\n              {fetchedSongs ? (\r\n                <Selectsongsforartist\r\n                  data={fetchedSongs}\r\n                  selectSongs={handleSongs}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddAlbum} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Albumstable.js",["376","377","378","379","380","381","382"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Albumstable({ data, handleDelete, handleEdit }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [artists, setArtists] = useState();\r\n  const [artistName, setArtistName] = useState();\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setArtists(allArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  const hanldeDelete = (id) => {\r\n    console.log(id);\r\n    handleDelete(id);\r\n  };\r\n\r\n  const handleEditButton = (data) => {\r\n    console.log(data);\r\n    handleEdit(data);\r\n  };\r\n\r\n  const findArtistName = (id) => {\r\n    let name;\r\n    console.log(artists);\r\n    name = artists.filter((artist) => {\r\n      return artist._id === id;\r\n    });\r\n    // return name;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {console.log(data)}\r\n              {keys.map((key) => (\r\n                <StyledTableCell>{key}</StyledTableCell>\r\n              ))}\r\n              <StyledTableCell>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, idx) => (\r\n              <StyledTableRow key={row._id}>\r\n                {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n                <StyledTableCell>{row.songs.length}</StyledTableCell>\r\n                <StyledTableCell>{row._id}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">{row.albumname}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">\r\n                  {row.albumimage}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\">\r\n                  {artists ? findArtistName(row.artists) : null}\r\n                </StyledTableCell>\r\n                {/* <StyledTableCell align=\"right\">\r\n                {row.album.length}\r\n              </StyledTableCell> */}\r\n                <StyledTableCell align=\"left\">\r\n                  <DeleteForeverIcon onClick={() => hanldeDelete(row._id)} />\r\n                  <EditIcon\r\n                    onClick={() =>\r\n                      handleEditButton({\r\n                        id: row._id,\r\n                        albumimage: row.albumimage,\r\n                        albumname: row.albumname,\r\n                        artists: row.artists,\r\n                        songs: row.songs,\r\n                      })\r\n                    }\r\n                  />\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\artistsactions.js",["383","384"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getArtists = async () => {\r\n  let artists;\r\n\r\n  artists = await axios.get(\"https://bong-backend.herokuapp.com/api/artist\");\r\n  // artists = await axios.get(\"http://localhost:3001/api/artist\");\r\n  console.log(artists);\r\n  return artists.data;\r\n};\r\n\r\nconst addArtists = async (data, albums, songs) => {\r\n  let artists;\r\n  console.log(data, albums, songs);\r\n  let artistsData = {\r\n    data,\r\n    albums,\r\n    songs,\r\n  };\r\n\r\n  artists = await axios.post(\r\n    \"https://bong-backend.herokuapp.com/api/artist\",\r\n    artistsData\r\n  );\r\n  // artists = await axios.post(\"http://localhost:3001/api/artist\", artistsData);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst editArtists = async (data) => {\r\n  let artists;\r\n\r\n  console.log(data);\r\n\r\n  artists = await axios.put(\r\n    \"https://bong-backend.herokuapp.com/api/artist\",\r\n    data\r\n  );\r\n  // artists = await axios.put(\"http://localhost:3001/api/artist\", data);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst deleteArtists = async (id) => {\r\n  let artists;\r\n\r\n  console.log(id);\r\n\r\n  const response = await axios({\r\n    method: \"DELETE\",\r\n    url: \"https://bong-backend.herokuapp.com/api/artist\",\r\n    // url: \"http://localhost:3001/api/artist\",\r\n    data: {\r\n      id: id,\r\n    },\r\n  });\r\n  console.log(response);\r\n  // console.log(artists.data);\r\n  // return artists.data;\r\n};\r\n\r\nexport { getArtists, addArtists, deleteArtists, editArtists };\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumforartist.js",["385","386","387"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectalbumforartist({ data, selectAlbums }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    selectAlbums(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.albumname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Albums\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsforartist.js",["388","389","390"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsforartist({ data, selectSongs }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectSongs(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value._id);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.songname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Songs\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\songsactions.js",["391","392"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforalbum.js",["393","394","395","396","397","398","399","400","401"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsforartist({ data, selectArtists }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState();\r\n\r\n  //   const handleToggle = (value) => async () => {\r\n  //     console.log(value);\r\n  //     const currentIndex = checked.indexOf(value);\r\n  //     console.log(currentIndex);\r\n  //     const newChecked = [...checked];\r\n  //     console.log(newChecked);\r\n\r\n  //     if (currentIndex === -1) {\r\n  //       newChecked.push(value);\r\n  //     } else {\r\n  //       newChecked.splice(currentIndex, 1);\r\n  //     }\r\n\r\n  //     await setChecked(newChecked);\r\n  //   };\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n    setChecked(event.target.value);\r\n  };\r\n\r\n  const handleAddArtist = () => {\r\n    selectArtists(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        name=\"gender1\"\r\n        // value={checked}\r\n        onChange={handleChange}\r\n      >\r\n        {console.log(data)}\r\n        {data.map((value) => {\r\n          const labelId = `checkbox-list-label-${value}`;\r\n          console.log(labelId);\r\n          console.log(value);\r\n\r\n          return (\r\n            <FormControlLabel\r\n              value={value._id}\r\n              control={<Radio />}\r\n              label={value.artistname}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddArtist}>\r\n        Add Artist\r\n      </button>\r\n      {/* {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.songname}`} />\r\n          </ListItem>\r\n        );\r\n      })} */}\r\n      {/* <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Artist\r\n      </button> */}\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\AdminHome.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pagesactions\\albumactions.js",["402"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getAlbums = async () => {\r\n  let albums;\r\n\r\n  // albums = await axios.get(\"https://bong-backend.herokuapp.com/api/album\");\r\n  albums = await axios.get(\"http://localhost:3001/api/album\");\r\n  console.log(albums);\r\n  return albums.data;\r\n};\r\n\r\nconst addAlbums = async (data) => {\r\n  let artists;\r\n\r\n  console.log(data);\r\n\r\n  // artists = await axios.post(\r\n  //   \"https://bong-backend.herokuapp.com/api/album\",\r\n  //   data\r\n  // );\r\n  artists = await axios.post(\"http://localhost:3001/api/album\", data);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst editAlbums = async (data) => {\r\n  let artists;\r\n\r\n  console.log(data);\r\n\r\n  // artists = await axios.put(\r\n  //   \"https://bong-backend.herokuapp.com/api/album\",\r\n  //   data\r\n  // );\r\n  artists = await axios.put(\"http://localhost:3001/api/album\", data);\r\n  console.log(artists.data);\r\n  return artists.data;\r\n};\r\n\r\nconst deleteAlbums = async (id) => {\r\n  console.log(id);\r\n\r\n  const response = await axios({\r\n    method: \"DELETE\",\r\n    // url: \"https://bong-backend.herokuapp.com/api/album\",\r\n    url: \"http://localhost:3001/api/album\",\r\n    data: {\r\n      id: id,\r\n    },\r\n  });\r\n  console.log(response);\r\n  // console.log(artists.data);\r\n  // return artists.data;\r\n};\r\n\r\nexport { getAlbums, addAlbums, deleteAlbums, editAlbums };\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-lead.js",["403"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Leads :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-vendor.js",["404"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Vendors :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\crm-total-invoice.js",["405"],"export default {\r\n    type: 'area',\r\n    height: 150,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ff5252'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Leads :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-processed.js",["406"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#fff',\r\n            strokeColor: '#4680ff',\r\n            strokeWidth: 2,\r\n            hover: {\r\n                size: 7,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Amount Processed :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-amount-spent.js",["407"],"export default {\r\n    type: 'bar',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: '60%'\r\n            }\r\n        },\r\n        xaxis: {\r\n            crosshairs: {\r\n                width: 1\r\n            },\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Amount Spent :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89, 63, 25, 44, 12]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\analytics-profit-processed.js",["408"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ffba57'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0.3,\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#fff',\r\n            strokeColor: '#ffba57',\r\n            strokeWidth: 2,\r\n            hover: {\r\n                size: 7,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 3,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Profit Processed :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 44, 12, 36, 9, 54, 25, 66, 41, 89, 25, 66, 41, 89, 63, 54, 25, 66, 41, 89, 63]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-4.js",["409"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ffba57'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#ffba57',\r\n            strokeColor: '#ffba57',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Usage :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [12, 25, 36, 9, 54, 25, 66, 66, 41, 89, 63, 25, 44, 89, 41]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-1.js",["410"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#4680ff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#4680ff',\r\n            strokeColor: '#4680ff',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Site Analysis :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-3.js",["411"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#ff5252'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#ff5252',\r\n            strokeColor: '#ff5252',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Visit :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 25, 66, 41, 89]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\charts\\sale-seo-analytics-2.js",["412"],"export default {\r\n    type: 'area',\r\n    height: 50,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#9ccc65'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 5,\r\n                right: 5\r\n            }\r\n        },\r\n        markers: {\r\n            size: 3,\r\n            opacity: 0.9,\r\n            colors: '#9ccc65',\r\n            strokeColor: '#9ccc65',\r\n            strokeWidth: 1,\r\n            hover: {\r\n                size: 4,\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Total Sale :'\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'series1',\r\n        data: [12, 25, 36, 9, 54, 25, 66, 66, 41, 89, 63, 25, 44, 89, 41]\r\n    }]\r\n}","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addsong.js",["413","414","415","416","417","418","419"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Selectartistforsong from \"../Components/Selectartistforsong\";\r\nimport Upload from \"../Components/Upload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Addsong = ({ open, addSong, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    songname: \"\",\r\n    songimage: \"\",\r\n    artists: [],\r\n  });\r\n\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [selectArtists, setSelectArtists] = useState();\r\n  const [onAddArtists, setOnAddArtists] = useState(false);\r\n  const [file, setFile] = useState();\r\n\r\n  const handleAddSong = useCallback(async (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    console.log(file);\r\n\r\n    const data = new FormData();\r\n    data.append(\"songname\", state.songname);\r\n    data.append(\"songimage\", state.songimage);\r\n    data.append(\"artists\", state.artists);\r\n    data.append(\"file\", file);\r\n\r\n    addSong(data);\r\n    handleClose();\r\n  });\r\n\r\n  const handleOnAddArtists = () => {\r\n    setOnAddArtists(!onAddArtists);\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtists = useCallback(async (data) => {\r\n    console.log(data);\r\n    let ids = [];\r\n    await data.map((subData) => ids.push(subData._id));\r\n\r\n    await setSelectArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: ids,\r\n    });\r\n  });\r\n\r\n  const handleFile = (uploadedFile) => {\r\n    setFile(uploadedFile);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n\r\n    fetchAlbums();\r\n    fetchSongs();\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={handleAddSong}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Song</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"songname\"\r\n            value={state.songname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.songimage}\r\n            name=\"songimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <h5>\r\n            Add Artist{\" \"}\r\n            <a className=\"btn btn-outline-danger\" onClick={handleOnAddArtists}>\r\n              {onAddArtists ? \"X\" : \"+\"}\r\n            </a>\r\n          </h5>\r\n          {onAddArtists ? (\r\n            <div>\r\n              {fetchedArtists ? (\r\n                <Selectartistforsong\r\n                  data={fetchedArtists}\r\n                  selectArtists={handleArtists}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n          <div className=\"flex\">\r\n            <Upload handleFile={handleFile} />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddSong} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addsong;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistforsong.js",["420","421","422"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectartistforsong({ data, selectArtists }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectArtists(checked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {console.log(data)}\r\n      {data.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n        console.log(labelId);\r\n        console.log(value._id);\r\n\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={0}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${value.artistname}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n      <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n        Add Artist\r\n      </button>\r\n    </List>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Upload.js",["423","424","425"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst Upload = ({ handleFile }) => {\r\n  const [file, setFile] = useState();\r\n  const filePickerRef = useRef();\r\n\r\n  const pickImagehandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        id=\"file\"\r\n        accept=\".mp3\"\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        onChange={(event) => {\r\n          const file = event.target.files[0];\r\n          setFile(file);\r\n          handleFile(file);\r\n        }}\r\n      />\r\n      {file ? <p>{file.name}</p> : null}\r\n\r\n      {console.log(file)}\r\n      <button\r\n        className={`btn btn-sm btn-danger`}\r\n        type=\"button\"\r\n        onClick={pickImagehandler}\r\n      >\r\n        Upload Song\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Editsong.js",["426","427","428","429","430","431","432","433","434","435","436","437","438","439"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport Selectartistforsong from \"../Components/Selectartistforsong\";\r\nimport Selectsongsforartist from \"../Components/Selectsongsforartist\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nexport default function Editsong({\r\n  open,\r\n  handleClickOpen,\r\n  data,\r\n  handleEditSong,\r\n  handleCloseEdit,\r\n}) {\r\n  const [state, setState] = useState({\r\n    id: data.id,\r\n    songname: data.songname,\r\n    songimage: data.songimage,\r\n    artists: data.artists,\r\n    songs: data.songs,\r\n  });\r\n\r\n  console.log(open, data);\r\n\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [foundArtists, setFoundArtists] = useState([]);\r\n  const [editArtists, setEditArtists] = useState(false);\r\n  const [addArtists, setAddArtists] = useState(false);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [foundSongs, setFoundSongs] = useState([]);\r\n  const [editSongs, setEditSongs] = useState(false);\r\n  const [addSongs, setAddSongs] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(state);\r\n    handleEditSong(state);\r\n    handleCloseEdit();\r\n    // setState({\r\n    //   albumname: \"\",\r\n    //   albumimage: \"\",\r\n    // });\r\n  };\r\n\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  const handleArtistsToggle = () => {\r\n    setEditArtists(!editArtists);\r\n    setAddArtists(false);\r\n  };\r\n\r\n  const handleAddArtists = () => {\r\n    handleArtistsToggle();\r\n    setAddArtists(!addArtists);\r\n  };\r\n\r\n  const handleSongsToggle = () => {\r\n    setEditSongs(!editSongs);\r\n    setAddSongs(false);\r\n  };\r\n\r\n  const handleAddSongs = () => {\r\n    handleSongsToggle();\r\n    setAddSongs(!addSongs);\r\n  };\r\n\r\n  const handleSelectedAddArtists = (data) => {\r\n    let yoo;\r\n    console.log(foundArtists);\r\n    console.log(data);\r\n\r\n    yoo = data.map((artist) => {\r\n      return artist._id;\r\n    });\r\n\r\n    console.log(yoo);\r\n\r\n    setFoundArtists(data);\r\n    setState({\r\n      ...state,\r\n      artists: yoo,\r\n    });\r\n  };\r\n\r\n  const handleSelectedAddSongs = (data) => {\r\n    let ids = [];\r\n    console.log(foundSongs);\r\n    console.log(data);\r\n    // foundAlbums.map((yoo) => {\r\n    //   dub = data.filter((subData) => {\r\n    //     return subData._id !== yoo;\r\n    //   });\r\n    //   return dub;\r\n    // });\r\n\r\n    data.map((subData) => {\r\n      ids.push(subData._id);\r\n    });\r\n\r\n    setFoundSongs(data);\r\n    setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n\r\n    console.log(ids);\r\n    console.log(data);\r\n  };\r\n\r\n  const deleteAlbumArtists = async (id) => {\r\n    console.log(id);\r\n\r\n    await setFoundArtists(\"\");\r\n    await setState({\r\n      ...state,\r\n      artists: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteArtistSong = async (id) => {\r\n    let yoo;\r\n    let ids = [];\r\n    yoo = foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        return song;\r\n      }\r\n    });\r\n    foundSongs.filter((song) => {\r\n      if (song._id !== id) {\r\n        ids.push(song._id);\r\n      }\r\n    });\r\n    console.log(ids);\r\n    await setFoundSongs(yoo);\r\n    await setState({\r\n      ...state,\r\n      songs: ids,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      let filterArtists = [];\r\n      allArtists = await getArtists();\r\n      setAllArtists(allArtists);\r\n      console.log(allArtists);\r\n\r\n      //   allArtists.map((artist) => {\r\n      //     // console.log(artist);\r\n      //     // console.log(state.artists);\r\n      //     // if (artist._id === state.artists) {\r\n      //     //   filterArtists = artist;\r\n      //     // }\r\n      //     state.artists.filter((yoo) => {\r\n\r\n      //     })\r\n      //   });\r\n\r\n      state.artists.map((artistId) => {\r\n        allArtists.filter((artist) => {\r\n          if (artist._id === artistId) {\r\n            filterArtists.push(artist);\r\n          }\r\n        });\r\n      });\r\n\r\n      console.log(filterArtists);\r\n      await setFoundArtists(filterArtists);\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(state)}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        // onSubmit={handleSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Song</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"songname\"\r\n            value={state.songname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Song Image Link\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.songimage}\r\n            name=\"songimage\"\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <div>\r\n              <span style={{ fontSize: \"25px\" }}>Artist</span>\r\n\r\n              <button\r\n                style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                className=\"btn btn-sm btn-danger\"\r\n                onClick={handleArtistsToggle}\r\n              >\r\n                {editArtists ? \"X\" : <EditIcon />}\r\n              </button>\r\n              <span>\r\n                {editArtists || addArtists ? (\r\n                  <button\r\n                    style={{ marginLeft: \"20px\", marginBottom: \"7px\" }}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleAddArtists}\r\n                  >\r\n                    {addArtists ? \"X\" : \"+\"}\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n\r\n              <div>\r\n                {console.log(foundArtists)}\r\n                {foundArtists ? (\r\n                  <List>\r\n                    {foundArtists.map((artist) => {\r\n                      return (\r\n                        <ListItem>\r\n                          <ListItemText\r\n                            primary={artist.artistname}\r\n                            // secondary={secondary ? \"Secondary text\" : null}\r\n                          />\r\n                          {console.log(artist.artistname)}\r\n                          <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                              <DeleteForeverIcon\r\n                                onClick={() => deleteAlbumArtists(artist._id)}\r\n                              />\r\n                            </IconButton>\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            {addArtists ? (\r\n              <Selectartistforsong\r\n                data={allArtists}\r\n                selectArtists={handleSelectedAddArtists}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEdit} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Update Album\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Userstable.js",["440","441","442"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { deleteUsers } from \"../Pagesactions/usersactions\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F44040\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n//   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n//   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n//   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n//   createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function Userstable({ data, handleUpdateData }) {\r\n  const classes = useStyles();\r\n  const [keys, setKeys] = useState([]);\r\n\r\n  const settingKeys = () => {\r\n    let yoo = [];\r\n    for (let key in data[0]) {\r\n      console.log(key);\r\n      yoo.push(key);\r\n    }\r\n    setKeys(yoo);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    console.log(id);\r\n    let res;\r\n    res = await deleteUsers(id);\r\n    handleUpdateData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    settingKeys();\r\n  }, [data]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {console.log(keys)}\r\n            {keys.map((key) => (\r\n              <StyledTableCell>{key}</StyledTableCell>\r\n            ))}\r\n            <StyledTableCell> Actions</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row, idx) => (\r\n            <StyledTableRow key={row._id}>\r\n              {/* {console.log(idx)}\r\n              {Object.values(row).map((value, idx) => {\r\n                console.log(value, idx);\r\n                <StyledTableCell>{value}</StyledTableCell>;\r\n              })} */}\r\n              <StyledTableCell>{row._id}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.age}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.gender}</StyledTableCell>\r\n              <StyledTableCell align=\"left\">\r\n                <DeleteForeverIcon onClick={() => handleDelete(row._id)} />\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Adminpopular.js",["443","444","445","446"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport Addpopular from \"../Components/Addpopular\";\r\nimport {\r\n  addPopular,\r\n  editPopular,\r\n  getPopular,\r\n} from \"../Pagesactions/songsactions\";\r\n\r\nconst Adminpopular = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [popular, setPopular] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [sortState, setSortState] = useState(false);\r\n  const [sortedList, setSortedList] = useState();\r\n  const [active, setActive] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddPopular = async (data) => {\r\n    console.log(data);\r\n    // addPopular(data);\r\n    // console.log(\"yoo\");\r\n    let res;\r\n\r\n    res = await editPopular({ popular: data, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    let yoo = [];\r\n    let res;\r\n    res = await editPopular({ popular: yoo, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let popularSongs = popular[0].popular;\r\n    let filterSongs;\r\n    filterSongs = popularSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setpopular(filterSongs)\r\n    await editPopular({ popular: filterSongs, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleNewSort = async (sortedArray) => {\r\n    // console.log(sortedArray);\r\n    await setSortedList({ popular: sortedArray });\r\n    setSortState(true);\r\n  };\r\n\r\n  const handleSortList = async () => {\r\n    console.log(\"hello g\");\r\n    console.log(sortedList);\r\n    setSortState(false);\r\n\r\n    let res;\r\n    res = await editPopular({ popular: sortedList, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPopular = async () => {\r\n      let allPopular;\r\n      allPopular = await getPopular();\r\n      console.log(allPopular);\r\n      setPopular(allPopular);\r\n      setActive(allPopular[0].active);\r\n      setSortedList(allPopular);\r\n      setSortState(false);\r\n    };\r\n\r\n    fetchPopular();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Popular Songs</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\" mb-4 col-12 col-md-2\">\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              New List <AddCircleIcon />\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleDeleteList}\r\n            >\r\n              Delete List <DeleteIcon />\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleSortList}\r\n              disabled={sortState ? false : true}\r\n            >\r\n              <SortIcon /> Save Sort\r\n            </button>\r\n            {open ? (\r\n              <Addpopular\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddPopular={handleAddPopular}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"col-12 col-md-8 \">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-2\"></div>\r\n              <div className=\"col-11 col-md-6\">\r\n                {popular ? (\r\n                  <React.Fragment>\r\n                    {popular[0].popular.length === 0 ? (\r\n                      \" Popular List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {popular ? (\r\n                          <Trendingtable\r\n                            data={popular[0].popular}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                            handleNewSort={handleNewSort}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-1 col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Adminpopular;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintrending.js",["447","448","449"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Admintopcharts.js",["450","451","452","453","454","455","456","457","458"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Trendingtable.js",["459","460","461"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtrending.js",["462","463","464","465","466","467","468","469","470"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addtrending({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTrending,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddTrending(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for trending\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectsongsfortrending.js",["471","472","473"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectsongsfortrending({\r\n  data,\r\n  selectSongs,\r\n  handleClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    console.log(checked);\r\n    selectSongs(checked);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col-1 col-md-2\"></div>\r\n        <div className=\"col-10 col-md-8 \">\r\n          <List className={classes.root}>\r\n            {console.log(data)}\r\n            {data.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              console.log(labelId);\r\n              console.log(value._id);\r\n\r\n              return (\r\n                <ListItem\r\n                  key={value}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={checked.indexOf(value) !== -1}\r\n                      tabIndex={0}\r\n                      disableRipple\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={labelId} primary={`${value.songname}`} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"col-1 col-md-2 mt-4 text-center\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n            Add Songs\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addpopular.js",["474","475","476","477","478","479","480","481","482"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addpopular({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddPopular,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddPopular(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for Popular List\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addchart.js",["483","484","485","486","487","488","489","490","491"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectsongsfortrending from \"../Components/Selectsongsfortrending\";\r\nimport { getSongs } from \"../Pagesactions/songsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Addchart = ({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddCharts,\r\n  listName,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [fetchedSongs, setFetchedSongs] = useState();\r\n  const [selectSongs, setSelectSongs] = useState();\r\n\r\n  const handleSelectSongs = (data) => {\r\n    console.log(data);\r\n    setSelectSongs(data);\r\n    handleAddCharts(data, listName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      let allSongs;\r\n      allSongs = await getSongs();\r\n      console.log(allSongs);\r\n      setFetchedSongs(allSongs);\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedSongs)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Songs for trending\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedSongs ? (\r\n          <div className=\"container\">\r\n            <Selectsongsfortrending\r\n              data={fetchedSongs}\r\n              selectSongs={handleSelectSongs}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addchart;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Managehomepage.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Active.js",[],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Recommended.js",["492","493"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport Addtrending from \"../Components/Addtrending\";\r\nimport { getRecommended, editRecommended } from \"../Pagesactions/songsactions\";\r\n\r\nconst Recommended = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [trending, setTrending] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [sortState, setSortState] = useState(false);\r\n  const [sortedList, setSortedList] = useState();\r\n  const [active, setActive] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddTrending = async (data) => {\r\n    console.log(data);\r\n    // addTrending(data);\r\n    let res;\r\n    res = await editRecommended({ recommended: data, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    let yoo = [];\r\n    let res;\r\n    res = await editRecommended({ recommended: yoo, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let trendingSongs = trending[0].trending;\r\n    let filterSongs;\r\n    filterSongs = await trendingSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setTrending(filterSongs)\r\n    let res;\r\n    res = await editRecommended({ recommended: filterSongs, active: active });\r\n    console.log(res);\r\n    if (res) {\r\n      console.log(\"i am running\");\r\n      setUpdateData(true);\r\n    }\r\n  };\r\n\r\n  const handleNewSort = (sortedArray) => {\r\n    // console.log(sortedArray);\r\n    setSortedList(sortedArray);\r\n    setSortState(true);\r\n  };\r\n\r\n  const handleSortList = async () => {\r\n    console.log(\"hello g\");\r\n    console.log(sortedList);\r\n    setSortState(false);\r\n    let res;\r\n    res = await editRecommended({ recommended: sortedList, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTrending = async () => {\r\n      let allTrending;\r\n      allTrending = await getRecommended();\r\n      console.log(allTrending);\r\n      setTrending(allTrending);\r\n      setActive(allTrending[0].active);\r\n      setSortedList(allTrending);\r\n      setSortState(false);\r\n    };\r\n\r\n    fetchTrending();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Recommended</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"mb-4 col-12 col-md-2\">\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              <AddCircleIcon /> New List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleDeleteList}\r\n            >\r\n              <DeleteIcon /> Delete List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleSortList}\r\n              disabled={sortState ? false : true}\r\n            >\r\n              <SortIcon /> Save Sort\r\n            </button>\r\n          </div>\r\n          <div className=\"col-12 col-md-8 text-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-2\"></div>\r\n              <div className=\"col-11 col-md-8\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].recommended.length === 0 ? (\r\n                      \" Recommended List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {console.log(trending[0].recommended)}\r\n                        {trending ? (\r\n                          <Trendingtable\r\n                            data={trending[0].recommended}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                            handleNewSort={handleNewSort}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-0 col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2\">\r\n            {open ? (\r\n              <Addtrending\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddTrending={handleAddTrending}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommended;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Bongplaylist.js",["494","495"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Trendingtable from \"../Components/Trendingtable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport Addtrending from \"../Components/Addtrending\";\r\nimport {\r\n  getBongplaylist,\r\n  editBongplaylist,\r\n} from \"../Pagesactions/songsactions\";\r\n\r\nconst Bongplaylist = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [trending, setTrending] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [sortState, setSortState] = useState(false);\r\n  const [sortedList, setSortedList] = useState();\r\n  const [active, setActive] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddTrending = async (data) => {\r\n    console.log(data);\r\n    // addTrending(data);\r\n    let res;\r\n    res = await editBongplaylist({ bongplaylist: data, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    let yoo = [];\r\n    let res;\r\n    res = await editBongplaylist({ bongplaylist: yoo, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let trendingSongs = trending[0].trending;\r\n    let filterSongs;\r\n    filterSongs = await trendingSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setTrending(filterSongs)\r\n    let res;\r\n    res = await editBongplaylist({ bongplaylist: filterSongs, active: active });\r\n    console.log(res);\r\n    if (res) {\r\n      console.log(\"i am running\");\r\n      setUpdateData(true);\r\n    }\r\n  };\r\n\r\n  const handleNewSort = (sortedArray) => {\r\n    // console.log(sortedArray);\r\n    setSortedList(sortedArray);\r\n    setSortState(true);\r\n  };\r\n\r\n  const handleSortList = async () => {\r\n    console.log(\"hello g\");\r\n    console.log(sortedList);\r\n    setSortState(false);\r\n    let res;\r\n    res = await editBongplaylist({ bongplaylist: sortedList, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTrending = async () => {\r\n      let allTrending;\r\n      allTrending = await getBongplaylist();\r\n      console.log(allTrending);\r\n      setTrending(allTrending);\r\n      setActive(allTrending[0].active);\r\n      setSortedList(allTrending);\r\n      setSortState(false);\r\n    };\r\n\r\n    fetchTrending();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Bong Playlist</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"mb-4 col-12 col-md-2\">\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              <AddCircleIcon /> New List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleDeleteList}\r\n            >\r\n              <DeleteIcon /> Delete List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleSortList}\r\n              disabled={sortState ? false : true}\r\n            >\r\n              <SortIcon /> Save Sort\r\n            </button>\r\n          </div>\r\n          <div className=\"col-12 col-md-8 text-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-2\"></div>\r\n              <div className=\"col-11 col-md-8\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].bongplaylist.length === 0 ? (\r\n                      \" Bongplaylist List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {console.log(trending[0].bongplaylist)}\r\n                        {trending ? (\r\n                          <Trendingtable\r\n                            data={trending[0].bongplaylist}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                            handleNewSort={handleNewSort}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-0 col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2\">\r\n            {open ? (\r\n              <Addtrending\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddTrending={handleAddTrending}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bongplaylist;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topartists.js",["496","497"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Topartiststable from \"../Components/Topartiststable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport Addtopartists from \"../Components/Addtopartists\";\r\nimport { getTopartists, editTopartists } from \"../Pagesactions/songsactions\";\r\n\r\nconst Topartists = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [trending, setTrending] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [sortState, setSortState] = useState(false);\r\n  const [sortedList, setSortedList] = useState();\r\n  const [active, setActive] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    console.log(\"i am running\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddTrending = async (data) => {\r\n    console.log(data);\r\n    // addTrending(data);\r\n    let res;\r\n    res = await editTopartists({ topartists: data, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    let yoo = [];\r\n    let res;\r\n    res = await editTopartists({ topartists: yoo, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let trendingSongs = trending[0].trending;\r\n    let filterSongs;\r\n    filterSongs = await trendingSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setTrending(filterSongs)\r\n    let res;\r\n    res = await editTopartists({ topartists: filterSongs, active: active });\r\n    console.log(res);\r\n    if (res) {\r\n      console.log(\"i am running\");\r\n      setUpdateData(true);\r\n    }\r\n  };\r\n\r\n  const handleNewSort = (sortedArray) => {\r\n    // console.log(sortedArray);\r\n    setSortedList(sortedArray);\r\n    setSortState(true);\r\n  };\r\n\r\n  const handleSortList = async () => {\r\n    console.log(\"hello g\");\r\n    console.log(sortedList);\r\n    setSortState(false);\r\n    let res;\r\n    res = await editTopartists({ topartists: sortedList, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTrending = async () => {\r\n      let allTrending;\r\n      allTrending = await getTopartists();\r\n      console.log(allTrending);\r\n      setTrending(allTrending);\r\n      setActive(allTrending[0].active);\r\n      setSortedList(allTrending);\r\n      setSortState(false);\r\n    };\r\n\r\n    fetchTrending();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Top Artists</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"mb-4 col-12 col-md-2\">\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              <AddCircleIcon /> New List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleDeleteList}\r\n            >\r\n              <DeleteIcon /> Delete List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleSortList}\r\n              disabled={sortState ? false : true}\r\n            >\r\n              <SortIcon /> Save Sort\r\n            </button>\r\n          </div>\r\n          <div className=\"col-12 col-md-8 text-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-2\"></div>\r\n              <div className=\"col-11 col-md-8\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].topartists.length === 0 ? (\r\n                      \" Top Artists List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {console.log(trending[0].topartists)}\r\n                        {trending ? (\r\n                          <Topartiststable\r\n                            data={trending[0].topartists}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                            handleNewSort={handleNewSort}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-0 col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2\">\r\n            {open ? (\r\n              <Addtopartists\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddTrending={handleAddTrending}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topartists;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Pages\\Topalbums.js",["498","499"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/adminpages.css\";\r\nimport \"../Styles/adminhome.css\";\r\nimport Topalbumtable from \"../Components/Topalbumtable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport Addtopalbums from \"../Components/Addtopalbums\";\r\nimport { getTopalbums, editTopalbums } from \"../Pagesactions/songsactions\";\r\n\r\nconst Topalbums = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [trending, setTrending] = useState();\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const [sortState, setSortState] = useState(false);\r\n  const [sortedList, setSortedList] = useState();\r\n  const [active, setActive] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    console.log(\"i am running\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddTrending = async (data) => {\r\n    console.log(data);\r\n    // addTrending(data);\r\n    let res;\r\n    res = await editTopalbums({ topalbums: data, active: active });\r\n    console.log(res);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    let yoo = [];\r\n    let res;\r\n    res = await editTopalbums({ topalbums: yoo, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const handleDeleteSong = async (id) => {\r\n    console.log(id);\r\n    let trendingSongs = trending[0].trending;\r\n    let filterSongs;\r\n    filterSongs = await trendingSongs.filter((song) => {\r\n      return song._id !== id;\r\n    });\r\n    console.log(filterSongs);\r\n    // setTrending(filterSongs)\r\n    let res;\r\n    res = await editTopalbums({ topalbums: filterSongs, active: active });\r\n    console.log(res);\r\n    if (res) {\r\n      console.log(\"i am running\");\r\n      setUpdateData(true);\r\n    }\r\n  };\r\n\r\n  const handleNewSort = (sortedArray) => {\r\n    // console.log(sortedArray);\r\n    setSortedList(sortedArray);\r\n    setSortState(true);\r\n  };\r\n\r\n  const handleSortList = async () => {\r\n    console.log(\"hello g\");\r\n    console.log(sortedList);\r\n    setSortState(false);\r\n    let res;\r\n    res = await editTopalbums({ topalbums: sortedList, active: active });\r\n    setUpdateData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTrending = async () => {\r\n      let allTrending;\r\n      allTrending = await getTopalbums();\r\n      console.log(allTrending);\r\n      setTrending(allTrending);\r\n      setActive(allTrending[0].active);\r\n      setSortedList(allTrending);\r\n      setSortState(false);\r\n    };\r\n\r\n    fetchTrending();\r\n    setUpdateData(false);\r\n  }, [updateData]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h2>Top Albums</h2>\r\n        <br />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"mb-4 col-12 col-md-2\">\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              <AddCircleIcon /> New List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleDeleteList}\r\n            >\r\n              <DeleteIcon /> Delete List\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button\r\n              style={{ width: \"120px\" }}\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={handleSortList}\r\n              disabled={sortState ? false : true}\r\n            >\r\n              <SortIcon /> Save Sort\r\n            </button>\r\n          </div>\r\n          <div className=\"col-12 col-md-8 text-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col-0 col-md-2\"></div>\r\n              <div className=\"col-11 col-md-8\">\r\n                {trending ? (\r\n                  <React.Fragment>\r\n                    {trending[0].topalbums.length === 0 ? (\r\n                      \" Top Albums List is Empty\"\r\n                    ) : (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        {console.log(trending[0].topalbums)}\r\n                        {trending ? (\r\n                          <Topalbumtable\r\n                            data={trending[0].topalbums}\r\n                            handleDeleteSong={handleDeleteSong}\r\n                            handleNewSort={handleNewSort}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"col-0 col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2\">\r\n            {open ? (\r\n              <Addtopalbums\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                handleAddTrending={handleAddTrending}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topalbums;\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopalbums.js",["500","501","502","503","504","505","506","507","508"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectalbumfortopalbums from \"./Selectalbumfortopalbums\";\r\nimport { getAlbums } from \"../Pagesactions/albumactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addtopalbums({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTrending,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedAlbums, setFetchedAlbums] = useState();\r\n  const [selectAlbums, setSelectAlbums] = useState();\r\n\r\n  const handleSelectAlbums = (data) => {\r\n    console.log(data);\r\n    setSelectAlbums(data);\r\n    handleAddTrending(data);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      let allAlbums;\r\n      allAlbums = await getAlbums();\r\n      console.log(allAlbums);\r\n      setFetchedAlbums(allAlbums);\r\n    };\r\n    fetchAlbums();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedAlbums)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Albums for Top albums\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedAlbums ? (\r\n          <div className=\"container\">\r\n            <Selectalbumfortopalbums\r\n              data={fetchedAlbums}\r\n              selectAlbums={handleSelectAlbums}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectalbumfortopalbums.js",["509","510","511"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectalbumfortopalbums({ data, selectAlbums }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    selectAlbums(checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-1 col-md-2\"></div>\r\n        <div className=\"col-10 col-md-8\">\r\n          <List className={classes.root}>\r\n            {data.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              console.log(labelId);\r\n              console.log(value);\r\n\r\n              return (\r\n                <ListItem\r\n                  key={value}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={checked.indexOf(value) !== -1}\r\n                      tabIndex={0}\r\n                      disableRipple\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={labelId} primary={`${value.albumname}`} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"col-1 col-md-2 mt-4 text-center\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n            Add Albums\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topalbumtable.js",["512","513","514"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <IconButton edge=\"end\" aria-label=\"comments\">\r\n    <DragIndicatorIcon />\r\n  </IconButton>\r\n));\r\n\r\nconst SortableItem = sortableElement(\r\n  ({ value, name, classes, handleDelete }) => (\r\n    <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n      <ListItemAvatar>\r\n        <Avatar alt=\"Remy Sharp\" src={value.albumimage} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        style={{ color: \"black\" }}\r\n        primary={`${value.albumname}`}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              className={classes.inline}\r\n              color=\"textPrimary\"\r\n            >\r\n              Ali Gatie\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <DragHandle />\r\n        <IconButton>\r\n          <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n        </IconButton>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n);\r\n\r\nconst SortableContainer = sortableContainer(({ children, classes }) => {\r\n  return (\r\n    <List width=\"100%\" className={classes.root}>\r\n      {children}\r\n    </List>\r\n  );\r\n});\r\n\r\nconst Topalbumtable = ({ data, handleDeleteSong, name, handleNewSort }) => {\r\n  const classes = useStyles();\r\n  console.log(data);\r\n  const [state, setState] = useState(data);\r\n  console.log(state);\r\n  const handleDelete = (id) => {\r\n    console.log(name);\r\n    handleDeleteSong(id, name);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setState((items) => arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  useMemo(() => {\r\n    handleNewSort(state, name);\r\n  }, [state]);\r\n\r\n  return (\r\n    <SortableContainer onSortEnd={onSortEnd} useDragHandle classes={classes}>\r\n      {console.log(state)}\r\n      {state.map((value, index) => (\r\n        <SortableItem\r\n          key={`item-${value._id}`}\r\n          index={index}\r\n          value={value}\r\n          handleDelete={handleDelete}\r\n          classes={classes}\r\n        />\r\n      ))}\r\n    </SortableContainer>\r\n    // <List className={classes.root} width=\"100%\">\r\n    //   {data.map((value) => {\r\n    //     return (\r\n    //       <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n    //         <ListItemAvatar>\r\n    //           <Avatar alt=\"Remy Sharp\" src={value.songimage} />\r\n    //         </ListItemAvatar>\r\n    //         <ListItemText\r\n    //           style={{ color: \"black\" }}\r\n    //           primary={`${value.songname}`}\r\n    //           secondary={\r\n    //             <React.Fragment>\r\n    //               <Typography\r\n    //                 component=\"span\"\r\n    //                 variant=\"body2\"\r\n    //                 className={classes.inline}\r\n    //                 color=\"textPrimary\"\r\n    //               >\r\n    //                 Ali Gatie\r\n    //               </Typography>\r\n    //             </React.Fragment>\r\n    //           }\r\n    //         />\r\n    //         <ListItemSecondaryAction>\r\n    //           <IconButton edge=\"end\" aria-label=\"comments\">\r\n    //             <DragIndicatorIcon />\r\n    //           </IconButton>\r\n    //           <IconButton>\r\n    //             <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n    //           </IconButton>\r\n    //           <Divider variant=\"inset\" component=\"li\" />\r\n    //         </ListItemSecondaryAction>\r\n    //       </ListItem>\r\n    //     );\r\n    //   })}\r\n    // </List>\r\n  );\r\n};\r\n\r\nexport default sortableContainer(Topalbumtable);\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Topartiststable.js",["515","516","517"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <IconButton edge=\"end\" aria-label=\"comments\">\r\n    <DragIndicatorIcon />\r\n  </IconButton>\r\n));\r\n\r\nconst SortableItem = sortableElement(\r\n  ({ value, name, classes, handleDelete }) => (\r\n    <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n      <ListItemAvatar>\r\n        <Avatar alt=\"Remy Sharp\" src={value.artistimage} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        style={{ color: \"black\" }}\r\n        primary={`${value.artistname}`}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              className={classes.inline}\r\n              color=\"textPrimary\"\r\n            >\r\n              Ali Gatie\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <DragHandle />\r\n        <IconButton>\r\n          <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n        </IconButton>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n);\r\n\r\nconst SortableContainer = sortableContainer(({ children, classes }) => {\r\n  return (\r\n    <List width=\"100%\" className={classes.root}>\r\n      {children}\r\n    </List>\r\n  );\r\n});\r\n\r\nconst Topartiststable = ({ data, handleDeleteSong, name, handleNewSort }) => {\r\n  const classes = useStyles();\r\n  console.log(data);\r\n  const [state, setState] = useState(data);\r\n  console.log(state);\r\n  const handleDelete = (id) => {\r\n    console.log(name);\r\n    handleDeleteSong(id, name);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setState((items) => arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  useMemo(() => {\r\n    handleNewSort(state, name);\r\n  }, [state]);\r\n\r\n  return (\r\n    <SortableContainer onSortEnd={onSortEnd} useDragHandle classes={classes}>\r\n      {console.log(state)}\r\n      {state.map((value, index) => (\r\n        <SortableItem\r\n          key={`item-${value._id}`}\r\n          index={index}\r\n          value={value}\r\n          handleDelete={handleDelete}\r\n          classes={classes}\r\n        />\r\n      ))}\r\n    </SortableContainer>\r\n    // <List className={classes.root} width=\"100%\">\r\n    //   {data.map((value) => {\r\n    //     return (\r\n    //       <ListItem alignItems=\"flex-start\" width=\"100%\">\r\n    //         <ListItemAvatar>\r\n    //           <Avatar alt=\"Remy Sharp\" src={value.songimage} />\r\n    //         </ListItemAvatar>\r\n    //         <ListItemText\r\n    //           style={{ color: \"black\" }}\r\n    //           primary={`${value.songname}`}\r\n    //           secondary={\r\n    //             <React.Fragment>\r\n    //               <Typography\r\n    //                 component=\"span\"\r\n    //                 variant=\"body2\"\r\n    //                 className={classes.inline}\r\n    //                 color=\"textPrimary\"\r\n    //               >\r\n    //                 Ali Gatie\r\n    //               </Typography>\r\n    //             </React.Fragment>\r\n    //           }\r\n    //         />\r\n    //         <ListItemSecondaryAction>\r\n    //           <IconButton edge=\"end\" aria-label=\"comments\">\r\n    //             <DragIndicatorIcon />\r\n    //           </IconButton>\r\n    //           <IconButton>\r\n    //             <DeleteIcon onClick={() => handleDelete(value._id, name)} />\r\n    //           </IconButton>\r\n    //           <Divider variant=\"inset\" component=\"li\" />\r\n    //         </ListItemSecondaryAction>\r\n    //       </ListItem>\r\n    //     );\r\n    //   })}\r\n    // </List>\r\n  );\r\n};\r\n\r\nexport default sortableContainer(Topartiststable);\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addtopartists.js",["518","519","520","521","522","523","524","525","526"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Selectartistsfortopartists from \"./Selectartistsfortopartists\";\r\nimport { getArtists } from \"../Pagesactions/artistsactions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Addtopartists({\r\n  open,\r\n  handleClose,\r\n  handleClickOpen,\r\n  handleAddTrending,\r\n}) {\r\n  const classes = useStyles();\r\n  const [fetchedArtists, setFetchedArtists] = useState();\r\n  const [selectArtists, setSelectArtists] = useState();\r\n\r\n  const handleSelectAlbums = (data) => {\r\n    console.log(data);\r\n    setSelectArtists(data);\r\n    handleAddTrending(data);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      let allArtists;\r\n      allArtists = await getArtists();\r\n      console.log(allArtists);\r\n      setFetchedArtists(allArtists);\r\n    };\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(fetchedArtists)}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        style={{\r\n          backgroundColor: \"#F44040\",\r\n        }}\r\n      >\r\n        <AppBar\r\n          className={classes.appBar}\r\n          style={{\r\n            backgroundColor: \"#F44040\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Choose Artists for Top Artists\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Brunch this weekend?\" />\r\n          </ListItem>\r\n        </List> */}\r\n        {fetchedArtists ? (\r\n          <div className=\"container\">\r\n            <Selectartistsfortopartists\r\n              data={fetchedArtists}\r\n              selectAlbums={handleSelectAlbums}\r\n              handleClose={handleClose}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Selectartistsfortopartists.js",["527","528","529"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Selectalbumfortopartists({ data, selectAlbums }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => async () => {\r\n    console.log(value);\r\n    const currentIndex = checked.indexOf(value);\r\n    console.log(currentIndex);\r\n    const newChecked = [...checked];\r\n    console.log(newChecked);\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    await setChecked(newChecked);\r\n  };\r\n\r\n  const handleAddAlbums = () => {\r\n    selectAlbums(checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-1 col-md-2\"></div>\r\n        <div className=\"col-10 col-md-8\">\r\n          <List className={classes.root}>\r\n            {data.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              console.log(labelId);\r\n              console.log(value);\r\n\r\n              return (\r\n                <ListItem\r\n                  key={value}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={checked.indexOf(value) !== -1}\r\n                      tabIndex={0}\r\n                      disableRipple\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={labelId} primary={`${value.artistname}`} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"col-1 col-md-2 mt-4 text-center\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={handleAddAlbums}>\r\n            Add Artists\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Tabsvertical.js",["530","531","532","533","534"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Addnewchart.js",["535","536","537","538","539","540","541","542","543"],"H:\\don work\\aidataron fiverr\\Music Stream web app\\Module 1\\V1\\frontend\\src\\Components\\Imageupload.js",[],{"ruleId":"544","replacedBy":"545"},{"ruleId":"546","replacedBy":"547"},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"552","line":2,"column":10,"nodeType":"550","messageId":"551","endLine":2,"endColumn":20},{"ruleId":"548","severity":1,"message":"553","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":18},{"ruleId":"548","severity":1,"message":"554","line":4,"column":10,"nodeType":"550","messageId":"551","endLine":4,"endColumn":18},{"ruleId":"548","severity":1,"message":"555","line":5,"column":10,"nodeType":"550","messageId":"551","endLine":5,"endColumn":19},{"ruleId":"548","severity":1,"message":"556","line":28,"column":19,"nodeType":"550","messageId":"551","endLine":28,"endColumn":29},{"ruleId":"548","severity":1,"message":"557","line":29,"column":17,"nodeType":"550","messageId":"551","endLine":29,"endColumn":25},{"ruleId":"548","severity":1,"message":"558","line":30,"column":18,"nodeType":"550","messageId":"551","endLine":30,"endColumn":27},{"ruleId":"548","severity":1,"message":"559","line":31,"column":17,"nodeType":"550","messageId":"551","endLine":31,"endColumn":25},{"ruleId":"548","severity":1,"message":"560","line":33,"column":10,"nodeType":"550","messageId":"551","endLine":33,"endColumn":14},{"ruleId":"548","severity":1,"message":"561","line":33,"column":16,"nodeType":"550","messageId":"551","endLine":33,"endColumn":23},{"ruleId":"548","severity":1,"message":"562","line":4,"column":32,"nodeType":"550","messageId":"551","endLine":4,"endColumn":42},{"ruleId":"563","severity":1,"message":"564","line":145,"column":13,"nodeType":"565","endLine":145,"endColumn":58},{"ruleId":"548","severity":1,"message":"566","line":19,"column":8,"nodeType":"550","messageId":"551","endLine":19,"endColumn":21},{"ruleId":"548","severity":1,"message":"567","line":29,"column":26,"nodeType":"550","messageId":"551","endLine":29,"endColumn":43},{"ruleId":"548","severity":1,"message":"568","line":57,"column":5,"nodeType":"550","messageId":"551","endLine":57,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":77,"column":5,"nodeType":"550","messageId":"551","endLine":77,"endColumn":8},{"ruleId":"569","severity":1,"message":"570","line":89,"column":27,"nodeType":"571","messageId":"572","endLine":89,"endColumn":29},{"ruleId":"548","severity":1,"message":"573","line":15,"column":8,"nodeType":"550","messageId":"551","endLine":15,"endColumn":23},{"ruleId":"548","severity":1,"message":"574","line":17,"column":8,"nodeType":"550","messageId":"551","endLine":17,"endColumn":13},{"ruleId":"548","severity":1,"message":"568","line":62,"column":5,"nodeType":"550","messageId":"551","endLine":62,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":69,"column":5,"nodeType":"550","messageId":"551","endLine":69,"endColumn":8},{"ruleId":"548","severity":1,"message":"575","line":11,"column":8,"nodeType":"550","messageId":"551","endLine":11,"endColumn":16},{"ruleId":"548","severity":1,"message":"573","line":13,"column":8,"nodeType":"550","messageId":"551","endLine":13,"endColumn":23},{"ruleId":"548","severity":1,"message":"574","line":19,"column":8,"nodeType":"550","messageId":"551","endLine":19,"endColumn":13},{"ruleId":"548","severity":1,"message":"568","line":64,"column":9,"nodeType":"550","messageId":"551","endLine":64,"endColumn":12},{"ruleId":"548","severity":1,"message":"568","line":71,"column":5,"nodeType":"550","messageId":"551","endLine":71,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":85,"column":5,"nodeType":"550","messageId":"551","endLine":85,"endColumn":8},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"577","line":41,"column":10,"nodeType":"550","messageId":"551","endLine":41,"endColumn":14},{"ruleId":"548","severity":1,"message":"578","line":41,"column":16,"nodeType":"550","messageId":"551","endLine":41,"endColumn":23},{"ruleId":"548","severity":1,"message":"579","line":43,"column":10,"nodeType":"550","messageId":"551","endLine":43,"endColumn":20},{"ruleId":"548","severity":1,"message":"580","line":43,"column":22,"nodeType":"550","messageId":"551","endLine":43,"endColumn":35},{"ruleId":"581","severity":1,"message":"582","line":64,"column":6,"nodeType":"583","endLine":64,"endColumn":12,"suggestions":"584"},{"ruleId":"548","severity":1,"message":"585","line":76,"column":9,"nodeType":"550","messageId":"551","endLine":76,"endColumn":23},{"ruleId":"548","severity":1,"message":"586","line":79,"column":5,"nodeType":"550","messageId":"551","endLine":79,"endColumn":9},{"ruleId":"548","severity":1,"message":"587","line":1,"column":8,"nodeType":"550","messageId":"551","endLine":1,"endColumn":13},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"569","severity":1,"message":"588","line":61,"column":38,"nodeType":"571","messageId":"589","endLine":61,"endColumn":40},{"ruleId":"569","severity":1,"message":"590","line":66,"column":32,"nodeType":"571","messageId":"572","endLine":66,"endColumn":34},{"ruleId":"569","severity":1,"message":"588","line":82,"column":36,"nodeType":"571","messageId":"589","endLine":82,"endColumn":38},{"ruleId":"569","severity":1,"message":"590","line":87,"column":30,"nodeType":"571","messageId":"572","endLine":87,"endColumn":32},{"ruleId":"569","severity":1,"message":"570","line":131,"column":24,"nodeType":"571","messageId":"572","endLine":131,"endColumn":26},{"ruleId":"569","severity":1,"message":"570","line":156,"column":24,"nodeType":"571","messageId":"572","endLine":156,"endColumn":26},{"ruleId":"548","severity":1,"message":"591","line":170,"column":9,"nodeType":"550","messageId":"551","endLine":170,"endColumn":26},{"ruleId":"569","severity":1,"message":"570","line":181,"column":34,"nodeType":"571","messageId":"572","endLine":181,"endColumn":36},{"ruleId":"569","severity":1,"message":"590","line":182,"column":34,"nodeType":"571","messageId":"572","endLine":182,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":198,"column":32,"nodeType":"571","messageId":"572","endLine":198,"endColumn":34},{"ruleId":"569","severity":1,"message":"590","line":199,"column":32,"nodeType":"571","messageId":"572","endLine":199,"endColumn":34},{"ruleId":"581","severity":1,"message":"592","line":211,"column":6,"nodeType":"583","endLine":211,"endColumn":8,"suggestions":"593"},{"ruleId":"548","severity":1,"message":"594","line":26,"column":9,"nodeType":"550","messageId":"551","endLine":26,"endColumn":16},{"ruleId":"581","severity":1,"message":"595","line":59,"column":27,"nodeType":"550","endLine":59,"endColumn":38},{"ruleId":"581","severity":1,"message":"595","line":80,"column":24,"nodeType":"550","endLine":80,"endColumn":35},{"ruleId":"581","severity":1,"message":"595","line":88,"column":23,"nodeType":"550","endLine":88,"endColumn":34},{"ruleId":"596","severity":1,"message":"597","line":143,"column":13,"nodeType":"565","endLine":143,"endColumn":79},{"ruleId":"596","severity":1,"message":"597","line":160,"column":13,"nodeType":"565","endLine":160,"endColumn":78},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"569","severity":1,"message":"570","line":115,"column":24,"nodeType":"571","messageId":"572","endLine":115,"endColumn":26},{"ruleId":"569","severity":1,"message":"588","line":142,"column":36,"nodeType":"571","messageId":"589","endLine":142,"endColumn":38},{"ruleId":"569","severity":1,"message":"590","line":147,"column":30,"nodeType":"571","messageId":"572","endLine":147,"endColumn":32},{"ruleId":"569","severity":1,"message":"590","line":168,"column":34,"nodeType":"571","messageId":"572","endLine":168,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":186,"column":32,"nodeType":"571","messageId":"572","endLine":186,"endColumn":34},{"ruleId":"569","severity":1,"message":"590","line":187,"column":32,"nodeType":"571","messageId":"572","endLine":187,"endColumn":34},{"ruleId":"581","severity":1,"message":"598","line":199,"column":6,"nodeType":"583","endLine":199,"endColumn":8,"suggestions":"599"},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"600","line":12,"column":8,"nodeType":"550","messageId":"551","endLine":12,"endColumn":18},{"ruleId":"548","severity":1,"message":"577","line":46,"column":10,"nodeType":"550","messageId":"551","endLine":46,"endColumn":14},{"ruleId":"548","severity":1,"message":"578","line":46,"column":16,"nodeType":"550","messageId":"551","endLine":46,"endColumn":23},{"ruleId":"581","severity":1,"message":"582","line":59,"column":6,"nodeType":"583","endLine":59,"endColumn":12,"suggestions":"601"},{"ruleId":"548","severity":1,"message":"594","line":26,"column":9,"nodeType":"550","messageId":"551","endLine":26,"endColumn":16},{"ruleId":"548","severity":1,"message":"602","line":32,"column":10,"nodeType":"550","messageId":"551","endLine":32,"endColumn":23},{"ruleId":"548","severity":1,"message":"603","line":33,"column":10,"nodeType":"550","messageId":"551","endLine":33,"endColumn":21},{"ruleId":"581","severity":1,"message":"595","line":64,"column":25,"nodeType":"550","endLine":64,"endColumn":36},{"ruleId":"581","severity":1,"message":"595","line":76,"column":23,"nodeType":"550","endLine":76,"endColumn":34},{"ruleId":"596","severity":1,"message":"597","line":148,"column":13,"nodeType":"565","endLine":148,"endColumn":80},{"ruleId":"596","severity":1,"message":"597","line":167,"column":13,"nodeType":"565","endLine":167,"endColumn":78},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"577","line":41,"column":10,"nodeType":"550","messageId":"551","endLine":41,"endColumn":14},{"ruleId":"548","severity":1,"message":"578","line":41,"column":16,"nodeType":"550","messageId":"551","endLine":41,"endColumn":23},{"ruleId":"548","severity":1,"message":"579","line":43,"column":10,"nodeType":"550","messageId":"551","endLine":43,"endColumn":20},{"ruleId":"548","severity":1,"message":"580","line":43,"column":22,"nodeType":"550","messageId":"551","endLine":43,"endColumn":35},{"ruleId":"581","severity":1,"message":"582","line":64,"column":6,"nodeType":"583","endLine":64,"endColumn":12,"suggestions":"604"},{"ruleId":"548","severity":1,"message":"586","line":79,"column":5,"nodeType":"550","messageId":"551","endLine":79,"endColumn":9},{"ruleId":"548","severity":1,"message":"587","line":1,"column":8,"nodeType":"550","messageId":"551","endLine":1,"endColumn":13},{"ruleId":"548","severity":1,"message":"605","line":46,"column":7,"nodeType":"550","messageId":"551","endLine":46,"endColumn":14},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"606","line":19,"column":10,"nodeType":"550","messageId":"551","endLine":19,"endColumn":15},{"ruleId":"548","severity":1,"message":"607","line":19,"column":17,"nodeType":"550","messageId":"551","endLine":19,"endColumn":25},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"606","line":19,"column":10,"nodeType":"550","messageId":"551","endLine":19,"endColumn":15},{"ruleId":"548","severity":1,"message":"607","line":19,"column":17,"nodeType":"550","messageId":"551","endLine":19,"endColumn":25},{"ruleId":"548","severity":1,"message":"587","line":1,"column":8,"nodeType":"550","messageId":"551","endLine":1,"endColumn":13},{"ruleId":"548","severity":1,"message":"608","line":182,"column":3,"nodeType":"550","messageId":"551","endLine":182,"endColumn":14},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"609","line":4,"column":8,"nodeType":"550","messageId":"551","endLine":4,"endColumn":16},{"ruleId":"548","severity":1,"message":"610","line":5,"column":8,"nodeType":"550","messageId":"551","endLine":5,"endColumn":20},{"ruleId":"548","severity":1,"message":"611","line":6,"column":8,"nodeType":"550","messageId":"551","endLine":6,"endColumn":20},{"ruleId":"548","severity":1,"message":"612","line":7,"column":8,"nodeType":"550","messageId":"551","endLine":7,"endColumn":16},{"ruleId":"548","severity":1,"message":"613","line":11,"column":8,"nodeType":"550","messageId":"551","endLine":11,"endColumn":19},{"ruleId":"548","severity":1,"message":"614","line":12,"column":8,"nodeType":"550","messageId":"551","endLine":12,"endColumn":17},{"ruleId":"548","severity":1,"message":"606","line":24,"column":10,"nodeType":"550","messageId":"551","endLine":24,"endColumn":15},{"ruleId":"548","severity":1,"message":"607","line":24,"column":17,"nodeType":"550","messageId":"551","endLine":24,"endColumn":25},{"ruleId":"548","severity":1,"message":"587","line":1,"column":8,"nodeType":"550","messageId":"551","endLine":1,"endColumn":13},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":43,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":43,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":43,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":53,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":44,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":53,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":59,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":59,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":59,"endColumn":2},{"ruleId":"615","severity":1,"message":"616","line":1,"column":1,"nodeType":"617","endLine":59,"endColumn":2},{"ruleId":"548","severity":1,"message":"594","line":27,"column":9,"nodeType":"550","messageId":"551","endLine":27,"endColumn":16},{"ruleId":"548","severity":1,"message":"618","line":35,"column":10,"nodeType":"550","messageId":"551","endLine":35,"endColumn":23},{"ruleId":"548","severity":1,"message":"619","line":36,"column":10,"nodeType":"550","messageId":"551","endLine":36,"endColumn":22},{"ruleId":"548","severity":1,"message":"602","line":38,"column":10,"nodeType":"550","messageId":"551","endLine":38,"endColumn":23},{"ruleId":"581","severity":1,"message":"595","line":42,"column":25,"nodeType":"550","endLine":42,"endColumn":36},{"ruleId":"581","severity":1,"message":"595","line":69,"column":25,"nodeType":"550","endLine":69,"endColumn":36},{"ruleId":"596","severity":1,"message":"597","line":151,"column":13,"nodeType":"565","endLine":151,"endColumn":80},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"606","line":19,"column":10,"nodeType":"550","messageId":"551","endLine":19,"endColumn":15},{"ruleId":"548","severity":1,"message":"607","line":19,"column":17,"nodeType":"550","messageId":"551","endLine":19,"endColumn":25},{"ruleId":"548","severity":1,"message":"549","line":1,"column":35,"nodeType":"550","messageId":"551","endLine":1,"endColumn":44},{"ruleId":"548","severity":1,"message":"576","line":1,"column":46,"nodeType":"550","messageId":"551","endLine":1,"endColumn":57},{"ruleId":"548","severity":1,"message":"620","line":3,"column":8,"nodeType":"550","messageId":"551","endLine":3,"endColumn":23},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"553","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":18},{"ruleId":"548","severity":1,"message":"621","line":5,"column":8,"nodeType":"550","messageId":"551","endLine":5,"endColumn":28},{"ruleId":"548","severity":1,"message":"622","line":42,"column":10,"nodeType":"550","messageId":"551","endLine":42,"endColumn":18},{"ruleId":"548","severity":1,"message":"623","line":42,"column":20,"nodeType":"550","messageId":"551","endLine":42,"endColumn":31},{"ruleId":"548","severity":1,"message":"624","line":81,"column":9,"nodeType":"550","messageId":"551","endLine":81,"endColumn":23},{"ruleId":"548","severity":1,"message":"625","line":104,"column":9,"nodeType":"550","messageId":"551","endLine":104,"endColumn":31},{"ruleId":"569","severity":1,"message":"570","line":115,"column":24,"nodeType":"571","messageId":"572","endLine":115,"endColumn":26},{"ruleId":"548","severity":1,"message":"626","line":139,"column":9,"nodeType":"550","messageId":"551","endLine":139,"endColumn":25},{"ruleId":"569","severity":1,"message":"588","line":142,"column":36,"nodeType":"571","messageId":"589","endLine":142,"endColumn":38},{"ruleId":"569","severity":1,"message":"590","line":147,"column":30,"nodeType":"571","messageId":"572","endLine":147,"endColumn":32},{"ruleId":"569","severity":1,"message":"570","line":179,"column":36,"nodeType":"571","messageId":"572","endLine":179,"endColumn":38},{"ruleId":"569","severity":1,"message":"590","line":180,"column":36,"nodeType":"571","messageId":"572","endLine":180,"endColumn":38},{"ruleId":"581","severity":1,"message":"627","line":192,"column":6,"nodeType":"583","endLine":192,"endColumn":8,"suggestions":"628"},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"568","line":65,"column":5,"nodeType":"550","messageId":"551","endLine":65,"endColumn":8},{"ruleId":"581","severity":1,"message":"582","line":71,"column":6,"nodeType":"583","endLine":71,"endColumn":12,"suggestions":"629"},{"ruleId":"548","severity":1,"message":"630","line":10,"column":3,"nodeType":"550","messageId":"551","endLine":10,"endColumn":13},{"ruleId":"548","severity":1,"message":"568","line":37,"column":5,"nodeType":"550","messageId":"551","endLine":37,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":44,"column":5,"nodeType":"550","messageId":"551","endLine":44,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":73,"column":5,"nodeType":"550","messageId":"551","endLine":73,"endColumn":8},{"ruleId":"548","severity":1,"message":"631","line":10,"column":3,"nodeType":"550","messageId":"551","endLine":10,"endColumn":14},{"ruleId":"548","severity":1,"message":"568","line":45,"column":5,"nodeType":"550","messageId":"551","endLine":45,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":81,"column":5,"nodeType":"550","messageId":"551","endLine":81,"endColumn":8},{"ruleId":"548","severity":1,"message":"632","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":45},{"ruleId":"548","severity":1,"message":"633","line":5,"column":3,"nodeType":"550","messageId":"551","endLine":5,"endColumn":15},{"ruleId":"548","severity":1,"message":"634","line":13,"column":8,"nodeType":"550","messageId":"551","endLine":13,"endColumn":21},{"ruleId":"548","severity":1,"message":"586","line":25,"column":10,"nodeType":"550","messageId":"551","endLine":25,"endColumn":14},{"ruleId":"548","severity":1,"message":"635","line":25,"column":16,"nodeType":"550","messageId":"551","endLine":25,"endColumn":23},{"ruleId":"569","severity":1,"message":"570","line":82,"column":34,"nodeType":"571","messageId":"572","endLine":82,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":96,"column":34,"nodeType":"571","messageId":"572","endLine":96,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":117,"column":34,"nodeType":"571","messageId":"572","endLine":117,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":133,"column":26,"nodeType":"571","messageId":"572","endLine":133,"endColumn":28},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"581","severity":1,"message":"636","line":90,"column":6,"nodeType":"583","endLine":90,"endColumn":13,"suggestions":"637"},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"638","line":5,"column":8,"nodeType":"550","messageId":"551","endLine":5,"endColumn":14},{"ruleId":"548","severity":1,"message":"611","line":7,"column":8,"nodeType":"550","messageId":"551","endLine":7,"endColumn":20},{"ruleId":"548","severity":1,"message":"609","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":16},{"ruleId":"548","severity":1,"message":"639","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":12},{"ruleId":"548","severity":1,"message":"640","line":10,"column":8,"nodeType":"550","messageId":"551","endLine":10,"endColumn":15},{"ruleId":"548","severity":1,"message":"641","line":17,"column":8,"nodeType":"550","messageId":"551","endLine":17,"endColumn":22},{"ruleId":"548","severity":1,"message":"642","line":18,"column":8,"nodeType":"550","messageId":"551","endLine":18,"endColumn":14},{"ruleId":"548","severity":1,"message":"603","line":42,"column":10,"nodeType":"550","messageId":"551","endLine":42,"endColumn":21},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"606","line":23,"column":10,"nodeType":"550","messageId":"551","endLine":23,"endColumn":15},{"ruleId":"548","severity":1,"message":"607","line":23,"column":17,"nodeType":"550","messageId":"551","endLine":23,"endColumn":25},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"638","line":5,"column":8,"nodeType":"550","messageId":"551","endLine":5,"endColumn":14},{"ruleId":"548","severity":1,"message":"611","line":7,"column":8,"nodeType":"550","messageId":"551","endLine":7,"endColumn":20},{"ruleId":"548","severity":1,"message":"609","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":16},{"ruleId":"548","severity":1,"message":"639","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":12},{"ruleId":"548","severity":1,"message":"640","line":10,"column":8,"nodeType":"550","messageId":"551","endLine":10,"endColumn":15},{"ruleId":"548","severity":1,"message":"641","line":17,"column":8,"nodeType":"550","messageId":"551","endLine":17,"endColumn":22},{"ruleId":"548","severity":1,"message":"642","line":18,"column":8,"nodeType":"550","messageId":"551","endLine":18,"endColumn":14},{"ruleId":"548","severity":1,"message":"603","line":42,"column":10,"nodeType":"550","messageId":"551","endLine":42,"endColumn":21},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"638","line":5,"column":8,"nodeType":"550","messageId":"551","endLine":5,"endColumn":14},{"ruleId":"548","severity":1,"message":"611","line":7,"column":8,"nodeType":"550","messageId":"551","endLine":7,"endColumn":20},{"ruleId":"548","severity":1,"message":"609","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":16},{"ruleId":"548","severity":1,"message":"639","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":12},{"ruleId":"548","severity":1,"message":"640","line":10,"column":8,"nodeType":"550","messageId":"551","endLine":10,"endColumn":15},{"ruleId":"548","severity":1,"message":"641","line":17,"column":8,"nodeType":"550","messageId":"551","endLine":17,"endColumn":22},{"ruleId":"548","severity":1,"message":"642","line":18,"column":8,"nodeType":"550","messageId":"551","endLine":18,"endColumn":14},{"ruleId":"548","severity":1,"message":"603","line":43,"column":10,"nodeType":"550","messageId":"551","endLine":43,"endColumn":21},{"ruleId":"548","severity":1,"message":"568","line":39,"column":5,"nodeType":"550","messageId":"551","endLine":39,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":72,"column":5,"nodeType":"550","messageId":"551","endLine":72,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":42,"column":5,"nodeType":"550","messageId":"551","endLine":42,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":75,"column":5,"nodeType":"550","messageId":"551","endLine":75,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":40,"column":5,"nodeType":"550","messageId":"551","endLine":40,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":73,"column":5,"nodeType":"550","messageId":"551","endLine":73,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":40,"column":5,"nodeType":"550","messageId":"551","endLine":40,"endColumn":8},{"ruleId":"548","severity":1,"message":"568","line":73,"column":5,"nodeType":"550","messageId":"551","endLine":73,"endColumn":8},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"638","line":5,"column":8,"nodeType":"550","messageId":"551","endLine":5,"endColumn":14},{"ruleId":"548","severity":1,"message":"611","line":7,"column":8,"nodeType":"550","messageId":"551","endLine":7,"endColumn":20},{"ruleId":"548","severity":1,"message":"609","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":16},{"ruleId":"548","severity":1,"message":"639","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":12},{"ruleId":"548","severity":1,"message":"640","line":10,"column":8,"nodeType":"550","messageId":"551","endLine":10,"endColumn":15},{"ruleId":"548","severity":1,"message":"641","line":17,"column":8,"nodeType":"550","messageId":"551","endLine":17,"endColumn":22},{"ruleId":"548","severity":1,"message":"642","line":18,"column":8,"nodeType":"550","messageId":"551","endLine":18,"endColumn":14},{"ruleId":"548","severity":1,"message":"643","line":42,"column":10,"nodeType":"550","messageId":"551","endLine":42,"endColumn":22},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"606","line":19,"column":10,"nodeType":"550","messageId":"551","endLine":19,"endColumn":15},{"ruleId":"548","severity":1,"message":"607","line":19,"column":17,"nodeType":"550","messageId":"551","endLine":19,"endColumn":25},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"581","severity":1,"message":"636","line":92,"column":6,"nodeType":"583","endLine":92,"endColumn":13,"suggestions":"644"},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"581","severity":1,"message":"636","line":92,"column":6,"nodeType":"583","endLine":92,"endColumn":13,"suggestions":"645"},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"638","line":5,"column":8,"nodeType":"550","messageId":"551","endLine":5,"endColumn":14},{"ruleId":"548","severity":1,"message":"611","line":7,"column":8,"nodeType":"550","messageId":"551","endLine":7,"endColumn":20},{"ruleId":"548","severity":1,"message":"609","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":16},{"ruleId":"548","severity":1,"message":"639","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":12},{"ruleId":"548","severity":1,"message":"640","line":10,"column":8,"nodeType":"550","messageId":"551","endLine":10,"endColumn":15},{"ruleId":"548","severity":1,"message":"641","line":17,"column":8,"nodeType":"550","messageId":"551","endLine":17,"endColumn":22},{"ruleId":"548","severity":1,"message":"642","line":18,"column":8,"nodeType":"550","messageId":"551","endLine":18,"endColumn":14},{"ruleId":"548","severity":1,"message":"602","line":42,"column":10,"nodeType":"550","messageId":"551","endLine":42,"endColumn":23},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"606","line":19,"column":10,"nodeType":"550","messageId":"551","endLine":19,"endColumn":15},{"ruleId":"548","severity":1,"message":"607","line":19,"column":17,"nodeType":"550","messageId":"551","endLine":19,"endColumn":25},{"ruleId":"548","severity":1,"message":"549","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":36},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"611","line":4,"column":8,"nodeType":"550","messageId":"551","endLine":4,"endColumn":20},{"ruleId":"548","severity":1,"message":"646","line":21,"column":18,"nodeType":"550","messageId":"551","endLine":21,"endColumn":27},{"ruleId":"548","severity":1,"message":"647","line":23,"column":10,"nodeType":"550","messageId":"551","endLine":23,"endColumn":15},{"ruleId":"548","severity":1,"message":"576","line":1,"column":38,"nodeType":"550","messageId":"551","endLine":1,"endColumn":49},{"ruleId":"548","severity":1,"message":"638","line":6,"column":8,"nodeType":"550","messageId":"551","endLine":6,"endColumn":14},{"ruleId":"548","severity":1,"message":"611","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":20},{"ruleId":"548","severity":1,"message":"609","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":16},{"ruleId":"548","severity":1,"message":"639","line":10,"column":8,"nodeType":"550","messageId":"551","endLine":10,"endColumn":12},{"ruleId":"548","severity":1,"message":"640","line":11,"column":8,"nodeType":"550","messageId":"551","endLine":11,"endColumn":15},{"ruleId":"548","severity":1,"message":"641","line":18,"column":8,"nodeType":"550","messageId":"551","endLine":18,"endColumn":22},{"ruleId":"548","severity":1,"message":"642","line":19,"column":8,"nodeType":"550","messageId":"551","endLine":19,"endColumn":14},{"ruleId":"548","severity":1,"message":"603","line":50,"column":10,"nodeType":"550","messageId":"551","endLine":50,"endColumn":21},"no-native-reassign",["648"],"no-negated-in-lhs",["649"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getArtists' is defined but never used.","'getSongs' is defined but never used.","'getUsers' is defined but never used.","'getAlbums' is defined but never used.","'setArtists' is assigned a value but never used.","'setSongs' is assigned a value but never used.","'setAlbums' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'withStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PlayArrowIcon' is defined but never used.","'setTotalDownloads' is assigned a value but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ArrowDropUpIcon' is defined but never used.","'Chart' is defined but never used.","'FaceIcon' is defined but never used.","'useCallback' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'artistName' is assigned a value but never used.","'setArtistName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'settingKeys'. Either include it or remove the dependency array.","ArrayExpression",["650"],"'findArtistName' is assigned a value but never used.","'name' is assigned a value but never used.","'React' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.filter() expects a return value from arrow function.","'handleDeleteAlbum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.albums' and 'state.songs'. Either include them or remove the dependency array.",["651"],"'classes' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'state.artists' and 'state.songs'. Either include them or remove the dependency array.",["652"],"'Editartist' is defined but never used.",["653"],"'selectArtists' is assigned a value but never used.","'selectSongs' is assigned a value but never used.",["654"],"'artists' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'Recommended' is assigned a value but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'fetchedAlbums' is assigned a value but never used.","'fetchedSongs' is assigned a value but never used.","'CloudUploadIcon' is defined but never used.","'Selectsongsforartist' is defined but never used.","'allSongs' is assigned a value but never used.","'setAllSongs' is assigned a value but never used.","'handleAddSongs' is assigned a value but never used.","'handleSelectedAddSongs' is assigned a value but never used.","'deleteArtistSong' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state.artists'. Either include it or remove the dependency array.",["655"],["656"],"'addPopular' is defined but never used.","'addTrending' is defined but never used.","'useMemo' is defined but never used.","'addTopcharts' is defined but never used.","'Trendingtable' is defined but never used.","'setName' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'handleNewSort' and 'name'. Either include them or remove the dependency array. If 'handleNewSort' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["657"],"'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'selectAlbums' is assigned a value but never used.",["658"],["659"],"'setActive' is assigned a value but never used.","'color' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"660","fix":"666"},{"desc":"660","fix":"667"},{"desc":"668","fix":"669"},{"desc":"660","fix":"670"},{"desc":"671","fix":"672"},{"desc":"671","fix":"673"},{"desc":"671","fix":"674"},"Update the dependencies array to be: [data, settingKeys]",{"range":"675","text":"676"},"Update the dependencies array to be: [state.albums, state.songs]",{"range":"677","text":"678"},"Update the dependencies array to be: [state.artists, state.songs]",{"range":"679","text":"680"},{"range":"681","text":"676"},{"range":"682","text":"676"},"Update the dependencies array to be: [state.artists]",{"range":"683","text":"684"},{"range":"685","text":"676"},"Update the dependencies array to be: [handleNewSort, name, state]",{"range":"686","text":"687"},{"range":"688","text":"687"},{"range":"689","text":"687"},[1831,1837],"[data, settingKeys]",[5465,5467],"[state.albums, state.songs]",[5137,5139],"[state.artists, state.songs]",[1553,1559],[1831,1837],[4986,4988],"[state.artists]",[1988,1994],[2793,2800],"[handleNewSort, name, state]",[2834,2841],[2838,2845]]